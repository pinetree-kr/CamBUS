com.pinetree.cambus.BaseActivity -> com.pinetree.cambus.a:
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onStart() -> onStart
    void onStop() -> onStop
    void reloadFragment() -> a
    void switchFragment(android.app.Fragment,boolean) -> a
    void switchFragment(android.app.Fragment,int,boolean) -> a
com.pinetree.cambus.MainActivity -> com.pinetree.cambus.MainActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.pinetree.cambus.adapters.ModelListAdapter -> com.pinetree.cambus.a.a:
    android.view.LayoutInflater inflater -> a
    java.util.ArrayList objects -> b
    com.pinetree.cambus.utils.DeviceInfo app -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.pinetree.cambus.adapters.SpinnerAdapter -> com.pinetree.cambus.a.b:
    android.view.LayoutInflater inflater -> a
    java.util.ArrayList objects -> b
    com.pinetree.cambus.utils.DeviceInfo app -> c
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getSpinnerView(int,android.view.View,android.view.ViewGroup) -> a
com.pinetree.cambus.fragments.BaseFragment -> com.pinetree.cambus.b.a:
    com.pinetree.cambus.interfaces.SwitchActivityInterface saInterface -> a
    com.pinetree.cambus.interfaces.SwitchFragmentInterface sfInterface -> b
    com.pinetree.cambus.utils.DeviceInfo app -> c
    void onAttach(android.app.Activity) -> onAttach
    void onCreate(android.os.Bundle) -> onCreate
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onResume() -> onResume
    void loadTextView() -> a
com.pinetree.cambus.fragments.BusListFragment -> com.pinetree.cambus.b.b:
    android.widget.TextView textTitle -> d
    android.widget.TextView filterInfo -> e
    android.widget.TextView timeInfo -> f
    android.widget.TextView distanceInfo -> g
    android.widget.TextView textBtnTime -> h
    android.widget.TextView textBtnPrice -> i
    android.widget.TextView textBtnNearBy -> j
    android.widget.ImageView imageTime -> k
    android.widget.ImageView imagePrice -> l
    android.widget.ImageView imageNearby -> m
    android.graphics.drawable.Drawable dSelected -> n
    android.graphics.drawable.Drawable dUnSelected -> o
    android.widget.ListView listView -> p
    android.widget.ListAdapter listAdapter -> q
    com.pinetree.cambus.models.BusListModel bus_list -> r
    int list_type -> s
    com.pinetree.cambus.utils.DBHandler handler -> t
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onResume() -> onResume
    void onDestroyView() -> onDestroyView
    void loadBtn(java.lang.String) -> a
    void loadListAdapter(java.lang.String) -> b
    void loadTextView() -> a
com.pinetree.cambus.fragments.BusListFragment$OnSortButtonClickListener -> com.pinetree.cambus.b.c:
    com.pinetree.cambus.fragments.BusListFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.pinetree.cambus.fragments.FilterFragment -> com.pinetree.cambus.b.d:
    android.widget.Spinner spinnerDeparture -> d
    android.widget.Spinner spinnerDestination -> e
    android.widget.Spinner spinnerTime -> f
    android.widget.Spinner spinnerType -> g
    com.pinetree.cambus.adapters.SpinnerAdapter adapterDeparture -> h
    com.pinetree.cambus.adapters.SpinnerAdapter adapterDestination -> i
    com.pinetree.cambus.adapters.SpinnerAdapter adapterTime -> j
    com.pinetree.cambus.adapters.SpinnerAdapter adapterType -> k
    android.widget.TextView textDeparture -> l
    android.widget.TextView textDestination -> m
    android.widget.TextView textTime -> n
    android.widget.TextView textType -> o
    android.widget.TextView textSearch -> p
    com.pinetree.cambus.models.BusFilterModel filter -> q
    android.view.View search -> r
    com.pinetree.cambus.utils.DBHandler handler -> s
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onDetach() -> onDetach
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onResume() -> onResume
    void loadTextView() -> a
    void loadDepartureAdapter() -> b
    void loadDestinationAdapter() -> c
    void loadTimeAdapter() -> d
    void loadTypeAdapter() -> e
com.pinetree.cambus.fragments.FilterFragment$OnButtonClickListener -> com.pinetree.cambus.b.e:
    com.pinetree.cambus.fragments.FilterFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.pinetree.cambus.fragments.FilterFragment$OnSpinnerItemSelectedListener -> com.pinetree.cambus.b.f:
    com.pinetree.cambus.fragments.FilterFragment this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.pinetree.cambus.fragments.SplashFragment -> com.pinetree.cambus.b.g:
    com.pinetree.cambus.models.BusFilterModel filter -> d
    com.pinetree.cambus.utils.DBHandler handler -> e
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onResume() -> onResume
    void onDestroyView() -> onDestroyView
    void loadTextView() -> a
com.pinetree.cambus.fragments.SplashFragment$SplashCallbackInterface -> com.pinetree.cambus.b.h:
    com.pinetree.cambus.fragments.SplashFragment this$0 -> a
    void onCallback(com.pinetree.cambus.models.Model) -> a
com.pinetree.cambus.handlers.SwitchFragmentHandler -> com.pinetree.cambus.c.a:
    com.pinetree.cambus.interfaces.SwitchFragmentInterface sfInterface -> a
    android.app.Fragment fragment -> b
    boolean close -> c
    void run() -> run
com.pinetree.cambus.interfaces.FragmentCallbackInterface -> com.pinetree.cambus.d.a:
    void onCallback(com.pinetree.cambus.models.Model) -> a
com.pinetree.cambus.interfaces.ModelAsyncTaskInterface -> com.pinetree.cambus.d.b:
    void onAsyncTask() -> a
com.pinetree.cambus.interfaces.ModelCallbackInterface -> com.pinetree.cambus.d.c:
    void doCallback() -> b
com.pinetree.cambus.interfaces.SwitchActivityInterface -> com.pinetree.cambus.d.d:
com.pinetree.cambus.interfaces.SwitchFragmentInterface -> com.pinetree.cambus.d.e:
    void reloadFragment() -> a
    void switchFragment(android.app.Fragment,boolean) -> a
    void switchFragment(android.app.Fragment,int,boolean) -> a
com.pinetree.cambus.models.BusFilterModel -> com.pinetree.cambus.e.a:
    java.util.ArrayList departure_list -> a
    java.util.ArrayList destination_list -> b
    java.util.ArrayList time_list -> c
    java.util.ArrayList type_list -> d
    boolean isLoaded -> e
    android.content.Context context -> f
    com.pinetree.cambus.utils.DBHandler handler -> g
    java.lang.String fileName -> h
    com.pinetree.cambus.utils.ModelAsyncTask request -> i
    android.app.ProgressDialog dialog -> j
    void initTimeList() -> c
    java.util.ArrayList getDepartureList() -> d
    java.util.ArrayList getDestinationList() -> e
    java.util.ArrayList getTimeList() -> f
    java.util.ArrayList getTypeList() -> g
    void getBusData(android.app.Activity,com.pinetree.cambus.utils.DBHandler,java.lang.String) -> a
    void setDestinationList(int,android.content.Context,com.pinetree.cambus.utils.DBHandler) -> a
    void XLS2SQLite(android.content.Context,java.lang.String,com.pinetree.cambus.utils.DBHandler) -> a
    void onAsyncTask() -> a
    void setCallback(com.pinetree.cambus.interfaces.FragmentCallbackInterface) -> a
    void doCallback() -> b
    void preAsyncTask(java.lang.Object) -> a
    void postAsyncTask() -> h
com.pinetree.cambus.models.BusInfoModel -> com.pinetree.cambus.e.b:
    int bus_no -> a
    java.lang.String preference -> b
    int departure_no -> c
    java.lang.String departure -> d
    int destination_no -> e
    java.lang.String destination -> f
    int middleCity_no -> g
    java.lang.String middleCity -> h
    int company_no -> i
    java.lang.String company -> j
    int departureHour -> k
    int departureMin -> l
    int arrivalHour -> m
    int arrivalMin -> n
    double durationTime -> o
    java.lang.String remarks -> p
    java.lang.String quality -> q
    java.lang.String operation -> r
    int type_no -> s
    java.lang.String type -> t
    double nativePrice -> u
    double foreignerPrice -> v
    double visa -> w
    java.lang.String dn -> x
    java.lang.String lastUpdated -> y
    void setBusNo(int) -> a
    void setPreference(java.lang.String) -> a
    java.lang.String getPreference() -> a
    void setDepartureNo(int) -> b
    void setDestinationNo(int) -> c
    void setMiddleCityNo(int) -> d
    void setDeparture(java.lang.String) -> b
    java.lang.String getDeparture() -> b
    void setDestination(java.lang.String) -> c
    java.lang.String getDestination() -> c
    void setMiddleCity(java.lang.String) -> d
    java.lang.String getMiddleCity() -> d
    void setCompanyNo(int) -> e
    void setCompany(java.lang.String) -> e
    java.lang.String getBusCompany() -> e
    void setDepartureTime(java.util.Date) -> a
    void setDepartureTime(java.lang.String) -> f
    java.lang.String getDepartureTime() -> f
    void setArrivalTime(java.util.Date) -> b
    void setArrivalTime(java.lang.String) -> g
    java.lang.String getArrivalTime() -> g
    void setDurationTime(double) -> a
    double getDurationTime() -> h
    java.lang.String getNearBy() -> i
    void setTypeNo(int) -> f
    void setType(java.lang.String) -> h
    java.lang.String getType() -> j
    void setNativePrice(double) -> b
    double getNativePrice() -> k
    void setForeignerPrice(double) -> c
    double getForeignerPrice() -> l
    void setVisa(double) -> d
    double getVisa() -> m
    void setDN(java.lang.String) -> i
    java.lang.String getDN() -> n
    void setLastUpdate(java.util.Date) -> c
    void setLastUpdate(java.lang.String) -> j
    java.lang.String getLastUpdated() -> o
    void setRemarks(java.lang.String) -> k
    java.lang.String getRemarks() -> p
    void setOperation(java.lang.String) -> l
    java.lang.String getOperation() -> q
    void setQuality(java.lang.String) -> m
    java.lang.String getQuality() -> r
com.pinetree.cambus.models.BusInfoModel$DepartureTimeAscCompare -> com.pinetree.cambus.e.c:
    int compare(com.pinetree.cambus.models.BusInfoModel,com.pinetree.cambus.models.BusInfoModel) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.pinetree.cambus.models.BusInfoModel$DepartureTimeDescCompare -> com.pinetree.cambus.e.d:
    int compare(com.pinetree.cambus.models.BusInfoModel,com.pinetree.cambus.models.BusInfoModel) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.pinetree.cambus.models.BusInfoModel$ForeignerPriceAscCompare -> com.pinetree.cambus.e.e:
    int compare(com.pinetree.cambus.models.BusInfoModel,com.pinetree.cambus.models.BusInfoModel) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.pinetree.cambus.models.BusInfoModel$ForeignerPriceDescCompare -> com.pinetree.cambus.e.f:
    int compare(com.pinetree.cambus.models.BusInfoModel,com.pinetree.cambus.models.BusInfoModel) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.pinetree.cambus.models.BusInfoModel$NearByAscCompare -> com.pinetree.cambus.e.g:
    int compare(com.pinetree.cambus.models.BusInfoModel,com.pinetree.cambus.models.BusInfoModel) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.pinetree.cambus.models.BusInfoModel$NearByDescCompare -> com.pinetree.cambus.e.h:
    int compare(com.pinetree.cambus.models.BusInfoModel,com.pinetree.cambus.models.BusInfoModel) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.pinetree.cambus.models.BusListModel -> com.pinetree.cambus.e.i:
    java.util.ArrayList bus_list -> a
    com.pinetree.cambus.models.DepartureModel departure -> b
    com.pinetree.cambus.models.DestinationModel destination -> c
    com.pinetree.cambus.models.TypeModel type -> d
    int time -> e
    int distance -> f
    java.lang.String order -> g
    boolean asc -> h
    java.util.ArrayList getBusList(java.lang.String) -> a
    void setDeparture(com.pinetree.cambus.models.DepartureModel) -> a
    void setDestination(com.pinetree.cambus.models.DestinationModel) -> a
    void setTime(int) -> a
    void setType(com.pinetree.cambus.models.TypeModel) -> a
    com.pinetree.cambus.models.DepartureModel getDeparture() -> a
    com.pinetree.cambus.models.DestinationModel getDestination() -> b
    int getTime() -> c
    void getBusList(com.pinetree.cambus.utils.DBHandler) -> a
    java.lang.String getOrder() -> d
com.pinetree.cambus.models.CityModel -> com.pinetree.cambus.e.j:
    java.lang.String city_name -> a
    int city_no -> b
    boolean isHigh -> c
    void setCityName(java.lang.String) -> a
    void setCityNo(int) -> a
    java.lang.String getCityName() -> a
    int getCityNo() -> b
    void setHigh(boolean) -> a
    boolean isHigh() -> c
com.pinetree.cambus.models.DepartureModel -> com.pinetree.cambus.e.k:
com.pinetree.cambus.models.DestinationModel -> com.pinetree.cambus.e.l:
com.pinetree.cambus.models.Model -> com.pinetree.cambus.e.m:
    com.pinetree.cambus.interfaces.FragmentCallbackInterface fcInterface -> z
com.pinetree.cambus.models.TypeModel -> com.pinetree.cambus.e.n:
    java.lang.String type_name -> a
    int type_no -> b
    void setTypeName(java.lang.String) -> a
    void setTypeNo(int) -> a
    java.lang.String getTypeName() -> a
    int getTypeNo() -> b
com.pinetree.cambus.utils.DBHandler -> com.pinetree.cambus.utils.a:
    com.pinetree.cambus.utils.DBHelper dbHelper -> a
    android.database.sqlite.SQLiteDatabase db -> b
    com.pinetree.cambus.utils.DBHandler open(android.content.Context) -> a
    void close() -> a
    long insertCity(java.lang.String) -> a
    long insertCompany(java.lang.String) -> b
    long insertType(java.lang.String) -> c
    long insertBusTime(com.pinetree.cambus.models.BusInfoModel) -> a
    java.util.ArrayList getBusDepartureList() -> b
    android.database.Cursor getBusDepartureListCursor() -> c
    java.util.ArrayList getBusTypeList() -> d
    android.database.Cursor getBusTypeListCursor() -> e
    java.util.ArrayList getBusDestinationList(int) -> a
    android.database.Cursor getBusDestinationListCursor(int) -> b
    java.util.ArrayList getBusInfoList(int,int,int,int) -> a
    android.database.Cursor getBusInfoListCursor(int,int,int,int) -> b
    android.database.Cursor getCityNumberCursor(java.lang.String) -> d
    java.lang.String getCityName(int) -> c
    android.database.Cursor getCityNameCursor(int) -> d
    java.lang.String getTypeName(int) -> e
    android.database.Cursor getTypeNameCursor(int) -> f
    android.database.Cursor getTypeNumberCursor(java.lang.String) -> e
    java.lang.String getCompanyName(int) -> g
    android.database.Cursor getCompanyNameCursor(int) -> h
    android.database.Cursor getCompanyNumberCursor(java.lang.String) -> f
com.pinetree.cambus.utils.DBHelper -> com.pinetree.cambus.utils.b:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.pinetree.cambus.utils.DateUtils -> com.pinetree.cambus.utils.c:
    java.lang.String getTimes(int) -> a
    java.lang.String getTimes(java.lang.String) -> a
com.pinetree.cambus.utils.DeviceInfo -> com.pinetree.cambus.utils.DeviceInfo:
    java.lang.String PACKAGE_NAME -> a
    android.util.DisplayMetrics displayMetrics -> b
    float rateDpi -> c
    float rateWidth -> d
    float rateHeight -> e
    int oWidth -> f
    int oHeight -> g
    void onCreate() -> onCreate
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void getScreenInfo() -> a
com.pinetree.cambus.utils.ExcelHandler -> com.pinetree.cambus.utils.d:
    java.util.ArrayList getBusFromXLS(android.content.Context,java.lang.String) -> a
com.pinetree.cambus.utils.FontLoader -> com.pinetree.cambus.utils.e:
    android.graphics.Typeface getFontTypeface(android.content.res.AssetManager,java.lang.String) -> a
    int getFontSizeFromPt(float,float) -> a
com.pinetree.cambus.utils.ImageLoader -> com.pinetree.cambus.utils.f:
    android.graphics.drawable.Drawable getDrawableFromBitmap(android.content.res.Resources,android.graphics.Bitmap) -> a
    android.graphics.Bitmap getResizedBitmap(android.graphics.Bitmap,float,float,float) -> a
    android.graphics.drawable.Drawable getResizedDrawableFromRes(android.content.res.Resources,int,float,float,float) -> a
com.pinetree.cambus.utils.ModelAsyncTask -> com.pinetree.cambus.utils.g:
    com.pinetree.cambus.models.Model doInBackground(com.pinetree.cambus.models.Model[]) -> a
    void onCancelled() -> onCancelled
    void onPreExecute() -> onPreExecute
    void onPostExecute(com.pinetree.cambus.models.Model) -> a
    void onProgressUpdate(com.pinetree.cambus.models.Model[]) -> b
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.pinetree.cambus.utils.NumberUtils -> com.pinetree.cambus.utils.h:
    boolean isNumeric(java.lang.String) -> a
com.pinetree.cambus.viewholders.ViewHolder -> com.pinetree.cambus.f.a:
    android.view.View get(android.view.View,int) -> a
org.apache.poi.EncryptedDocumentException -> a.a.a.a:
org.apache.poi.OldFileFormatException -> a.a.a.b:
org.apache.poi.POIDocument -> a.a.a.c:
    org.apache.poi.poifs.filesystem.DirectoryNode directory -> a
    org.apache.poi.util.POILogger logger -> b
    boolean initialized -> c
org.apache.poi.UnsupportedFileFormatException -> a.a.a.d:
org.apache.poi.ddf.EscherRecord -> a.a.a.a.a:
    org.apache.poi.util.BitField fInstance -> a
    org.apache.poi.util.BitField fVersion -> b
    int serialize(int,byte[],org.apache.poi.ddf.EscherSerializationListener) -> a
    int getRecordSize() -> a
    java.lang.Object clone() -> clone
org.apache.poi.ddf.EscherSerializationListener -> a.a.a.a.b:
org.apache.poi.ddf.NullEscherSerializationListener -> a.a.a.a.c:
org.apache.poi.hpsf.ClassID -> a.a.a.b.a:
    org.apache.poi.hpsf.ClassID OLE10_PACKAGE -> a
    org.apache.poi.hpsf.ClassID PPT_SHOW -> b
    org.apache.poi.hpsf.ClassID XLS_WORKBOOK -> c
    org.apache.poi.hpsf.ClassID TXT_ONLY -> d
    org.apache.poi.hpsf.ClassID EXCEL97 -> e
    org.apache.poi.hpsf.ClassID EXCEL95 -> f
    org.apache.poi.hpsf.ClassID WORD97 -> g
    org.apache.poi.hpsf.ClassID WORD95 -> h
    org.apache.poi.hpsf.ClassID POWERPOINT97 -> i
    org.apache.poi.hpsf.ClassID POWERPOINT95 -> j
    org.apache.poi.hpsf.ClassID EQUATION30 -> k
    byte[] bytes -> l
    byte[] read(byte[],int) -> a
    void write(byte[],int) -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.apache.poi.hssf.OldExcelFormatException -> a.a.a.c.a:
org.apache.poi.hssf.model.HSSFFormulaParser -> a.a.a.c.a.a:
    java.lang.String toFormulaString(org.apache.poi.hssf.usermodel.HSSFWorkbook,org.apache.poi.ss.formula.ptg.Ptg[]) -> a
org.apache.poi.hssf.model.InternalSheet -> a.a.a.c.a.b:
    org.apache.poi.util.POILogger log -> j
    java.util.List _records -> k
    org.apache.poi.hssf.record.PrintGridlinesRecord printGridlines -> a
    org.apache.poi.hssf.record.GridsetRecord gridset -> b
    org.apache.poi.hssf.record.GutsRecord _gutsRecord -> l
    org.apache.poi.hssf.record.DefaultColWidthRecord defaultcolwidth -> c
    org.apache.poi.hssf.record.DefaultRowHeightRecord defaultrowheight -> d
    org.apache.poi.hssf.record.aggregates.PageSettingsBlock _psBlock -> m
    org.apache.poi.hssf.record.aggregates.WorksheetProtectionBlock _protectionBlock -> n
    org.apache.poi.hssf.record.WindowTwoRecord windowTwo -> e
    org.apache.poi.hssf.record.SelectionRecord _selection -> f
    org.apache.poi.hssf.record.aggregates.MergedCellsTable _mergedCellsTable -> o
    org.apache.poi.hssf.record.aggregates.ColumnInfoRecordsAggregate _columnInfos -> g
    org.apache.poi.hssf.record.DimensionsRecord _dimensions -> p
    org.apache.poi.hssf.record.aggregates.RowRecordsAggregate _rowsAggregate -> h
    org.apache.poi.hssf.record.aggregates.DataValidityTable _dataValidityTable -> q
    org.apache.poi.hssf.record.aggregates.ConditionalFormattingTable condFormatting -> r
    java.util.Iterator rowRecIterator -> s
    boolean _isUncalced -> i
    org.apache.poi.hssf.model.InternalSheet createSheet(org.apache.poi.hssf.model.RecordStream) -> a
    void spillAggregate(org.apache.poi.hssf.record.aggregates.RecordAggregate,java.util.List) -> a
    org.apache.poi.hssf.record.aggregates.RowRecordsAggregate getRowsAggregate() -> a
    void addValueRecord(int,org.apache.poi.hssf.record.CellValueRecordInterface) -> a
    void replaceValueRecord(org.apache.poi.hssf.record.CellValueRecordInterface) -> a
    void addRow(org.apache.poi.hssf.record.RowRecord) -> a
    java.util.Iterator getCellValueIterator() -> b
    org.apache.poi.hssf.record.RowRecord getNextRow() -> c
    org.apache.poi.hssf.record.BOFRecord createBOF() -> d
    org.apache.poi.hssf.record.CalcModeRecord createCalcMode() -> e
    org.apache.poi.hssf.record.CalcCountRecord createCalcCount() -> f
    org.apache.poi.hssf.record.RefModeRecord createRefMode() -> g
    org.apache.poi.hssf.record.IterationRecord createIteration() -> h
    org.apache.poi.hssf.record.DeltaRecord createDelta() -> i
    org.apache.poi.hssf.record.SaveRecalcRecord createSaveRecalc() -> j
    org.apache.poi.hssf.record.PrintHeadersRecord createPrintHeaders() -> k
    org.apache.poi.hssf.record.PrintGridlinesRecord createPrintGridlines() -> l
    org.apache.poi.hssf.record.GridsetRecord createGridset() -> m
    org.apache.poi.hssf.record.GutsRecord createGuts() -> n
    org.apache.poi.hssf.record.DefaultRowHeightRecord createDefaultRowHeight() -> o
    org.apache.poi.hssf.record.WSBoolRecord createWSBool() -> p
    org.apache.poi.hssf.record.DefaultColWidthRecord createDefaultColWidth() -> q
    short getXFIndexForColAt(short) -> a
    org.apache.poi.hssf.record.DimensionsRecord createDimensions() -> r
    org.apache.poi.hssf.record.WindowTwoRecord createWindowTwo() -> s
    org.apache.poi.hssf.record.SelectionRecord createSelection() -> t
    int findFirstRecordLocBySid(short) -> b
org.apache.poi.hssf.model.InternalSheet$1 -> a.a.a.c.a.c:
    java.util.List val$recs -> a
    void visitRecord(org.apache.poi.hssf.record.Record) -> a
org.apache.poi.hssf.model.InternalSheet$UnsupportedBOFType -> a.a.a.c.a.d:
    int type -> a
    int getType() -> a
org.apache.poi.hssf.model.InternalWorkbook -> a.a.a.c.a.e:
    org.apache.poi.util.POILogger log -> b
    org.apache.poi.hssf.model.WorkbookRecordList records -> c
    org.apache.poi.hssf.record.SSTRecord sst -> a
    org.apache.poi.hssf.model.LinkTable linkTable -> d
    java.util.List boundsheets -> e
    java.util.List formats -> f
    java.util.List hyperlinks -> g
    int numxfs -> h
    int numfonts -> i
    int maxformatid -> j
    boolean uses1904datewindowing -> k
    java.util.List escherBSERecords -> l
    org.apache.poi.hssf.record.WindowOneRecord windowOne -> m
    org.apache.poi.hssf.record.FileSharingRecord fileShare -> n
    org.apache.poi.hssf.record.WriteAccessRecord writeAccess -> o
    org.apache.poi.hssf.record.WriteProtectRecord writeProtect -> p
    java.util.Map commentRecords -> q
    org.apache.poi.hssf.model.InternalWorkbook createWorkbook(java.util.List) -> a
    org.apache.poi.hssf.model.InternalWorkbook createWorkbook() -> a
    int getNumRecords() -> b
    org.apache.poi.hssf.record.BoundSheetRecord getBoundSheetRec(int) -> j
    java.lang.String getSheetName(int) -> a
    int getNumSheets() -> c
    org.apache.poi.hssf.record.ExtendedFormatRecord getExFormatAt(int) -> b
    int addSSTString(org.apache.poi.hssf.record.common.UnicodeString) -> a
    org.apache.poi.hssf.record.common.UnicodeString getSSTString(int) -> c
    void insertSST() -> d
    org.apache.poi.hssf.record.BOFRecord createBOF() -> h
    org.apache.poi.hssf.record.MMSRecord createMMS() -> i
    org.apache.poi.hssf.record.WriteAccessRecord createWriteAccess() -> j
    org.apache.poi.hssf.record.CodepageRecord createCodepage() -> k
    org.apache.poi.hssf.record.DSFRecord createDSF() -> l
    org.apache.poi.hssf.record.TabIdRecord createTabId() -> m
    org.apache.poi.hssf.record.FnGroupCountRecord createFnGroupCount() -> n
    org.apache.poi.hssf.record.WindowProtectRecord createWindowProtect() -> o
    org.apache.poi.hssf.record.ProtectRecord createProtect() -> p
    org.apache.poi.hssf.record.PasswordRecord createPassword() -> q
    org.apache.poi.hssf.record.ProtectionRev4Record createProtectionRev4() -> r
    org.apache.poi.hssf.record.PasswordRev4Record createPasswordRev4() -> s
    org.apache.poi.hssf.record.WindowOneRecord createWindowOne() -> t
    org.apache.poi.hssf.record.BackupRecord createBackup() -> u
    org.apache.poi.hssf.record.HideObjRecord createHideObj() -> v
    org.apache.poi.hssf.record.DateWindow1904Record createDateWindow1904() -> w
    org.apache.poi.hssf.record.PrecisionRecord createPrecision() -> x
    org.apache.poi.hssf.record.RefreshAllRecord createRefreshAll() -> y
    org.apache.poi.hssf.record.BookBoolRecord createBookBool() -> z
    org.apache.poi.hssf.record.FontRecord createFont() -> A
    org.apache.poi.hssf.record.FormatRecord createFormat(int) -> k
    org.apache.poi.hssf.record.ExtendedFormatRecord createExtendedFormat(int) -> l
    org.apache.poi.hssf.record.StyleRecord createStyle(int) -> m
    org.apache.poi.hssf.record.UseSelFSRecord createUseSelFS() -> B
    org.apache.poi.hssf.record.BoundSheetRecord createBoundSheet(int) -> n
    org.apache.poi.hssf.record.CountryRecord createCountry() -> C
    org.apache.poi.hssf.record.ExtSSTRecord createExtendedSST() -> D
    org.apache.poi.hssf.model.LinkTable getOrCreateLinkTable() -> E
    java.lang.String findSheetFirstNameFromExternSheet(int) -> d
    java.lang.String findSheetLastNameFromExternSheet(int) -> e
    java.lang.String findSheetNameFromIndex(int) -> o
    org.apache.poi.ss.formula.EvaluationWorkbook$ExternalSheet getExternalSheet(int) -> f
    int getFirstSheetIndexFromExternSheetIndex(int) -> g
    int getLastSheetIndexFromExternSheetIndex(int) -> h
    int getNumNames() -> e
    org.apache.poi.hssf.record.NameRecord getNameRecord(int) -> i
    org.apache.poi.hssf.record.NameCommentRecord getNameCommentRecord(org.apache.poi.hssf.record.NameRecord) -> a
    java.util.List getFormats() -> f
    boolean isUsing1904DateWindowing() -> g
    java.lang.String resolveNameXText(int,int) -> a
org.apache.poi.hssf.model.LinkTable -> a.a.a.c.a.f:
    org.apache.poi.hssf.model.LinkTable$ExternalBookBlock[] _externalBookBlocks -> a
    org.apache.poi.hssf.record.ExternSheetRecord _externSheetRecord -> b
    java.util.List _definedNames -> c
    int _recordCount -> d
    org.apache.poi.hssf.model.WorkbookRecordList _workbookRecordList -> e
    org.apache.poi.hssf.record.ExternSheetRecord readExtSheetRecord(org.apache.poi.hssf.model.RecordStream) -> a
    int getRecordCount() -> a
    int getNumNames() -> b
    org.apache.poi.hssf.record.NameRecord getNameRecord(int) -> a
    java.lang.String[] getExternalBookAndSheetName(int) -> b
    int getFirstInternalSheetIndexForExtIndex(int) -> c
    int getLastInternalSheetIndexForExtIndex(int) -> d
    int checkExternSheet(int) -> e
    int checkExternSheet(int,int) -> a
    int findFirstRecordLocBySid(short) -> a
    java.lang.String resolveNameXText(int,int,org.apache.poi.hssf.model.InternalWorkbook) -> a
org.apache.poi.hssf.model.LinkTable$CRNBlock -> a.a.a.c.a.g:
    org.apache.poi.hssf.record.CRNCountRecord _countRecord -> a
    org.apache.poi.hssf.record.CRNRecord[] _crns -> b
org.apache.poi.hssf.model.LinkTable$ExternalBookBlock -> a.a.a.c.a.h:
    org.apache.poi.hssf.record.SupBookRecord _externalBookRecord -> a
    org.apache.poi.hssf.record.ExternalNameRecord[] _externalNameRecords -> b
    org.apache.poi.hssf.model.LinkTable$CRNBlock[] _crnBlocks -> c
    org.apache.poi.hssf.record.SupBookRecord getExternalBookRecord() -> a
    java.lang.String getNameText(int) -> a
    org.apache.poi.hssf.record.ExternalNameRecord[] access$000(org.apache.poi.hssf.model.LinkTable$ExternalBookBlock) -> a
org.apache.poi.hssf.model.RecordOrderer -> a.a.a.c.a.i:
    void addNewSheetRecord(java.util.List,org.apache.poi.hssf.record.RecordBase) -> a
    int findSheetInsertPos(java.util.List,java.lang.Class) -> a
    int getWorksheetProtectionBlockInsertPos(java.util.List) -> a
    boolean isProtectionSubsequentRecord(java.lang.Object) -> a
    int getPageBreakRecordInsertPos(java.util.List) -> b
    boolean isPageBreakPriorRecord(java.lang.Object) -> b
    int findInsertPosForNewCondFormatTable(java.util.List) -> c
    int findInsertPosForNewMergedRecordTable(java.util.List) -> d
    int findDataValidationTableInsertPos(java.util.List) -> e
    boolean isDVTPriorRecord(org.apache.poi.hssf.record.RecordBase) -> a
    boolean isDVTSubsequentRecord(short) -> a
    int getDimensionsIndex(java.util.List) -> f
    int getGutsRecordInsertPos(java.util.List) -> g
    boolean isGutsPriorRecord(org.apache.poi.hssf.record.RecordBase) -> b
    boolean isEndOfRowBlock(int) -> a
    boolean isRowBlockRecord(int) -> b
org.apache.poi.hssf.model.RecordStream -> a.a.a.c.a.j:
    java.util.List _list -> a
    int _nextIndex -> b
    int _countRead -> c
    int _endIx -> d
    boolean hasNext() -> a
    org.apache.poi.hssf.record.Record getNext() -> b
    java.lang.Class peekNextClass() -> c
    int peekNextSid() -> d
    int getCountRead() -> e
org.apache.poi.hssf.model.RowBlocksReader -> a.a.a.c.a.k:
    java.util.List _plainRecords -> a
    org.apache.poi.hssf.record.aggregates.SharedValueManager _sfm -> b
    org.apache.poi.hssf.record.MergeCellsRecord[] _mergedCellsRecords -> c
    org.apache.poi.hssf.record.MergeCellsRecord[] getLooseMergedCells() -> a
    org.apache.poi.hssf.record.aggregates.SharedValueManager getSharedFormulaManager() -> b
    org.apache.poi.hssf.model.RecordStream getPlainRecordStream() -> c
org.apache.poi.hssf.model.WorkbookRecordList -> a.a.a.c.a.l:
    java.util.List records -> a
    int protpos -> b
    int bspos -> c
    int tabpos -> d
    int fontpos -> e
    int xfpos -> f
    int backuppos -> g
    int namepos -> h
    int supbookpos -> i
    int externsheetPos -> j
    int palettepos -> k
    void setRecords(java.util.List) -> a
    int size() -> a
    org.apache.poi.hssf.record.Record get(int) -> a
    void add(int,org.apache.poi.hssf.record.Record) -> a
    java.util.List getRecords() -> b
    java.util.Iterator iterator() -> iterator
    int getProtpos() -> c
    void setProtpos(int) -> b
    int getBspos() -> d
    void setBspos(int) -> c
    int getTabpos() -> e
    void setTabpos(int) -> d
    int getFontpos() -> f
    void setFontpos(int) -> e
    int getXfpos() -> g
    void setXfpos(int) -> f
    int getBackuppos() -> h
    void setBackuppos(int) -> g
    int getPalettepos() -> i
    void setPalettepos(int) -> h
    int getNamepos() -> j
    int getSupbookpos() -> k
    void setNamepos(int) -> i
    void setSupbookpos(int) -> j
    int getExternsheetPos() -> l
    void setExternsheetPos(int) -> k
org.apache.poi.hssf.record.AbstractEscherHolderRecord -> a.a.a.c.b.a:
    boolean DESERIALISE -> a
    java.util.List escherRecords -> b
    org.apache.poi.hssf.util.LazilyConcatenatedByteArray rawDataContainer -> c
    java.lang.String toString() -> toString
    java.lang.String getRecordName() -> a
    int serialize(int,byte[]) -> a
    int getRecordSize() -> b
    short getSid() -> c
    java.lang.Object clone() -> clone
    java.util.List getEscherRecords() -> d
    void join(org.apache.poi.hssf.record.AbstractEscherHolderRecord) -> a
    void processContinueRecord(byte[]) -> a
    byte[] getRawData() -> e
org.apache.poi.hssf.record.ArrayRecord -> a.a.a.c.b.b:
    int _options -> a
    int _field3notUsed -> b
    org.apache.poi.ss.formula.Formula _formula -> c
    org.apache.poi.ss.formula.ptg.Ptg[] getFormulaTokens() -> a_
    int getExtraDataSize() -> d
    void serializeExtraData(org.apache.poi.util.LittleEndianOutput) -> a_
    short getSid() -> c
    java.lang.String toString() -> toString
org.apache.poi.hssf.record.AutoFilterInfoRecord -> a.a.a.c.b.c:
    short _cEntries -> a
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.BOFRecord -> a.a.a.c.b.d:
    int field_1_version -> a
    int field_2_type -> b
    int field_3_build -> c
    int field_4_year -> d
    int field_5_history -> e
    int field_6_rversion -> f
    void setVersion(int) -> a
    void setType(int) -> b
    void setBuild(int) -> c
    void setBuildYear(int) -> d
    void setHistoryBitMask(int) -> e
    void setRequiredVersion(int) -> f
    int getVersion() -> d
    int getType() -> e
    int getBuild() -> f
    int getBuildYear() -> g
    int getHistoryBitMask() -> h
    int getRequiredVersion() -> i
    java.lang.String toString() -> toString
    java.lang.String getTypeName() -> j
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.BackupRecord -> a.a.a.c.b.e:
    short field_1_backup -> a
    void setBackup(short) -> a
    short getBackup() -> d
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
org.apache.poi.hssf.record.BiffHeaderInput -> a.a.a.c.b.f:
    int readRecordSID() -> a
    int readDataSize() -> b
    int available() -> available
org.apache.poi.hssf.record.BlankRecord -> a.a.a.c.b.g:
    int field_1_row -> a
    short field_2_col -> b
    short field_3_xf -> c
    void setRow(int) -> a
    int getRow() -> d
    short getColumn() -> e
    void setXFIndex(short) -> a
    short getXFIndex() -> f
    void setColumn(short) -> b
    short getSid() -> c
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.BookBoolRecord -> a.a.a.c.b.h:
    short field_1_save_link_values -> a
    void setSaveLinkValues(short) -> a
    short getSaveLinkValues() -> d
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
org.apache.poi.hssf.record.BoolErrRecord -> a.a.a.c.b.i:
    int _value -> a
    boolean _isError -> b
    void setValue(boolean) -> a
    void setValue(byte) -> a
    boolean getBooleanValue() -> g
    byte getErrorValue() -> h
    boolean isBoolean() -> i
    java.lang.String getRecordName() -> j
    void appendValueText(java.lang.StringBuilder) -> a
    void serializeValue(org.apache.poi.util.LittleEndianOutput) -> b
    int getValueDataSize() -> k
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.BottomMarginRecord -> a.a.a.c.b.j:
    double field_1_margin -> a
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    double getMargin() -> d
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.BoundSheetRecord -> a.a.a.c.b.k:
    org.apache.poi.util.BitField hiddenFlag -> a
    org.apache.poi.util.BitField veryHiddenFlag -> b
    int field_1_position_of_BOF -> c
    int field_2_option_flags -> d
    int field_4_isMultibyteUnicode -> e
    java.lang.String field_5_sheetname -> f
    java.util.Comparator BOFComparator -> g
    void setSheetname(java.lang.String) -> a
    int getPositionOfBof() -> d
    boolean isMultibyte() -> f
    java.lang.String getSheetname() -> e
    java.lang.String toString() -> toString
    int getDataSize() -> a
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    short getSid() -> c
org.apache.poi.hssf.record.BoundSheetRecord$1 -> a.a.a.c.b.l:
    int compare(org.apache.poi.hssf.record.BoundSheetRecord,org.apache.poi.hssf.record.BoundSheetRecord) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.poi.hssf.record.CFHeaderRecord -> a.a.a.c.b.m:
    int field_1_numcf -> a
    int field_2_need_recalculation -> b
    org.apache.poi.ss.util.CellRangeAddress field_3_enclosing_cell_range -> c
    org.apache.poi.ss.util.CellRangeAddressList field_4_cell_ranges -> d
    int getNumberOfConditionalFormats() -> d
    boolean getNeedRecalculation() -> e
    org.apache.poi.ss.util.CellRangeAddress getEnclosingCellRange() -> f
    java.lang.String toString() -> toString
    int getDataSize() -> a
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.CFRuleRecord -> a.a.a.c.b.n:
    byte field_1_condition_type -> a
    byte field_2_comparison_operator -> b
    int field_5_options -> c
    org.apache.poi.util.BitField modificationBits -> d
    org.apache.poi.util.BitField alignHor -> e
    org.apache.poi.util.BitField alignVer -> f
    org.apache.poi.util.BitField alignWrap -> g
    org.apache.poi.util.BitField alignRot -> h
    org.apache.poi.util.BitField alignJustLast -> i
    org.apache.poi.util.BitField alignIndent -> j
    org.apache.poi.util.BitField alignShrin -> k
    org.apache.poi.util.BitField notUsed1 -> l
    org.apache.poi.util.BitField protLocked -> m
    org.apache.poi.util.BitField protHidden -> n
    org.apache.poi.util.BitField bordLeft -> o
    org.apache.poi.util.BitField bordRight -> p
    org.apache.poi.util.BitField bordTop -> q
    org.apache.poi.util.BitField bordBot -> r
    org.apache.poi.util.BitField bordTlBr -> s
    org.apache.poi.util.BitField bordBlTr -> t
    org.apache.poi.util.BitField pattStyle -> u
    org.apache.poi.util.BitField pattCol -> v
    org.apache.poi.util.BitField pattBgCol -> w
    org.apache.poi.util.BitField notUsed2 -> x
    org.apache.poi.util.BitField undocumented -> y
    org.apache.poi.util.BitField fmtBlockBits -> z
    org.apache.poi.util.BitField font -> A
    org.apache.poi.util.BitField align -> B
    org.apache.poi.util.BitField bord -> C
    org.apache.poi.util.BitField patt -> D
    org.apache.poi.util.BitField prot -> E
    org.apache.poi.util.BitField alignTextDir -> F
    short field_6_not_used -> G
    org.apache.poi.hssf.record.cf.FontFormatting _fontFormatting -> H
    org.apache.poi.hssf.record.cf.BorderFormatting _borderFormatting -> I
    org.apache.poi.hssf.record.cf.PatternFormatting _patternFormatting -> J
    org.apache.poi.ss.formula.Formula field_17_formula1 -> K
    org.apache.poi.ss.formula.Formula field_18_formula2 -> L
    org.apache.poi.util.BitField bf(int) -> a
    boolean containsFontFormattingBlock() -> d
    boolean containsBorderFormattingBlock() -> e
    boolean containsPatternFormattingBlock() -> f
    int getOptions() -> g
    boolean getOptionFlag(org.apache.poi.util.BitField) -> a
    short getSid() -> c
    int getFormulaSize(org.apache.poi.ss.formula.Formula) -> a
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.CRNCountRecord -> a.a.a.c.b.o:
    int field_1_number_crn_records -> a
    int field_2_sheet_table_index -> b
    int getNumberOfCRNs() -> d
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
org.apache.poi.hssf.record.CRNRecord -> a.a.a.c.b.p:
    int field_1_last_column_index -> a
    int field_2_first_column_index -> b
    int field_3_row_index -> c
    java.lang.Object[] field_4_constant_values -> d
    java.lang.String toString() -> toString
    int getDataSize() -> a
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    short getSid() -> c
org.apache.poi.hssf.record.CalcCountRecord -> a.a.a.c.b.q:
    short field_1_iterations -> a
    void setIterations(short) -> a
    short getIterations() -> d
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.CalcModeRecord -> a.a.a.c.b.r:
    short field_1_calcmode -> a
    void setCalcMode(short) -> a
    short getCalcMode() -> d
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.CellRecord -> a.a.a.c.b.s:
    int _rowIndex -> a
    int _columnIndex -> b
    int _formatIndex -> c
    void setRow(int) -> a
    void setColumn(short) -> a
    void setXFIndex(short) -> b
    int getRow() -> d
    short getColumn() -> e
    short getXFIndex() -> f
    java.lang.String toString() -> toString
    void appendValueText(java.lang.StringBuilder) -> a
    java.lang.String getRecordName() -> j
    void serializeValue(org.apache.poi.util.LittleEndianOutput) -> b
    int getValueDataSize() -> k
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    void copyBaseFields(org.apache.poi.hssf.record.CellRecord) -> a
org.apache.poi.hssf.record.CellValueRecordInterface -> a.a.a.c.b.t:
    int getRow() -> d
    short getColumn() -> e
    short getXFIndex() -> f
org.apache.poi.hssf.record.CodepageRecord -> a.a.a.c.b.u:
    short field_1_codepage -> a
    void setCodepage(short) -> a
    short getCodepage() -> d
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
org.apache.poi.hssf.record.ColumnInfoRecord -> a.a.a.c.b.v:
    int _firstCol -> a
    int _lastCol -> b
    int _colWidth -> c
    int _xfIndex -> d
    int _options -> e
    org.apache.poi.util.BitField hidden -> f
    org.apache.poi.util.BitField outlevel -> g
    org.apache.poi.util.BitField collapsed -> h
    int field_6_reserved -> i
    void setColumnWidth(int) -> a
    int getFirstColumn() -> d
    int getLastColumn() -> e
    int getColumnWidth() -> f
    int getXFIndex() -> g
    boolean getHidden() -> h
    int getOutlineLevel() -> i
    boolean getCollapsed() -> j
    boolean containsColumn(int) -> b
    short getSid() -> c
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.ContinueRecord -> a.a.a.c.b.w:
    byte[] _data -> a
    int getDataSize() -> a
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    byte[] getData() -> d
    java.lang.String toString() -> toString
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.CountryRecord -> a.a.a.c.b.x:
    short field_1_default_country -> a
    short field_2_current_country -> b
    void setDefaultCountry(short) -> a
    void setCurrentCountry(short) -> b
    short getDefaultCountry() -> d
    short getCurrentCountry() -> e
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
org.apache.poi.hssf.record.DBCellRecord -> a.a.a.c.b.y:
    int field_1_row_offset -> a
    short[] field_2_cell_offsets -> b
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.DBCellRecord$Builder -> a.a.a.c.b.z:
    short[] _cellOffsets -> a
    int _nCellOffsets -> b
    void addCellOffset(int) -> a
    org.apache.poi.hssf.record.DBCellRecord build(int) -> b
org.apache.poi.hssf.record.DConRefRecord -> a.a.a.c.b.aa:
    int firstRow -> a
    int lastRow -> b
    int firstCol -> c
    int lastCol -> d
    int charCount -> e
    int charType -> f
    byte[] path -> g
    byte[] _unused -> h
    int getDataSize() -> a
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    short getSid() -> c
    java.lang.String toString() -> toString
    java.lang.String getReadablePath() -> d
org.apache.poi.hssf.record.DSFRecord -> a.a.a.c.b.ab:
    org.apache.poi.util.BitField biff5BookStreamFlag -> a
    int _options -> b
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
org.apache.poi.hssf.record.DVALRecord -> a.a.a.c.b.ac:
    short field_1_options -> a
    int field_2_horiz_pos -> b
    int field_3_vert_pos -> c
    int field_cbo_id -> d
    int field_5_dv_no -> e
    short getOptions() -> d
    int getHorizontalPos() -> e
    int getVerticalPos() -> f
    int getObjectID() -> g
    int getDVRecNo() -> h
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.DVRecord -> a.a.a.c.b.ad:
    org.apache.poi.hssf.record.common.UnicodeString NULL_TEXT_STRING -> a
    int _option_flags -> b
    org.apache.poi.hssf.record.common.UnicodeString _promptTitle -> c
    org.apache.poi.hssf.record.common.UnicodeString _errorTitle -> d
    org.apache.poi.hssf.record.common.UnicodeString _promptText -> e
    org.apache.poi.hssf.record.common.UnicodeString _errorText -> f
    short _not_used_1 -> g
    org.apache.poi.ss.formula.Formula _formula1 -> h
    short _not_used_2 -> i
    org.apache.poi.ss.formula.Formula _formula2 -> j
    org.apache.poi.ss.util.CellRangeAddressList _regions -> k
    org.apache.poi.util.BitField opt_data_type -> l
    org.apache.poi.util.BitField opt_error_style -> m
    org.apache.poi.util.BitField opt_string_list_formula -> n
    org.apache.poi.util.BitField opt_empty_cell_allowed -> o
    org.apache.poi.util.BitField opt_suppress_dropdown_arrow -> p
    org.apache.poi.util.BitField opt_show_prompt_on_cell_selected -> q
    org.apache.poi.util.BitField opt_show_error_on_invalid_value -> r
    org.apache.poi.util.BitField opt_condition_operator -> s
    java.lang.String toString() -> toString
    java.lang.String formatTextTitle(org.apache.poi.hssf.record.common.UnicodeString) -> a
    void appendFormula(java.lang.StringBuffer,java.lang.String,org.apache.poi.ss.formula.Formula) -> a
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    void serializeUnicodeString(org.apache.poi.hssf.record.common.UnicodeString,org.apache.poi.util.LittleEndianOutput) -> a
    int getUnicodeStringSize(org.apache.poi.hssf.record.common.UnicodeString) -> b
    int getDataSize() -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.DateWindow1904Record -> a.a.a.c.b.ae:
    short field_1_window -> a
    void setWindowing(short) -> a
    short getWindowing() -> d
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
org.apache.poi.hssf.record.DefaultColWidthRecord -> a.a.a.c.b.af:
    int field_1_col_width -> a
    void setColWidth(int) -> a
    int getColWidth() -> d
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.DefaultRowHeightRecord -> a.a.a.c.b.ag:
    short field_1_option_flags -> a
    short field_2_row_height -> b
    void setOptionFlags(short) -> a
    void setRowHeight(short) -> b
    short getOptionFlags() -> d
    short getRowHeight() -> e
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.DeltaRecord -> a.a.a.c.b.ah:
    double field_1_max_change -> a
    double getMaxChange() -> d
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.DimensionsRecord -> a.a.a.c.b.ai:
    int field_1_first_row -> a
    int field_2_last_row -> b
    short field_3_first_col -> c
    short field_4_last_col -> d
    short field_5_zero -> e
    void setFirstRow(int) -> a
    void setLastRow(int) -> b
    void setFirstCol(short) -> a
    void setLastCol(short) -> b
    int getFirstRow() -> d
    int getLastRow() -> e
    short getFirstCol() -> f
    short getLastCol() -> g
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.DrawingGroupRecord -> a.a.a.c.b.aj:
    java.lang.String getRecordName() -> a
    short getSid() -> c
    int serialize(int,byte[]) -> a
    int getRecordSize() -> b
    int getRawDataSize() -> f
    int grossSizeFromDataSize(int) -> a
    int writeData(int,byte[],byte[]) -> a
    void writeHeader(byte[],int,int) -> a
    void writeContinueHeader(byte[],int,int) -> b
org.apache.poi.hssf.record.DrawingRecord -> a.a.a.c.b.ak:
    byte[] EMPTY_BYTE_ARRAY -> a
    byte[] recordData -> b
    byte[] contd -> c
    void processContinueRecord(byte[]) -> a
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
    java.lang.String toString() -> toString
org.apache.poi.hssf.record.DrawingSelectionRecord -> a.a.a.c.b.al:
    org.apache.poi.hssf.record.DrawingSelectionRecord$OfficeArtRecordHeader _header -> a
    int _cpsp -> b
    int _dgslk -> c
    int _spidFocus -> d
    int[] _shapeIds -> e
    short getSid() -> c
    int getDataSize() -> a
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    java.lang.Object clone() -> clone
    java.lang.String toString() -> toString
org.apache.poi.hssf.record.DrawingSelectionRecord$OfficeArtRecordHeader -> a.a.a.c.b.am:
    int _verAndInstance -> a
    int _type -> b
    int _length -> c
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    java.lang.String debugFormatAsString() -> a
org.apache.poi.hssf.record.EOFRecord -> a.a.a.c.b.an:
    org.apache.poi.hssf.record.EOFRecord instance -> a
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.ExtSSTRecord -> a.a.a.c.b.ao:
    short _stringsPerBucket -> a
    org.apache.poi.hssf.record.ExtSSTRecord$InfoSubRecord[] _sstInfos -> b
    void setNumStringsPerBucket(short) -> a
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.hssf.record.cont.ContinuableRecordOutput) -> a
    int getNumberOfInfoRecsForStrings(int) -> a
    short getSid() -> c
org.apache.poi.hssf.record.ExtSSTRecord$InfoSubRecord -> a.a.a.c.b.ap:
    int field_1_stream_pos -> a
    int field_2_bucket_sst_offset -> b
    short field_3_zero -> c
    int getStreamPos() -> a
    int getBucketSSTOffset() -> b
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
org.apache.poi.hssf.record.ExtendedFormatRecord -> a.a.a.c.b.aq:
    short field_1_font_index -> a
    short field_2_format_index -> b
    org.apache.poi.util.BitField _locked -> c
    org.apache.poi.util.BitField _hidden -> d
    org.apache.poi.util.BitField _xf_type -> e
    org.apache.poi.util.BitField _123_prefix -> f
    org.apache.poi.util.BitField _parent_index -> g
    short field_3_cell_options -> h
    org.apache.poi.util.BitField _alignment -> i
    org.apache.poi.util.BitField _wrap_text -> j
    org.apache.poi.util.BitField _vertical_alignment -> k
    org.apache.poi.util.BitField _justify_last -> l
    org.apache.poi.util.BitField _rotation -> m
    short field_4_alignment_options -> n
    org.apache.poi.util.BitField _indent -> o
    org.apache.poi.util.BitField _shrink_to_fit -> p
    org.apache.poi.util.BitField _merge_cells -> q
    org.apache.poi.util.BitField _reading_order -> r
    org.apache.poi.util.BitField _indent_not_parent_format -> s
    org.apache.poi.util.BitField _indent_not_parent_font -> t
    org.apache.poi.util.BitField _indent_not_parent_alignment -> u
    org.apache.poi.util.BitField _indent_not_parent_border -> v
    org.apache.poi.util.BitField _indent_not_parent_pattern -> w
    org.apache.poi.util.BitField _indent_not_parent_cell_options -> x
    short field_5_indention_options -> y
    org.apache.poi.util.BitField _border_left -> z
    org.apache.poi.util.BitField _border_right -> A
    org.apache.poi.util.BitField _border_top -> B
    org.apache.poi.util.BitField _border_bottom -> C
    short field_6_border_options -> D
    org.apache.poi.util.BitField _left_border_palette_idx -> E
    org.apache.poi.util.BitField _right_border_palette_idx -> F
    org.apache.poi.util.BitField _diag -> G
    short field_7_palette_options -> H
    org.apache.poi.util.BitField _top_border_palette_idx -> I
    org.apache.poi.util.BitField _bottom_border_palette_idx -> J
    org.apache.poi.util.BitField _adtl_diag -> K
    org.apache.poi.util.BitField _adtl_diag_line_style -> L
    org.apache.poi.util.BitField _adtl_fill_pattern -> M
    int field_8_adtl_palette_options -> N
    org.apache.poi.util.BitField _fill_foreground -> O
    org.apache.poi.util.BitField _fill_background -> P
    short field_9_fill_palette_options -> Q
    void setFontIndex(short) -> a
    void setFormatIndex(short) -> b
    void setCellOptions(short) -> c
    void setAlignmentOptions(short) -> d
    void setIndentionOptions(short) -> e
    void setBorderOptions(short) -> f
    void setPaletteOptions(short) -> g
    void setAdtlPaletteOptions(short) -> h
    void setFillPaletteOptions(short) -> i
    short getFontIndex() -> d
    short getFormatIndex() -> e
    short getCellOptions() -> f
    boolean isLocked() -> g
    boolean isHidden() -> h
    short getXFType() -> i
    short getParentIndex() -> j
    short getAlignmentOptions() -> k
    short getAlignment() -> l
    boolean getWrapText() -> m
    short getVerticalAlignment() -> n
    short getJustifyLast() -> o
    short getRotation() -> p
    short getIndentionOptions() -> q
    short getIndent() -> r
    boolean getShrinkToFit() -> s
    boolean getMergeCells() -> t
    short getReadingOrder() -> u
    boolean isIndentNotParentFormat() -> v
    boolean isIndentNotParentFont() -> w
    boolean isIndentNotParentAlignment() -> x
    boolean isIndentNotParentBorder() -> y
    boolean isIndentNotParentPattern() -> z
    boolean isIndentNotParentCellOptions() -> A
    short getBorderOptions() -> B
    short getBorderLeft() -> C
    short getBorderRight() -> D
    short getBorderTop() -> E
    short getBorderBottom() -> F
    short getPaletteOptions() -> G
    short getLeftBorderPaletteIdx() -> H
    short getRightBorderPaletteIdx() -> I
    short getDiag() -> J
    int getAdtlPaletteOptions() -> K
    short getTopBorderPaletteIdx() -> L
    short getBottomBorderPaletteIdx() -> M
    short getAdtlDiag() -> N
    short getAdtlDiagLineStyle() -> O
    short getAdtlFillPattern() -> P
    short getFillPaletteOptions() -> Q
    short getFillForeground() -> R
    short getFillBackground() -> S
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.apache.poi.hssf.record.ExternSheetRecord -> a.a.a.c.b.ar:
    java.util.List _list -> a
    int getNumOfRefs() -> d
    void addREFRecord(org.apache.poi.hssf.record.ExternSheetRecord$RefSubRecord) -> a
    int getNumOfREFRecords() -> e
    java.lang.String toString() -> toString
    int getDataSize() -> a
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    org.apache.poi.hssf.record.ExternSheetRecord$RefSubRecord getRef(int) -> d
    short getSid() -> c
    int getExtbookIndexFromRefIndex(int) -> a
    int getFirstSheetIndexFromRefIndex(int) -> b
    int getLastSheetIndexFromRefIndex(int) -> c
    int addRef(int,int,int) -> a
    int getRefIxForSheet(int,int,int) -> b
    org.apache.poi.hssf.record.ExternSheetRecord combine(org.apache.poi.hssf.record.ExternSheetRecord[]) -> a
org.apache.poi.hssf.record.ExternSheetRecord$RefSubRecord -> a.a.a.c.b.as:
    int _extBookIndex -> a
    int _firstSheetIndex -> b
    int _lastSheetIndex -> c
    int getExtBookIndex() -> a
    int getFirstSheetIndex() -> b
    int getLastSheetIndex() -> c
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
org.apache.poi.hssf.record.ExternalNameRecord -> a.a.a.c.b.at:
    short field_1_option_flag -> a
    short field_2_ixals -> b
    short field_3_not_used -> c
    java.lang.String field_4_name -> d
    org.apache.poi.ss.formula.Formula field_5_name_definition -> e
    java.lang.Object[] _ddeValues -> f
    int _nColumns -> g
    int _nRows -> h
    boolean isAutomaticLink() -> d
    boolean isStdDocumentNameIdentifier() -> e
    boolean isOLELink() -> f
    java.lang.String getText() -> g
    int getDataSize() -> a
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    short getSid() -> c
    java.lang.String toString() -> toString
org.apache.poi.hssf.record.FeatHdrRecord -> a.a.a.c.b.au:
    org.apache.poi.hssf.record.common.FtrHeader futureHeader -> a
    int isf_sharedFeatureType -> b
    byte reserved -> c
    long cbHdrData -> d
    byte[] rgbHdrData -> e
    short getSid() -> c
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.FeatRecord -> a.a.a.c.b.av:
    org.apache.poi.util.POILogger logger -> a
    org.apache.poi.hssf.record.common.FtrHeader futureHeader -> b
    int isf_sharedFeatureType -> c
    byte reserved1 -> d
    long reserved2 -> e
    long cbFeatData -> f
    int reserved3 -> g
    org.apache.poi.ss.util.CellRangeAddress[] cellRefs -> h
    org.apache.poi.hssf.record.common.SharedFeature sharedFeature -> i
    short getSid() -> c
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.FilePassRecord -> a.a.a.c.b.aw:
    int _encryptionType -> b
    org.apache.poi.hssf.record.FilePassRecord$KeyData _keyData -> c
    boolean $assertionsDisabled -> a
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    org.apache.poi.hssf.record.FilePassRecord$Rc4KeyData getRc4KeyData() -> d
    org.apache.poi.hssf.record.FilePassRecord$XorKeyData getXorKeyData() -> e
    short getSid() -> c
    java.lang.Object clone() -> clone
    java.lang.String toString() -> toString
org.apache.poi.hssf.record.FilePassRecord$KeyData -> a.a.a.c.b.ax:
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    void appendToString(java.lang.StringBuffer) -> a
org.apache.poi.hssf.record.FilePassRecord$Rc4KeyData -> a.a.a.c.b.ay:
    byte[] _salt -> a
    byte[] _encryptedVerifier -> b
    byte[] _encryptedVerifierHash -> c
    int _encryptionInfo -> d
    int _minorVersionNo -> e
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    byte[] getSalt() -> b
    byte[] getEncryptedVerifier() -> c
    byte[] getEncryptedVerifierHash() -> d
    void appendToString(java.lang.StringBuffer) -> a
org.apache.poi.hssf.record.FilePassRecord$XorKeyData -> a.a.a.c.b.az:
    int _key -> a
    int _verifier -> b
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    int getKey() -> b
    int getVerifier() -> c
    void appendToString(java.lang.StringBuffer) -> a
org.apache.poi.hssf.record.FileSharingRecord -> a.a.a.c.b.ba:
    short field_1_readonly -> a
    short field_2_password -> b
    byte field_3_username_unicode_options -> c
    java.lang.String field_3_username_value -> d
    void setReadOnly(short) -> a
    short getReadOnly() -> d
    void setPassword(short) -> b
    short getPassword() -> e
    java.lang.String getUsername() -> f
    void setUsername(java.lang.String) -> a
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.FnGroupCountRecord -> a.a.a.c.b.bb:
    short field_1_count -> a
    void setCount(short) -> a
    short getCount() -> d
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
org.apache.poi.hssf.record.FontRecord -> a.a.a.c.b.bc:
    short field_1_font_height -> a
    short field_2_attributes -> b
    org.apache.poi.util.BitField italic -> c
    org.apache.poi.util.BitField strikeout -> d
    org.apache.poi.util.BitField macoutline -> e
    org.apache.poi.util.BitField macshadow -> f
    short field_3_color_palette_index -> g
    short field_4_bold_weight -> h
    short field_5_super_sub_script -> i
    byte field_6_underline -> j
    byte field_7_family -> k
    byte field_8_charset -> l
    byte field_9_zero -> m
    java.lang.String field_11_font_name -> n
    void setFontHeight(short) -> a
    void setAttributes(short) -> b
    void setColorPaletteIndex(short) -> c
    void setBoldWeight(short) -> d
    void setFontName(java.lang.String) -> a
    short getFontHeight() -> d
    short getAttributes() -> e
    boolean isItalic() -> f
    boolean isStruckout() -> g
    boolean isMacoutlined() -> h
    boolean isMacshadowed() -> i
    short getColorPaletteIndex() -> j
    short getBoldWeight() -> k
    short getSuperSubScript() -> l
    byte getUnderline() -> m
    byte getFamily() -> n
    byte getCharset() -> o
    java.lang.String getFontName() -> p
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    int hashCode() -> hashCode
org.apache.poi.hssf.record.FooterRecord -> a.a.a.c.b.bd:
    java.lang.String toString() -> toString
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.FormatRecord -> a.a.a.c.b.be:
    int field_1_index_code -> a
    boolean field_3_hasMultibyte -> b
    java.lang.String field_4_formatstring -> c
    int getIndexCode() -> d
    java.lang.String getFormatString() -> e
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.FormulaRecord -> a.a.a.c.b.bf:
    int FIXED_SIZE -> a
    org.apache.poi.util.BitField alwaysCalc -> b
    org.apache.poi.util.BitField calcOnLoad -> c
    org.apache.poi.util.BitField sharedFormula -> d
    double field_4_value -> e
    short field_5_options -> f
    int field_6_zero -> g
    org.apache.poi.ss.formula.Formula field_8_parsed_expr -> h
    org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue specialCachedValue -> i
    void setValue(double) -> a
    boolean hasCachedResultString() -> g
    int getCachedResultType() -> h
    boolean getCachedBooleanValue() -> i
    int getCachedErrorValue() -> l
    double getValue() -> m
    short getOptions() -> n
    boolean isSharedFormula() -> o
    void setSharedFormula(boolean) -> a
    boolean isAlwaysCalc() -> p
    boolean isCalcOnLoad() -> q
    org.apache.poi.ss.formula.ptg.Ptg[] getParsedExpression() -> r
    org.apache.poi.ss.formula.Formula getFormula() -> s
    void setParsedExpression(org.apache.poi.ss.formula.ptg.Ptg[]) -> a
    short getSid() -> c
    int getValueDataSize() -> k
    void serializeValue(org.apache.poi.util.LittleEndianOutput) -> b
    java.lang.String getRecordName() -> j
    void appendValueText(java.lang.StringBuilder) -> a
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue -> a.a.a.c.b.bg:
    byte[] _variableData -> a
    int getTypeCode() -> a
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    java.lang.String formatDebugString() -> b
    java.lang.String formatValue() -> f
    int getDataValue() -> g
    java.lang.String toString() -> toString
    int getValueType() -> c
    boolean getBooleanValue() -> d
    int getErrorValue() -> e
org.apache.poi.hssf.record.GridsetRecord -> a.a.a.c.b.bh:
    short field_1_gridset_flag -> a
    void setGridset(boolean) -> a
    boolean getGridset() -> d
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.GutsRecord -> a.a.a.c.b.bi:
    short field_1_left_row_gutter -> a
    short field_2_top_col_gutter -> b
    short field_3_row_level_max -> c
    short field_4_col_level_max -> d
    void setLeftRowGutter(short) -> a
    void setTopColGutter(short) -> b
    void setRowLevelMax(short) -> c
    void setColLevelMax(short) -> d
    short getLeftRowGutter() -> d
    short getTopColGutter() -> e
    short getRowLevelMax() -> f
    short getColLevelMax() -> g
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.HCenterRecord -> a.a.a.c.b.bj:
    short field_1_hcenter -> a
    void setHCenter(boolean) -> a
    boolean getHCenter() -> d
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.HeaderFooterBase -> a.a.a.c.b.bk:
    boolean field_2_hasMultibyte -> a
    java.lang.String field_3_text -> b
    void setText(java.lang.String) -> a
    int getTextLength() -> e
    java.lang.String getText() -> d
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
org.apache.poi.hssf.record.HeaderFooterRecord -> a.a.a.c.b.bl:
    byte[] BLANK_GUID -> a
    byte[] _rawData -> b
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    byte[] getGuid() -> d
    boolean isCurrentSheet() -> e
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.HeaderRecord -> a.a.a.c.b.bm:
    java.lang.String toString() -> toString
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.HideObjRecord -> a.a.a.c.b.bn:
    short field_1_hide_obj -> a
    void setHideObj(short) -> a
    short getHideObj() -> d
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
org.apache.poi.hssf.record.HorizontalPageBreakRecord -> a.a.a.c.b.bo:
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.HyperlinkRecord -> a.a.a.c.b.bp:
    org.apache.poi.util.POILogger logger -> d
    org.apache.poi.hssf.record.HyperlinkRecord$GUID STD_MONIKER -> a
    org.apache.poi.hssf.record.HyperlinkRecord$GUID URL_MONIKER -> b
    org.apache.poi.hssf.record.HyperlinkRecord$GUID FILE_MONIKER -> c
    byte[] URL_TAIL -> e
    byte[] FILE_TAIL -> f
    int TAIL_SIZE -> g
    org.apache.poi.ss.util.CellRangeAddress _range -> h
    org.apache.poi.hssf.record.HyperlinkRecord$GUID _guid -> i
    int _fileOpts -> j
    int _linkOpts -> k
    java.lang.String _label -> l
    java.lang.String _targetFrame -> m
    org.apache.poi.hssf.record.HyperlinkRecord$GUID _moniker -> n
    java.lang.String _shortFilename -> o
    java.lang.String _address -> p
    java.lang.String _textMark -> q
    byte[] _uninterpretedTail -> r
    java.lang.String cleanString(java.lang.String) -> a
    java.lang.String getLabel() -> d
    java.lang.String getTargetFrame() -> e
    java.lang.String getAddress() -> f
    java.lang.String getTextMark() -> g
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    void writeTail(byte[],org.apache.poi.util.LittleEndianOutput) -> a
    short getSid() -> c
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.HyperlinkRecord$GUID -> a.a.a.c.b.bq:
    int _d1 -> b
    int _d2 -> c
    int _d3 -> d
    long _d4 -> e
    boolean $assertionsDisabled -> a
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    long getD4() -> a
    java.lang.String formatAsString() -> b
    java.lang.String toString() -> toString
    org.apache.poi.hssf.record.HyperlinkRecord$GUID parse(java.lang.String) -> a
    long parseLELong(char[],int) -> a
    int parseShort(char[],int) -> b
    int parseHexChar(char) -> a
org.apache.poi.hssf.record.IndexRecord -> a.a.a.c.b.br:
    int field_2_first_row -> a
    int field_3_last_row_add1 -> b
    int field_4_zero -> c
    org.apache.poi.util.IntList field_5_dbcells -> d
    int getFirstRow() -> d
    int getLastRowAdd1() -> e
    int getNumDbcells() -> f
    int getDbcellAt(int) -> a
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.InterfaceEndRecord -> a.a.a.c.b.bs:
    org.apache.poi.hssf.record.InterfaceEndRecord instance -> a
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
org.apache.poi.hssf.record.InterfaceHdrRecord -> a.a.a.c.b.bt:
    int _codepage -> a
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
org.apache.poi.hssf.record.IterationRecord -> a.a.a.c.b.bu:
    org.apache.poi.util.BitField iterationOn -> a
    int _flags -> b
    boolean getIteration() -> d
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.LabelRecord -> a.a.a.c.b.bv:
    org.apache.poi.util.POILogger logger -> a
    int field_1_row -> b
    short field_2_column -> c
    short field_3_xf_index -> d
    short field_4_string_len -> e
    byte field_5_unicode_flag -> f
    java.lang.String field_6_value -> g
    int getRow() -> d
    short getColumn() -> e
    short getXFIndex() -> f
    java.lang.String getValue() -> a
    int serialize(int,byte[]) -> a
    int getRecordSize() -> b
    short getSid() -> c
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.LabelSSTRecord -> a.a.a.c.b.bw:
    int field_4_sst_index -> a
    void setSSTIndex(int) -> b
    int getSSTIndex() -> g
    java.lang.String getRecordName() -> j
    void appendValueText(java.lang.StringBuilder) -> a
    void serializeValue(org.apache.poi.util.LittleEndianOutput) -> b
    int getValueDataSize() -> k
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.LeftMarginRecord -> a.a.a.c.b.bx:
    double field_1_margin -> a
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    double getMargin() -> d
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.MMSRecord -> a.a.a.c.b.by:
    byte field_1_addMenuCount -> a
    byte field_2_delMenuCount -> b
    void setAddMenuCount(byte) -> a
    void setDelMenuCount(byte) -> b
    byte getAddMenuCount() -> d
    byte getDelMenuCount() -> e
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
org.apache.poi.hssf.record.MergeCellsRecord -> a.a.a.c.b.bz:
    org.apache.poi.ss.util.CellRangeAddress[] _regions -> a
    int _startIndex -> b
    int _numberOfRegions -> c
    short getNumAreas() -> d
    org.apache.poi.ss.util.CellRangeAddress getAreaAt(int) -> a
    int getDataSize() -> a
    short getSid() -> c
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.MulBlankRecord -> a.a.a.c.b.ca:
    int _row -> a
    int _firstCol -> b
    short[] _xfs -> c
    int _lastCol -> d
    int getRow() -> d
    int getFirstColumn() -> e
    int getNumColumns() -> f
    short getXFAt(int) -> a
    java.lang.String toString() -> toString
    short getSid() -> c
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.MulRKRecord -> a.a.a.c.b.cb:
    int field_1_row -> a
    short field_2_first_col -> b
    org.apache.poi.hssf.record.MulRKRecord$RkRec[] field_3_rks -> c
    short field_4_last_col -> d
    int getRow() -> d
    short getFirstColumn() -> e
    short getLastColumn() -> f
    int getNumColumns() -> g
    short getXFAt(int) -> a
    double getRKNumberAt(int) -> b
    java.lang.String toString() -> toString
    short getSid() -> c
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
org.apache.poi.hssf.record.MulRKRecord$RkRec -> a.a.a.c.b.cc:
    short xf -> a
    int rk -> b
org.apache.poi.hssf.record.NameCommentRecord -> a.a.a.c.b.cd:
    short field_1_record_type -> a
    short field_2_frt_cell_ref_flag -> b
    long field_3_reserved -> c
    java.lang.String field_6_name_text -> d
    java.lang.String field_7_comment_text -> e
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.String toString() -> toString
    java.lang.String getNameText() -> d
org.apache.poi.hssf.record.NameRecord -> a.a.a.c.b.ce:
    short field_1_option_flag -> a
    byte field_2_keyboard_shortcut -> b
    short field_5_externSheetIndex_plus1 -> c
    int field_6_sheetNumber -> d
    boolean field_11_nameIsMultibyte -> e
    byte field_12_built_in_code -> f
    java.lang.String field_12_name_text -> g
    org.apache.poi.ss.formula.Formula field_13_name_definition -> h
    java.lang.String field_14_custom_menu_text -> i
    java.lang.String field_15_description_text -> j
    java.lang.String field_16_help_topic_text -> k
    java.lang.String field_17_status_bar_text -> l
    int getSheetNumber() -> a
    short getOptionFlag() -> d
    byte getKeyboardShortcut() -> e
    int getNameTextLength() -> m
    boolean isBuiltInName() -> f
    java.lang.String getNameText() -> g
    byte getBuiltInName() -> h
    java.lang.String getCustomMenuText() -> i
    java.lang.String getDescriptionText() -> j
    java.lang.String getHelpTopicText() -> k
    java.lang.String getStatusBarText() -> l
    void serialize(org.apache.poi.hssf.record.cont.ContinuableRecordOutput) -> a
    short getSid() -> c
    java.lang.String toString() -> toString
    java.lang.String translateBuiltInName(byte) -> a
org.apache.poi.hssf.record.NoteRecord -> a.a.a.c.b.cf:
    org.apache.poi.hssf.record.NoteRecord[] EMPTY_ARRAY -> a
    java.lang.Byte DEFAULT_PADDING -> b
    int field_1_row -> c
    int field_2_col -> d
    short field_3_flags -> e
    int field_4_shapeid -> f
    boolean field_5_hasMultibyte -> g
    java.lang.String field_6_author -> h
    java.lang.Byte field_7_padding -> i
    short getSid() -> c
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.NumberRecord -> a.a.a.c.b.cg:
    double field_4_value -> a
    void setValue(double) -> a
    double getValue() -> g
    java.lang.String getRecordName() -> j
    void appendValueText(java.lang.StringBuilder) -> a
    void serializeValue(org.apache.poi.util.LittleEndianOutput) -> b
    int getValueDataSize() -> k
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.ObjRecord -> a.a.a.c.b.ch:
    int MAX_PAD_ALIGNMENT -> a
    java.util.List subrecords -> b
    byte[] _uninterpretedData -> c
    boolean _isPaddedToQuadByteMultiple -> d
    java.lang.String toString() -> toString
    int getRecordSize() -> b
    int serialize(int,byte[]) -> a
    short getSid() -> c
    boolean addSubRecord(org.apache.poi.hssf.record.SubRecord) -> a
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.ObjectProtectRecord -> a.a.a.c.b.ci:
    short field_1_protect -> a
    boolean getProtect() -> d
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.PageBreakRecord -> a.a.a.c.b.cj:
    int[] EMPTY_INT_ARRAY -> a
    java.util.List _breaks -> b
    java.util.Map _breakMap -> c
    boolean isEmpty() -> d
    int getDataSize() -> a
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getNumBreaks() -> e
    java.util.Iterator getBreaksIterator() -> f
    java.lang.String toString() -> toString
    void addBreak(int,int,int) -> a
org.apache.poi.hssf.record.PageBreakRecord$Break -> a.a.a.c.b.ck:
    int main -> a
    int subFrom -> b
    int subTo -> c
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
org.apache.poi.hssf.record.PaletteRecord -> a.a.a.c.b.cl:
    java.util.List _colors -> a
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    org.apache.poi.hssf.record.PaletteRecord$PColor[] createDefaultPalette() -> d
    org.apache.poi.hssf.record.PaletteRecord$PColor pc(int,int,int) -> a
org.apache.poi.hssf.record.PaletteRecord$PColor -> a.a.a.c.b.cm:
    int _red -> a
    int _green -> b
    int _blue -> c
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    java.lang.String toString() -> toString
org.apache.poi.hssf.record.PaneRecord -> a.a.a.c.b.cn:
    short field_1_x -> a
    short field_2_y -> b
    short field_3_topRow -> c
    short field_4_leftColumn -> d
    short field_5_activePane -> e
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
    short getX() -> d
    short getY() -> e
    short getTopRow() -> f
    short getLeftColumn() -> g
    short getActivePane() -> h
org.apache.poi.hssf.record.PasswordRecord -> a.a.a.c.b.co:
    int field_1_password -> a
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.PasswordRev4Record -> a.a.a.c.b.cp:
    int field_1_password -> a
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
org.apache.poi.hssf.record.PrecisionRecord -> a.a.a.c.b.cq:
    short field_1_precision -> a
    void setFullPrecision(boolean) -> a
    boolean getFullPrecision() -> d
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
org.apache.poi.hssf.record.PrintGridlinesRecord -> a.a.a.c.b.cr:
    short field_1_print_gridlines -> a
    void setPrintGridlines(boolean) -> a
    boolean getPrintGridlines() -> d
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.PrintHeadersRecord -> a.a.a.c.b.cs:
    short field_1_print_headers -> a
    void setPrintHeaders(boolean) -> a
    boolean getPrintHeaders() -> d
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.PrintSetupRecord -> a.a.a.c.b.ct:
    short field_1_paper_size -> a
    short field_2_scale -> b
    short field_3_page_start -> c
    short field_4_fit_width -> d
    short field_5_fit_height -> e
    short field_6_options -> f
    org.apache.poi.util.BitField lefttoright -> g
    org.apache.poi.util.BitField landscape -> h
    org.apache.poi.util.BitField validsettings -> i
    org.apache.poi.util.BitField nocolor -> j
    org.apache.poi.util.BitField draft -> k
    org.apache.poi.util.BitField notes -> l
    org.apache.poi.util.BitField noOrientation -> m
    org.apache.poi.util.BitField usepage -> n
    short field_7_hresolution -> o
    short field_8_vresolution -> p
    double field_9_headermargin -> q
    double field_10_footermargin -> r
    short field_11_copies -> s
    void setPaperSize(short) -> a
    void setScale(short) -> b
    void setPageStart(short) -> c
    void setFitWidth(short) -> d
    void setFitHeight(short) -> e
    void setOptions(short) -> f
    void setHResolution(short) -> g
    void setVResolution(short) -> h
    void setHeaderMargin(double) -> a
    void setFooterMargin(double) -> b
    void setCopies(short) -> i
    short getPaperSize() -> d
    short getScale() -> e
    short getPageStart() -> f
    short getFitWidth() -> g
    short getFitHeight() -> h
    short getOptions() -> i
    boolean getLeftToRight() -> j
    boolean getLandscape() -> k
    boolean getValidSettings() -> l
    boolean getNoColor() -> m
    boolean getDraft() -> n
    boolean getNotes() -> o
    boolean getNoOrientation() -> p
    boolean getUsePage() -> q
    short getHResolution() -> r
    short getVResolution() -> s
    double getHeaderMargin() -> t
    double getFooterMargin() -> u
    short getCopies() -> v
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.ProtectRecord -> a.a.a.c.b.cu:
    org.apache.poi.util.BitField protectFlag -> a
    int _options -> b
    void setProtect(boolean) -> a
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.ProtectionRev4Record -> a.a.a.c.b.cv:
    org.apache.poi.util.BitField protectedFlag -> a
    int _options -> b
    void setProtect(boolean) -> a
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
org.apache.poi.hssf.record.RKRecord -> a.a.a.c.b.cw:
    int field_4_rk_number -> a
    double getRKNumber() -> g
    java.lang.String getRecordName() -> j
    void appendValueText(java.lang.StringBuilder) -> a
    void serializeValue(org.apache.poi.util.LittleEndianOutput) -> b
    int getValueDataSize() -> k
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.RecalcIdRecord -> a.a.a.c.b.cx:
    int _reserved0 -> a
    int _engineId -> b
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
org.apache.poi.hssf.record.Record -> a.a.a.c.b.cy:
    byte[] serialize() -> T
    java.lang.String toString() -> toString
    short getSid() -> c
    java.lang.Object clone() -> clone
    org.apache.poi.hssf.record.Record cloneViaReserialise() -> U
org.apache.poi.hssf.record.RecordBase -> a.a.a.c.b.cz:
    int serialize(int,byte[]) -> a
    int getRecordSize() -> b
org.apache.poi.hssf.record.RecordFactory -> a.a.a.c.b.da:
    java.lang.Class[] CONSTRUCTOR_ARGS -> a
    java.lang.Class[] recordClasses -> b
    java.util.Map _recordCreatorsById -> c
    org.apache.poi.hssf.record.Record[] createRecord(org.apache.poi.hssf.record.RecordInputStream) -> a
    org.apache.poi.hssf.record.Record createSingleRecord(org.apache.poi.hssf.record.RecordInputStream) -> b
    org.apache.poi.hssf.record.NumberRecord convertToNumberRecord(org.apache.poi.hssf.record.RKRecord) -> a
    org.apache.poi.hssf.record.NumberRecord[] convertRKRecords(org.apache.poi.hssf.record.MulRKRecord) -> a
    java.util.Map recordsToMap(java.lang.Class[]) -> a
    org.apache.poi.hssf.record.RecordFactory$I_RecordCreator getRecordCreator(java.lang.Class) -> a
    java.util.List createRecords(java.io.InputStream) -> a
org.apache.poi.hssf.record.RecordFactory$I_RecordCreator -> a.a.a.c.b.db:
    org.apache.poi.hssf.record.Record create(org.apache.poi.hssf.record.RecordInputStream) -> a
    java.lang.Class getRecordClass() -> a
org.apache.poi.hssf.record.RecordFactory$ReflectionConstructorRecordCreator -> a.a.a.c.b.dc:
    java.lang.reflect.Constructor _c -> a
    org.apache.poi.hssf.record.Record create(org.apache.poi.hssf.record.RecordInputStream) -> a
    java.lang.Class getRecordClass() -> a
org.apache.poi.hssf.record.RecordFactory$ReflectionMethodRecordCreator -> a.a.a.c.b.dd:
    java.lang.reflect.Method _m -> a
    org.apache.poi.hssf.record.Record create(org.apache.poi.hssf.record.RecordInputStream) -> a
    java.lang.Class getRecordClass() -> a
org.apache.poi.hssf.record.RecordFactoryInputStream -> a.a.a.c.b.de:
    org.apache.poi.hssf.record.RecordInputStream _recStream -> a
    boolean _shouldIncludeContinueRecords -> b
    org.apache.poi.hssf.record.Record[] _unreadRecordBuffer -> c
    int _unreadRecordIndex -> d
    org.apache.poi.hssf.record.Record _lastRecord -> e
    org.apache.poi.hssf.record.DrawingRecord _lastDrawingRecord -> f
    int _bofDepth -> g
    boolean _lastRecordWasEOFLevelZero -> h
    org.apache.poi.hssf.record.Record nextRecord() -> a
    org.apache.poi.hssf.record.Record getNextUnreadRecord() -> b
    org.apache.poi.hssf.record.Record readNextRecord() -> c
org.apache.poi.hssf.record.RecordFactoryInputStream$StreamEncryptionInfo -> a.a.a.c.b.df:
    int _initialRecordsSize -> a
    org.apache.poi.hssf.record.FilePassRecord _filePassRec -> b
    org.apache.poi.hssf.record.Record _lastRecord -> c
    boolean _hasBOFRecord -> d
    org.apache.poi.util.POILogger log -> e
    org.apache.poi.hssf.record.RecordInputStream createDecryptingStream(java.io.InputStream) -> a
    boolean hasEncryption() -> a
    org.apache.poi.hssf.record.Record getLastRecord() -> b
    boolean hasBOFRecord() -> c
org.apache.poi.hssf.record.RecordFormatException -> a.a.a.c.b.dg:
org.apache.poi.hssf.record.RecordInputStream -> a.a.a.c.b.dh:
    byte[] EMPTY_BYTE_ARRAY -> a
    org.apache.poi.hssf.record.BiffHeaderInput _bhi -> b
    org.apache.poi.util.LittleEndianInput _dataInput -> c
    int _currentSid -> d
    int _currentDataLength -> e
    int _nextSid -> f
    int _currentDataOffset -> g
    org.apache.poi.util.LittleEndianInput getLEI(java.io.InputStream) -> a
    int available() -> available
    short getSid() -> a
    boolean hasNextRecord() -> b
    int readNextSid() -> n
    void nextRecord() -> c
    void checkRecordPosition(int) -> a
    byte readByte() -> d
    short readShort() -> e
    int readInt() -> f
    long readLong() -> g
    int readUByte() -> h
    int readUShort() -> i
    double readDouble() -> j
    void readFully(byte[]) -> a
    void readFully(byte[],int,int) -> a
    byte[] readRemainder() -> k
    int remaining() -> l
    boolean isContinueNext() -> o
    int getNextSid() -> m
org.apache.poi.hssf.record.RecordInputStream$LeftoverDataException -> a.a.a.c.b.di:
org.apache.poi.hssf.record.RecordInputStream$SimpleHeaderInput -> a.a.a.c.b.dj:
    org.apache.poi.util.LittleEndianInput _lei -> a
    int available() -> available
    int readDataSize() -> b
    int readRecordSID() -> a
org.apache.poi.hssf.record.RefModeRecord -> a.a.a.c.b.dk:
    short field_1_mode -> a
    void setMode(short) -> a
    short getMode() -> d
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.RefreshAllRecord -> a.a.a.c.b.dl:
    org.apache.poi.util.BitField refreshFlag -> a
    int _options -> b
    void setRefreshAll(boolean) -> a
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.RightMarginRecord -> a.a.a.c.b.dm:
    double field_1_margin -> a
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    double getMargin() -> d
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.RowRecord -> a.a.a.c.b.dn:
    int field_1_row_number -> a
    int field_2_first_col -> b
    int field_3_last_col -> c
    short field_4_height -> d
    short field_5_optimize -> e
    short field_6_reserved -> f
    int field_7_option_flags -> g
    org.apache.poi.util.BitField outlineLevel -> h
    org.apache.poi.util.BitField colapsed -> i
    org.apache.poi.util.BitField zeroHeight -> j
    org.apache.poi.util.BitField badFontHeight -> k
    org.apache.poi.util.BitField formatted -> l
    int field_8_option_flags -> m
    org.apache.poi.util.BitField xfIndex -> n
    org.apache.poi.util.BitField topBorder -> o
    org.apache.poi.util.BitField bottomBorder -> p
    org.apache.poi.util.BitField phoeneticGuide -> q
    void setEmpty() -> d
    boolean isEmpty() -> e
    void setRowNumber(int) -> a
    void setFirstCol(int) -> b
    void setLastCol(int) -> c
    int getRowNumber() -> f
    int getFirstCol() -> g
    int getLastCol() -> h
    short getHeight() -> i
    short getOptimize() -> j
    short getOptionFlags() -> k
    short getOutlineLevel() -> l
    boolean getColapsed() -> m
    boolean getZeroHeight() -> n
    boolean getBadFontHeight() -> o
    boolean getFormatted() -> p
    short getOptionFlags2() -> q
    short getXFIndex() -> r
    boolean getTopBorder() -> s
    boolean getBottomBorder() -> t
    boolean getPhoeneticGuide() -> u
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.SSTDeserializer -> a.a.a.c.b.do:
    org.apache.poi.util.POILogger logger -> a
    org.apache.poi.util.IntMapper strings -> b
    void addToStringTable(org.apache.poi.util.IntMapper,org.apache.poi.hssf.record.common.UnicodeString) -> a
org.apache.poi.hssf.record.SSTRecord -> a.a.a.c.b.dp:
    org.apache.poi.hssf.record.common.UnicodeString EMPTY_STRING -> c
    int field_1_num_strings -> d
    int field_2_num_unique_strings -> e
    org.apache.poi.util.IntMapper field_3_strings -> f
    org.apache.poi.hssf.record.SSTDeserializer deserializer -> g
    int[] bucketAbsoluteOffsets -> a
    int[] bucketRelativeOffsets -> b
    int addString(org.apache.poi.hssf.record.common.UnicodeString) -> a
    int getNumStrings() -> a
    int getNumUniqueStrings() -> d
    org.apache.poi.hssf.record.common.UnicodeString getString(int) -> a
    java.lang.String toString() -> toString
    short getSid() -> c
    void serialize(org.apache.poi.hssf.record.cont.ContinuableRecordOutput) -> a
org.apache.poi.hssf.record.SSTSerializer -> a.a.a.c.b.dq:
    int _numStrings -> a
    int _numUniqueStrings -> b
    org.apache.poi.util.IntMapper strings -> c
    int[] bucketAbsoluteOffsets -> d
    int[] bucketRelativeOffsets -> e
    void serialize(org.apache.poi.hssf.record.cont.ContinuableRecordOutput) -> a
    org.apache.poi.hssf.record.common.UnicodeString getUnicodeString(int) -> a
    org.apache.poi.hssf.record.common.UnicodeString getUnicodeString(org.apache.poi.util.IntMapper,int) -> a
    int[] getBucketAbsoluteOffsets() -> a
    int[] getBucketRelativeOffsets() -> b
org.apache.poi.hssf.record.SaveRecalcRecord -> a.a.a.c.b.dr:
    short field_1_recalc -> a
    void setRecalc(boolean) -> a
    boolean getRecalc() -> d
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.ScenarioProtectRecord -> a.a.a.c.b.ds:
    short field_1_protect -> a
    boolean getProtect() -> d
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.SelectionRecord -> a.a.a.c.b.dt:
    byte field_1_pane -> a
    int field_2_row_active_cell -> b
    int field_3_col_active_cell -> c
    int field_4_active_cell_ref_index -> d
    org.apache.poi.hssf.util.CellRangeAddress8Bit[] field_6_refs -> e
    byte getPane() -> d
    int getActiveCellRow() -> e
    int getActiveCellCol() -> f
    int getActiveCellRef() -> g
    java.lang.String toString() -> toString
    int getDataSize() -> a
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.SharedFormulaRecord -> a.a.a.c.b.du:
    int field_5_reserved -> a
    org.apache.poi.ss.formula.Formula field_7_parsed_expr -> b
    void serializeExtraData(org.apache.poi.util.LittleEndianOutput) -> a_
    int getExtraDataSize() -> d
    java.lang.String toString() -> toString
    short getSid() -> c
    org.apache.poi.ss.formula.ptg.Ptg[] getFormulaTokens(org.apache.poi.hssf.record.FormulaRecord) -> a
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.SharedValueRecordBase -> a.a.a.c.b.dv:
    org.apache.poi.hssf.util.CellRangeAddress8Bit _range -> a
    org.apache.poi.hssf.util.CellRangeAddress8Bit getRange() -> e
    int getFirstRow() -> f
    int getLastRow() -> g
    int getFirstColumn() -> h
    int getLastColumn() -> i
    int getDataSize() -> a
    int getExtraDataSize() -> d
    void serializeExtraData(org.apache.poi.util.LittleEndianOutput) -> a_
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    boolean isInRange(int,int) -> a
    boolean isFirstCell(int,int) -> b
org.apache.poi.hssf.record.StandardRecord -> a.a.a.c.b.dw:
    int getDataSize() -> a
    int getRecordSize() -> b
    int serialize(int,byte[]) -> a
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
org.apache.poi.hssf.record.StringRecord -> a.a.a.c.b.dx:
    boolean _is16bitUnicode -> a
    java.lang.String _text -> b
    void serialize(org.apache.poi.hssf.record.cont.ContinuableRecordOutput) -> a
    short getSid() -> c
    java.lang.String getString() -> a
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.StyleRecord -> a.a.a.c.b.dy:
    org.apache.poi.util.BitField styleIndexMask -> a
    org.apache.poi.util.BitField isBuiltinFlag -> b
    int field_1_xf_index -> c
    int field_2_builtin_style -> d
    int field_3_outline_style_level -> e
    boolean field_3_stringHasMultibyte -> f
    java.lang.String field_4_name -> g
    void setXFIndex(int) -> a
    int getXFIndex() -> d
    void setBuiltinStyle(int) -> b
    void setOutlineStyleLevel(int) -> c
    boolean isBuiltin() -> e
    java.lang.String getName() -> f
    java.lang.String toString() -> toString
    int getDataSize() -> a
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    short getSid() -> c
org.apache.poi.hssf.record.SubRecord -> a.a.a.c.b.dz:
    int getDataSize() -> a
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.SupBookRecord -> a.a.a.c.b.ea:
    org.apache.poi.util.POILogger logger -> b
    short field_1_number_of_sheets -> c
    java.lang.String field_2_encoded_url -> d
    java.lang.String[] field_3_sheet_names -> e
    boolean _isAddInFunctions -> f
    java.lang.String PATH_SEPERATOR -> a
    org.apache.poi.hssf.record.SupBookRecord createInternalReferences(short) -> a
    org.apache.poi.hssf.record.SupBookRecord createAddInFunctions() -> d
    boolean isExternalReferences() -> e
    boolean isInternalReferences() -> f
    java.lang.String toString() -> toString
    int getDataSize() -> a
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    short getSid() -> c
    java.lang.String getURL() -> g
    java.lang.String decodeFileName(java.lang.String) -> a
    java.lang.String[] getSheetNames() -> h
org.apache.poi.hssf.record.TabIdRecord -> a.a.a.c.b.eb:
    short[] EMPTY_SHORT_ARRAY -> b
    short[] _tabids -> a
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
org.apache.poi.hssf.record.TableRecord -> a.a.a.c.b.ec:
    org.apache.poi.util.BitField alwaysCalc -> a
    org.apache.poi.util.BitField calcOnOpen -> b
    org.apache.poi.util.BitField rowOrColInpCell -> c
    org.apache.poi.util.BitField oneOrTwoVar -> d
    org.apache.poi.util.BitField rowDeleted -> e
    org.apache.poi.util.BitField colDeleted -> f
    int field_5_flags -> g
    int field_6_res -> h
    int field_7_rowInputRow -> i
    int field_8_colInputRow -> j
    int field_9_rowInputCol -> k
    int field_10_colInputCol -> l
    boolean isAlwaysCalc() -> j
    short getSid() -> c
    int getExtraDataSize() -> d
    void serializeExtraData(org.apache.poi.util.LittleEndianOutput) -> a_
    java.lang.String toString() -> toString
    org.apache.poi.hssf.util.CellReference cr(int,int) -> c
org.apache.poi.hssf.record.TableStylesRecord -> a.a.a.c.b.ed:
    int rt -> a
    int grbitFrt -> b
    byte[] unused -> c
    int cts -> d
    java.lang.String rgchDefListStyle -> e
    java.lang.String rgchDefPivotStyle -> f
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.String toString() -> toString
org.apache.poi.hssf.record.TextObjectRecord -> a.a.a.c.b.ee:
    org.apache.poi.util.BitField HorizontalTextAlignment -> a
    org.apache.poi.util.BitField VerticalTextAlignment -> b
    org.apache.poi.util.BitField textLocked -> c
    int field_1_options -> d
    int field_2_textOrientation -> e
    int field_3_reserved4 -> f
    int field_4_reserved5 -> g
    int field_5_reserved6 -> h
    int field_8_reserved7 -> i
    org.apache.poi.hssf.usermodel.HSSFRichTextString _text -> j
    int _unknownPreFormulaInt -> k
    org.apache.poi.ss.formula.ptg.OperandPtg _linkRefPtg -> l
    java.lang.Byte _unknownPostFormulaByte -> m
    short getSid() -> c
    void serializeTXORecord(org.apache.poi.hssf.record.cont.ContinuableRecordOutput) -> b
    void serializeTrailingRecords(org.apache.poi.hssf.record.cont.ContinuableRecordOutput) -> c
    void serialize(org.apache.poi.hssf.record.cont.ContinuableRecordOutput) -> a
    int getFormattingDataLength() -> g
    void writeFormatData(org.apache.poi.hssf.record.cont.ContinuableRecordOutput,org.apache.poi.hssf.usermodel.HSSFRichTextString) -> a
    int getHorizontalTextAlignment() -> a
    int getVerticalTextAlignment() -> d
    boolean isTextLocked() -> e
    int getTextOrientation() -> f
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.TopMarginRecord -> a.a.a.c.b.ef:
    double field_1_margin -> a
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    double getMargin() -> d
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.UncalcedRecord -> a.a.a.c.b.eg:
    short _reserved -> a
    short getSid() -> c
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
org.apache.poi.hssf.record.UnknownRecord -> a.a.a.c.b.eh:
    int _sid -> a
    byte[] _rawData -> b
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    java.lang.String toString() -> toString
    short getSid() -> c
    java.lang.String getBiffName(int) -> a
    boolean isObservedButUnknown(int) -> b
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.UseSelFSRecord -> a.a.a.c.b.ei:
    org.apache.poi.util.BitField useNaturalLanguageFormulasFlag -> a
    int _options -> b
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.UserSViewBegin -> a.a.a.c.b.ej:
    byte[] _rawData -> a
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    byte[] getGuid() -> d
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.UserSViewEnd -> a.a.a.c.b.ek:
    byte[] _rawData -> a
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.VCenterRecord -> a.a.a.c.b.el:
    int field_1_vcenter -> a
    void setVCenter(boolean) -> a
    boolean getVCenter() -> d
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.VerticalPageBreakRecord -> a.a.a.c.b.em:
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.WSBoolRecord -> a.a.a.c.b.en:
    byte field_1_wsbool -> a
    byte field_2_wsbool -> b
    org.apache.poi.util.BitField autobreaks -> c
    org.apache.poi.util.BitField dialog -> d
    org.apache.poi.util.BitField applystyles -> e
    org.apache.poi.util.BitField rowsumsbelow -> f
    org.apache.poi.util.BitField rowsumsright -> g
    org.apache.poi.util.BitField fittopage -> h
    org.apache.poi.util.BitField displayguts -> i
    org.apache.poi.util.BitField alternateexpression -> j
    org.apache.poi.util.BitField alternateformula -> k
    void setWSBool1(byte) -> a
    void setWSBool2(byte) -> b
    byte getWSBool1() -> d
    boolean getAutobreaks() -> e
    boolean getDialog() -> f
    boolean getRowSumsBelow() -> g
    boolean getRowSumsRight() -> h
    byte getWSBool2() -> i
    boolean getFitToPage() -> j
    boolean getDisplayGuts() -> k
    boolean getAlternateExpression() -> l
    boolean getAlternateFormula() -> m
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.WindowOneRecord -> a.a.a.c.b.eo:
    short field_1_h_hold -> a
    short field_2_v_hold -> b
    short field_3_width -> c
    short field_4_height -> d
    short field_5_options -> e
    org.apache.poi.util.BitField hidden -> f
    org.apache.poi.util.BitField iconic -> g
    org.apache.poi.util.BitField reserved -> h
    org.apache.poi.util.BitField hscroll -> i
    org.apache.poi.util.BitField vscroll -> j
    org.apache.poi.util.BitField tabs -> k
    int field_6_active_sheet -> l
    int field_7_first_visible_tab -> m
    short field_8_num_selected_tabs -> n
    short field_9_tab_width_ratio -> o
    void setHorizontalHold(short) -> a
    void setVerticalHold(short) -> b
    void setWidth(short) -> c
    void setHeight(short) -> d
    void setOptions(short) -> e
    void setActiveSheetIndex(int) -> a
    void setFirstVisibleTab(int) -> b
    void setNumSelectedTabs(short) -> f
    void setTabWidthRatio(short) -> g
    short getHorizontalHold() -> d
    short getVerticalHold() -> e
    short getWidth() -> f
    short getHeight() -> g
    short getOptions() -> h
    boolean getHidden() -> i
    boolean getIconic() -> j
    boolean getDisplayHorizontalScrollbar() -> k
    boolean getDisplayVerticalScrollbar() -> l
    boolean getDisplayTabs() -> m
    int getActiveSheetIndex() -> n
    int getFirstVisibleTab() -> o
    short getNumSelectedTabs() -> p
    short getTabWidthRatio() -> q
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
org.apache.poi.hssf.record.WindowProtectRecord -> a.a.a.c.b.ep:
    org.apache.poi.util.BitField settingsProtectedFlag -> a
    int _options -> b
    void setProtect(boolean) -> a
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.WindowTwoRecord -> a.a.a.c.b.eq:
    org.apache.poi.util.BitField displayFormulas -> a
    org.apache.poi.util.BitField displayGridlines -> b
    org.apache.poi.util.BitField displayRowColHeadings -> c
    org.apache.poi.util.BitField freezePanes -> d
    org.apache.poi.util.BitField displayZeros -> e
    org.apache.poi.util.BitField defaultHeader -> f
    org.apache.poi.util.BitField arabic -> g
    org.apache.poi.util.BitField displayGuts -> h
    org.apache.poi.util.BitField freezePanesNoSplit -> i
    org.apache.poi.util.BitField selected -> j
    org.apache.poi.util.BitField active -> k
    org.apache.poi.util.BitField savedInPageBreakPreview -> l
    short field_1_options -> m
    short field_2_top_row -> n
    short field_3_left_col -> o
    int field_4_header_color -> p
    short field_5_page_break_zoom -> q
    short field_6_normal_zoom -> r
    int field_7_reserved -> s
    void setOptions(short) -> a
    void setTopRow(short) -> b
    void setLeftCol(short) -> c
    void setHeaderColor(int) -> a
    void setPageBreakZoom(short) -> d
    void setNormalZoom(short) -> e
    short getOptions() -> d
    boolean getDisplayFormulas() -> e
    boolean getDisplayGridlines() -> f
    boolean getDisplayRowColHeadings() -> g
    boolean getFreezePanes() -> h
    boolean getDisplayZeros() -> i
    boolean getDefaultHeader() -> j
    boolean getArabic() -> k
    boolean getDisplayGuts() -> l
    boolean getFreezePanesNoSplit() -> m
    boolean getSelected() -> n
    boolean isActive() -> o
    boolean getSavedInPageBreakPreview() -> p
    short getTopRow() -> q
    short getLeftCol() -> r
    int getHeaderColor() -> s
    short getPageBreakZoom() -> t
    short getNormalZoom() -> u
    int getReserved() -> v
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.WriteAccessRecord -> a.a.a.c.b.er:
    java.lang.String field_1_username -> a
    byte[] PADDING -> b
    void setUsername(java.lang.String) -> a
    java.lang.String getUsername() -> d
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
org.apache.poi.hssf.record.WriteProtectRecord -> a.a.a.c.b.es:
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
org.apache.poi.hssf.record.aggregates.CFRecordsAggregate -> a.a.a.c.b.a.a:
    org.apache.poi.util.POILogger logger -> a
    org.apache.poi.hssf.record.CFHeaderRecord header -> b
    java.util.List rules -> c
    org.apache.poi.hssf.record.aggregates.CFRecordsAggregate createCFAggregate(org.apache.poi.hssf.model.RecordStream) -> a
    java.lang.String toString() -> toString
    void visitContainedRecords(org.apache.poi.hssf.record.aggregates.RecordAggregate$RecordVisitor) -> a
org.apache.poi.hssf.record.aggregates.ChartSubstreamRecordAggregate -> a.a.a.c.b.a.b:
    org.apache.poi.hssf.record.BOFRecord _bofRec -> a
    java.util.List _recs -> b
    org.apache.poi.hssf.record.aggregates.PageSettingsBlock _psBlock -> c
    void visitContainedRecords(org.apache.poi.hssf.record.aggregates.RecordAggregate$RecordVisitor) -> a
org.apache.poi.hssf.record.aggregates.ColumnInfoRecordsAggregate -> a.a.a.c.b.a.c:
    java.util.List records -> a
    java.lang.Object clone() -> clone
    void visitContainedRecords(org.apache.poi.hssf.record.aggregates.RecordAggregate$RecordVisitor) -> a
    org.apache.poi.hssf.record.ColumnInfoRecord getColInfo(int) -> b
    org.apache.poi.hssf.record.ColumnInfoRecord findColumnInfo(int) -> a
org.apache.poi.hssf.record.aggregates.ColumnInfoRecordsAggregate$CIRComparator -> a.a.a.c.b.a.d:
    java.util.Comparator instance -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
    int compareColInfos(org.apache.poi.hssf.record.ColumnInfoRecord,org.apache.poi.hssf.record.ColumnInfoRecord) -> a
org.apache.poi.hssf.record.aggregates.ConditionalFormattingTable -> a.a.a.c.b.a.e:
    java.util.List _cfHeaders -> a
    void visitContainedRecords(org.apache.poi.hssf.record.aggregates.RecordAggregate$RecordVisitor) -> a
org.apache.poi.hssf.record.aggregates.CustomViewSettingsRecordAggregate -> a.a.a.c.b.a.f:
    org.apache.poi.hssf.record.Record _begin -> a
    org.apache.poi.hssf.record.Record _end -> b
    java.util.List _recs -> c
    org.apache.poi.hssf.record.aggregates.PageSettingsBlock _psBlock -> d
    void visitContainedRecords(org.apache.poi.hssf.record.aggregates.RecordAggregate$RecordVisitor) -> a
    boolean isBeginRecord(int) -> a
    void append(org.apache.poi.hssf.record.RecordBase) -> a
org.apache.poi.hssf.record.aggregates.DataValidityTable -> a.a.a.c.b.a.g:
    org.apache.poi.hssf.record.DVALRecord _headerRec -> a
    java.util.List _validationList -> b
    void visitContainedRecords(org.apache.poi.hssf.record.aggregates.RecordAggregate$RecordVisitor) -> a
org.apache.poi.hssf.record.aggregates.FormulaRecordAggregate -> a.a.a.c.b.a.h:
    org.apache.poi.hssf.record.FormulaRecord _formulaRecord -> a
    org.apache.poi.hssf.record.aggregates.SharedValueManager _sharedValueManager -> b
    org.apache.poi.hssf.record.StringRecord _stringRecord -> c
    org.apache.poi.hssf.record.SharedFormulaRecord _sharedFormulaRecord -> d
    void handleMissingSharedFormulaRecord(org.apache.poi.hssf.record.FormulaRecord) -> a
    org.apache.poi.hssf.record.FormulaRecord getFormulaRecord() -> a
    short getXFIndex() -> f
    void setXFIndex(short) -> a
    void setColumn(short) -> b
    void setRow(int) -> a
    short getColumn() -> e
    int getRow() -> d
    java.lang.String toString() -> toString
    void visitContainedRecords(org.apache.poi.hssf.record.aggregates.RecordAggregate$RecordVisitor) -> a
    java.lang.String getStringValue() -> c
    org.apache.poi.ss.formula.ptg.Ptg[] getFormulaTokens() -> g
    void unlinkSharedFormula() -> h
    void notifyFormulaChanging() -> i
org.apache.poi.hssf.record.aggregates.MergedCellsTable -> a.a.a.c.b.a.i:
    int MAX_MERGED_REGIONS -> a
    java.util.List _mergedRegions -> b
    void read(org.apache.poi.hssf.model.RecordStream) -> a
    int getRecordSize() -> b
    void visitContainedRecords(org.apache.poi.hssf.record.aggregates.RecordAggregate$RecordVisitor) -> a
    void addRecords(org.apache.poi.hssf.record.MergeCellsRecord[]) -> a
    void addMergeCellsRecord(org.apache.poi.hssf.record.MergeCellsRecord) -> a
org.apache.poi.hssf.record.aggregates.PageSettingsBlock -> a.a.a.c.b.a.j:
    org.apache.poi.hssf.record.PageBreakRecord _rowBreaksRecord -> a
    org.apache.poi.hssf.record.PageBreakRecord _columnBreaksRecord -> b
    org.apache.poi.hssf.record.HeaderRecord _header -> c
    org.apache.poi.hssf.record.FooterRecord _footer -> d
    org.apache.poi.hssf.record.HCenterRecord _hCenter -> e
    org.apache.poi.hssf.record.VCenterRecord _vCenter -> f
    org.apache.poi.hssf.record.LeftMarginRecord _leftMargin -> g
    org.apache.poi.hssf.record.RightMarginRecord _rightMargin -> h
    org.apache.poi.hssf.record.TopMarginRecord _topMargin -> i
    org.apache.poi.hssf.record.BottomMarginRecord _bottomMargin -> j
    java.util.List _plsRecords -> k
    org.apache.poi.hssf.record.PrintSetupRecord _printSetup -> l
    org.apache.poi.hssf.record.Record _bitmap -> m
    org.apache.poi.hssf.record.HeaderFooterRecord _headerFooter -> n
    java.util.List _sviewHeaderFooters -> o
    org.apache.poi.hssf.record.Record _printSize -> p
    boolean isComponentRecord(int) -> a
    boolean readARecord(org.apache.poi.hssf.model.RecordStream) -> b
    void checkNotPresent(org.apache.poi.hssf.record.Record) -> a
    void visitContainedRecords(org.apache.poi.hssf.record.aggregates.RecordAggregate$RecordVisitor) -> a
    void visitIfPresent(org.apache.poi.hssf.record.Record,org.apache.poi.hssf.record.aggregates.RecordAggregate$RecordVisitor) -> a
    void visitIfPresent(org.apache.poi.hssf.record.PageBreakRecord,org.apache.poi.hssf.record.aggregates.RecordAggregate$RecordVisitor) -> a
    org.apache.poi.hssf.record.HCenterRecord createHCenter() -> a
    org.apache.poi.hssf.record.VCenterRecord createVCenter() -> c
    org.apache.poi.hssf.record.PrintSetupRecord createPrintSetup() -> d
    void addLateHeaderFooter(org.apache.poi.hssf.record.HeaderFooterRecord) -> a
    void addLateRecords(org.apache.poi.hssf.model.RecordStream) -> a
    void positionRecords(java.util.List) -> a
    java.util.List access$000(org.apache.poi.hssf.record.aggregates.PageSettingsBlock) -> a
org.apache.poi.hssf.record.aggregates.PageSettingsBlock$1 -> a.a.a.c.b.a.k:
    java.util.Map val$hfGuidMap -> a
    org.apache.poi.hssf.record.aggregates.CustomViewSettingsRecordAggregate val$cv -> b
    org.apache.poi.hssf.record.aggregates.PageSettingsBlock this$0 -> c
    void visitRecord(org.apache.poi.hssf.record.Record) -> a
org.apache.poi.hssf.record.aggregates.PageSettingsBlock$PLSAggregate -> a.a.a.c.b.a.l:
    org.apache.poi.hssf.record.ContinueRecord[] EMPTY_CONTINUE_RECORD_ARRAY -> a
    org.apache.poi.hssf.record.Record _pls -> b
    org.apache.poi.hssf.record.ContinueRecord[] _plsContinues -> c
    void visitContainedRecords(org.apache.poi.hssf.record.aggregates.RecordAggregate$RecordVisitor) -> a
org.apache.poi.hssf.record.aggregates.RecordAggregate -> a.a.a.c.b.a.m:
    void visitContainedRecords(org.apache.poi.hssf.record.aggregates.RecordAggregate$RecordVisitor) -> a
    int serialize(int,byte[]) -> a
    int getRecordSize() -> b
org.apache.poi.hssf.record.aggregates.RecordAggregate$PositionTrackingVisitor -> a.a.a.c.b.a.n:
    org.apache.poi.hssf.record.aggregates.RecordAggregate$RecordVisitor _rv -> a
    int _position -> b
    void visitRecord(org.apache.poi.hssf.record.Record) -> a
    void setPosition(int) -> a
    int getPosition() -> a
org.apache.poi.hssf.record.aggregates.RecordAggregate$RecordSizingVisitor -> a.a.a.c.b.a.o:
    int _totalSize -> a
    int getTotalSize() -> a
    void visitRecord(org.apache.poi.hssf.record.Record) -> a
org.apache.poi.hssf.record.aggregates.RecordAggregate$RecordVisitor -> a.a.a.c.b.a.p:
    void visitRecord(org.apache.poi.hssf.record.Record) -> a
org.apache.poi.hssf.record.aggregates.RecordAggregate$SerializingRecordVisitor -> a.a.a.c.b.a.q:
    byte[] _data -> a
    int _startOffset -> b
    int _countBytesWritten -> c
    int countBytesWritten() -> a
    void visitRecord(org.apache.poi.hssf.record.Record) -> a
org.apache.poi.hssf.record.aggregates.RowRecordsAggregate -> a.a.a.c.b.a.r:
    int _firstrow -> a
    int _lastrow -> b
    java.util.Map _rowRecords -> c
    org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate _valuesAgg -> d
    java.util.List _unknownRecords -> e
    org.apache.poi.hssf.record.aggregates.SharedValueManager _sharedValueManager -> f
    org.apache.poi.hssf.record.RowRecord[] _rowRecordValues -> g
    void addUnknownRecord(org.apache.poi.hssf.record.Record) -> a
    void insertRow(org.apache.poi.hssf.record.RowRecord) -> a
    void removeRow(org.apache.poi.hssf.record.RowRecord) -> b
    org.apache.poi.hssf.record.RowRecord getRow(int) -> a
    int getRowBlockCount() -> a
    int getStartRowNumberForBlock(int) -> b
    int getEndRowNumberForBlock(int) -> c
    int visitRowRecordsForBlock(int,org.apache.poi.hssf.record.aggregates.RecordAggregate$RecordVisitor) -> a
    void visitContainedRecords(org.apache.poi.hssf.record.aggregates.RecordAggregate$RecordVisitor) -> a
    java.util.Iterator getIterator() -> c
    java.util.Iterator getCellValueIterator() -> d
    void insertCell(org.apache.poi.hssf.record.CellValueRecordInterface) -> a
    void removeCell(org.apache.poi.hssf.record.CellValueRecordInterface) -> b
    org.apache.poi.hssf.record.aggregates.FormulaRecordAggregate createFormula(int,int) -> a
    org.apache.poi.hssf.record.DimensionsRecord createDimensions() -> e
org.apache.poi.hssf.record.aggregates.SharedValueManager -> a.a.a.c.b.a.s:
    java.util.List _arrayRecords -> a
    org.apache.poi.hssf.record.TableRecord[] _tableRecords -> b
    java.util.Map _groupsBySharedFormulaRecord -> c
    java.util.Map _groupsCache -> d
    org.apache.poi.hssf.record.aggregates.SharedValueManager createEmpty() -> a
    java.util.List toList(java.lang.Object[]) -> a
    org.apache.poi.hssf.record.aggregates.SharedValueManager create(org.apache.poi.hssf.record.SharedFormulaRecord[],org.apache.poi.ss.util.CellReference[],org.apache.poi.hssf.record.ArrayRecord[],org.apache.poi.hssf.record.TableRecord[]) -> a
    org.apache.poi.hssf.record.SharedFormulaRecord linkSharedFormulaRecord(org.apache.poi.ss.util.CellReference,org.apache.poi.hssf.record.aggregates.FormulaRecordAggregate) -> a
    org.apache.poi.hssf.record.aggregates.SharedValueManager$SharedFormulaGroup findFormulaGroupForCell(org.apache.poi.ss.util.CellReference) -> a
    java.lang.Integer getKeyForCache(org.apache.poi.ss.util.CellReference) -> b
    org.apache.poi.hssf.record.SharedValueRecordBase getRecordForFirstCell(org.apache.poi.hssf.record.aggregates.FormulaRecordAggregate) -> a
    void unlink(org.apache.poi.hssf.record.SharedFormulaRecord) -> a
    org.apache.poi.hssf.record.ArrayRecord getArrayRecord(int,int) -> a
org.apache.poi.hssf.record.aggregates.SharedValueManager$SharedFormulaGroup -> a.a.a.c.b.a.t:
    org.apache.poi.hssf.record.SharedFormulaRecord _sfr -> a
    org.apache.poi.hssf.record.aggregates.FormulaRecordAggregate[] _frAggs -> b
    int _numberOfFormulas -> c
    org.apache.poi.ss.util.CellReference _firstCell -> d
    void add(org.apache.poi.hssf.record.aggregates.FormulaRecordAggregate) -> a
    void unlinkSharedFormulas() -> a
    org.apache.poi.hssf.record.SharedFormulaRecord getSFR() -> b
    java.lang.String toString() -> toString
    org.apache.poi.ss.util.CellReference access$000(org.apache.poi.hssf.record.aggregates.SharedValueManager$SharedFormulaGroup) -> a
org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate -> a.a.a.c.b.a.u:
    int firstcell -> a
    int lastcell -> b
    org.apache.poi.hssf.record.CellValueRecordInterface[][] records -> c
    void insertCell(org.apache.poi.hssf.record.CellValueRecordInterface) -> a
    void removeCell(org.apache.poi.hssf.record.CellValueRecordInterface) -> b
    void removeAllCellsValuesForRow(int) -> a
    int getFirstCellNum() -> a
    int getLastCellNum() -> b
    void addMultipleBlanks(org.apache.poi.hssf.record.MulBlankRecord) -> a
    void construct(org.apache.poi.hssf.record.CellValueRecordInterface,org.apache.poi.hssf.model.RecordStream,org.apache.poi.hssf.record.aggregates.SharedValueManager) -> a
    boolean rowHasCells(int) -> b
    void visitCellsForRow(int,org.apache.poi.hssf.record.aggregates.RecordAggregate$RecordVisitor) -> a
    int countBlanks(org.apache.poi.hssf.record.CellValueRecordInterface[],int) -> a
    org.apache.poi.hssf.record.MulBlankRecord createMBR(org.apache.poi.hssf.record.CellValueRecordInterface[],int,int) -> a
    java.util.Iterator iterator() -> iterator
    java.lang.Object clone() -> clone
    org.apache.poi.hssf.record.CellValueRecordInterface[][] access$000(org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate) -> a
org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate$ValueIterator -> a.a.a.c.b.a.v:
    int curRowIndex -> a
    int curColIndex -> b
    int nextRowIndex -> c
    int nextColIndex -> d
    org.apache.poi.hssf.record.aggregates.ValueRecordsAggregate this$0 -> e
    void getNextPos() -> a
    boolean hasNext() -> hasNext
    org.apache.poi.hssf.record.CellValueRecordInterface next() -> b
    void remove() -> remove
    java.lang.Object next() -> next
org.apache.poi.hssf.record.aggregates.WorksheetProtectionBlock -> a.a.a.c.b.a.w:
    org.apache.poi.hssf.record.ProtectRecord _protectRecord -> a
    org.apache.poi.hssf.record.ObjectProtectRecord _objectProtectRecord -> b
    org.apache.poi.hssf.record.ScenarioProtectRecord _scenarioProtectRecord -> c
    org.apache.poi.hssf.record.PasswordRecord _passwordRecord -> d
    boolean isComponentRecord(int) -> a
    boolean readARecord(org.apache.poi.hssf.model.RecordStream) -> b
    void checkNotPresent(org.apache.poi.hssf.record.Record) -> a
    void visitContainedRecords(org.apache.poi.hssf.record.aggregates.RecordAggregate$RecordVisitor) -> a
    void visitIfPresent(org.apache.poi.hssf.record.Record,org.apache.poi.hssf.record.aggregates.RecordAggregate$RecordVisitor) -> a
    void addRecords(org.apache.poi.hssf.model.RecordStream) -> a
org.apache.poi.hssf.record.cf.BorderFormatting -> a.a.a.c.b.b.a:
    int field_13_border_styles1 -> a
    org.apache.poi.util.BitField bordLeftLineStyle -> b
    org.apache.poi.util.BitField bordRightLineStyle -> c
    org.apache.poi.util.BitField bordTopLineStyle -> d
    org.apache.poi.util.BitField bordBottomLineStyle -> e
    org.apache.poi.util.BitField bordLeftLineColor -> f
    org.apache.poi.util.BitField bordRightLineColor -> g
    org.apache.poi.util.BitField bordTlBrLineOnOff -> h
    org.apache.poi.util.BitField bordBlTrtLineOnOff -> i
    int field_14_border_styles2 -> j
    org.apache.poi.util.BitField bordTopLineColor -> k
    org.apache.poi.util.BitField bordBottomLineColor -> l
    org.apache.poi.util.BitField bordDiagLineColor -> m
    org.apache.poi.util.BitField bordDiagLineStyle -> n
    int getBorderLeft() -> a
    int getBorderRight() -> b
    int getBorderTop() -> c
    int getBorderBottom() -> d
    int getLeftBorderColor() -> e
    int getRightBorderColor() -> f
    int getTopBorderColor() -> g
    int getBottomBorderColor() -> h
    boolean isForwardDiagonalOn() -> i
    boolean isBackwardDiagonalOn() -> j
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
org.apache.poi.hssf.record.cf.FontFormatting -> a.a.a.c.b.b.b:
    byte[] _rawData -> a
    org.apache.poi.util.BitField posture -> b
    org.apache.poi.util.BitField outline -> c
    org.apache.poi.util.BitField shadow -> d
    org.apache.poi.util.BitField cancellation -> e
    org.apache.poi.util.BitField styleModified -> f
    org.apache.poi.util.BitField outlineModified -> g
    org.apache.poi.util.BitField shadowModified -> h
    org.apache.poi.util.BitField cancellationModified -> i
    short getShort(int) -> b
    void setShort(int,int) -> a
    int getInt(int) -> c
    void setInt(int,int) -> b
    byte[] getRawRecord() -> a
    void setFontHeight(int) -> a
    int getFontHeight() -> b
    void setFontOption(boolean,org.apache.poi.util.BitField) -> a
    boolean getFontOption(org.apache.poi.util.BitField) -> a
    void setItalic(boolean) -> a
    boolean isItalic() -> c
    void setOutline(boolean) -> b
    boolean isOutlineOn() -> d
    void setShadow(boolean) -> c
    boolean isShadowOn() -> e
    void setStrikeout(boolean) -> d
    boolean isStruckout() -> f
    short getFontWeight() -> g
    short getEscapementType() -> h
    void setEscapementType(short) -> a
    short getUnderlineType() -> i
    void setUnderlineType(short) -> b
    short getFontColorIndex() -> j
    void setFontColorIndex(short) -> c
    boolean getOptionFlag(org.apache.poi.util.BitField) -> b
    void setOptionFlag(boolean,org.apache.poi.util.BitField) -> b
    boolean isFontStyleModified() -> k
    void setFontStyleModified(boolean) -> e
    boolean isFontOutlineModified() -> l
    void setFontOutlineModified(boolean) -> f
    boolean isFontShadowModified() -> m
    void setFontShadowModified(boolean) -> g
    void setFontCancellationModified(boolean) -> h
    boolean isFontCancellationModified() -> n
    void setEscapementTypeModified(boolean) -> i
    boolean isEscapementTypeModified() -> o
    void setUnderlineTypeModified(boolean) -> j
    boolean isUnderlineTypeModified() -> p
    void setFontWieghtModified(boolean) -> k
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.cf.PatternFormatting -> a.a.a.c.b.b.c:
    int field_15_pattern_style -> a
    org.apache.poi.util.BitField fillPatternStyle -> b
    int field_16_pattern_color_indexes -> c
    org.apache.poi.util.BitField patternColorIndex -> d
    org.apache.poi.util.BitField patternBackgroundColorIndex -> e
    int getFillPattern() -> a
    int getFillBackgroundColor() -> b
    int getFillForegroundColor() -> c
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
org.apache.poi.hssf.record.chart.BeginRecord -> a.a.a.c.b.c.a:
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.chart.CatLabRecord -> a.a.a.c.b.c.b:
    short rt -> a
    short grbitFrt -> b
    short wOffset -> c
    short at -> d
    short grbit -> e
    java.lang.Short unused -> f
    int getDataSize() -> a
    short getSid() -> c
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    java.lang.String toString() -> toString
org.apache.poi.hssf.record.chart.ChartEndBlockRecord -> a.a.a.c.b.c.c:
    short rt -> a
    short grbitFrt -> b
    short iObjectKind -> c
    byte[] unused -> d
    int getDataSize() -> a
    short getSid() -> c
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    java.lang.String toString() -> toString
    org.apache.poi.hssf.record.chart.ChartEndBlockRecord clone() -> d
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.chart.ChartEndObjectRecord -> a.a.a.c.b.c.d:
    short rt -> a
    short grbitFrt -> b
    short iObjectKind -> c
    byte[] reserved -> d
    int getDataSize() -> a
    short getSid() -> c
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    java.lang.String toString() -> toString
org.apache.poi.hssf.record.chart.ChartFRTInfoRecord -> a.a.a.c.b.c.e:
    short rt -> a
    short grbitFrt -> b
    byte verOriginator -> c
    byte verWriter -> d
    org.apache.poi.hssf.record.chart.ChartFRTInfoRecord$CFRTID[] rgCFRTID -> e
    int getDataSize() -> a
    short getSid() -> c
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    java.lang.String toString() -> toString
org.apache.poi.hssf.record.chart.ChartFRTInfoRecord$CFRTID -> a.a.a.c.b.c.f:
    int rtFirst -> a
    int rtLast -> b
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
org.apache.poi.hssf.record.chart.ChartRecord -> a.a.a.c.b.c.g:
    int field_1_x -> a
    int field_2_y -> b
    int field_3_width -> c
    int field_4_height -> d
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
    int getX() -> d
    int getY() -> e
    int getWidth() -> f
    int getHeight() -> g
org.apache.poi.hssf.record.chart.ChartStartBlockRecord -> a.a.a.c.b.c.h:
    short rt -> a
    short grbitFrt -> b
    short iObjectKind -> c
    short iObjectContext -> d
    short iObjectInstance1 -> e
    short iObjectInstance2 -> f
    int getDataSize() -> a
    short getSid() -> c
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    java.lang.String toString() -> toString
    org.apache.poi.hssf.record.chart.ChartStartBlockRecord clone() -> d
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.chart.ChartStartObjectRecord -> a.a.a.c.b.c.i:
    short rt -> a
    short grbitFrt -> b
    short iObjectKind -> c
    short iObjectContext -> d
    short iObjectInstance1 -> e
    short iObjectInstance2 -> f
    int getDataSize() -> a
    short getSid() -> c
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    java.lang.String toString() -> toString
org.apache.poi.hssf.record.chart.ChartTitleFormatRecord -> a.a.a.c.b.c.j:
    org.apache.poi.hssf.record.chart.ChartTitleFormatRecord$CTFormat[] _formats -> a
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.String toString() -> toString
org.apache.poi.hssf.record.chart.ChartTitleFormatRecord$CTFormat -> a.a.a.c.b.c.k:
    int _offset -> a
    int _fontIndex -> b
    int getOffset() -> a
    int getFontIndex() -> b
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
org.apache.poi.hssf.record.chart.DataFormatRecord -> a.a.a.c.b.c.l:
    org.apache.poi.util.BitField useExcel4Colors -> a
    short field_1_pointNumber -> b
    short field_2_seriesIndex -> c
    short field_3_seriesNumber -> d
    short field_4_formatFlags -> e
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
    short getPointNumber() -> d
    short getSeriesIndex() -> e
    short getSeriesNumber() -> f
    short getFormatFlags() -> g
    boolean isUseExcel4Colors() -> h
org.apache.poi.hssf.record.chart.EndRecord -> a.a.a.c.b.c.m:
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
org.apache.poi.hssf.record.chart.LegendRecord -> a.a.a.c.b.c.n:
    org.apache.poi.util.BitField autoPosition -> a
    org.apache.poi.util.BitField autoSeries -> b
    org.apache.poi.util.BitField autoXPositioning -> c
    org.apache.poi.util.BitField autoYPositioning -> d
    org.apache.poi.util.BitField vertical -> e
    org.apache.poi.util.BitField dataTable -> f
    int field_1_xAxisUpperLeft -> g
    int field_2_yAxisUpperLeft -> h
    int field_3_xSize -> i
    int field_4_ySize -> j
    byte field_5_type -> k
    byte field_6_spacing -> l
    short field_7_options -> m
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
    int getXAxisUpperLeft() -> d
    int getYAxisUpperLeft() -> e
    int getXSize() -> f
    int getYSize() -> g
    byte getType() -> h
    byte getSpacing() -> i
    short getOptions() -> j
    boolean isAutoPosition() -> k
    boolean isAutoSeries() -> l
    boolean isAutoXPositioning() -> m
    boolean isAutoYPositioning() -> n
    boolean isVertical() -> o
    boolean isDataTable() -> p
org.apache.poi.hssf.record.chart.LinkedDataRecord -> a.a.a.c.b.c.o:
    org.apache.poi.util.BitField customNumberFormat -> a
    byte field_1_linkType -> b
    byte field_2_referenceType -> c
    short field_3_options -> d
    short field_4_indexNumberFmtRecord -> e
    org.apache.poi.ss.formula.Formula field_5_formulaOfLink -> f
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
    byte getLinkType() -> d
    byte getReferenceType() -> e
    short getOptions() -> f
    short getIndexNumberFmtRecord() -> g
    boolean isCustomNumberFormat() -> h
org.apache.poi.hssf.record.chart.SeriesRecord -> a.a.a.c.b.c.p:
    short field_1_categoryDataType -> a
    short field_2_valuesDataType -> b
    short field_3_numCategories -> c
    short field_4_numValues -> d
    short field_5_bubbleSeriesType -> e
    short field_6_numBubbleValues -> f
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
    short getCategoryDataType() -> d
    short getValuesDataType() -> e
    short getNumCategories() -> f
    short getNumValues() -> g
    short getBubbleSeriesType() -> h
    short getNumBubbleValues() -> i
org.apache.poi.hssf.record.chart.SeriesTextRecord -> a.a.a.c.b.c.q:
    int field_1_id -> a
    boolean is16bit -> b
    java.lang.String field_4_text -> c
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
    int getId() -> d
    java.lang.String getText() -> e
org.apache.poi.hssf.record.chart.SeriesToChartGroupRecord -> a.a.a.c.b.c.r:
    short field_1_chartGroupIndex -> a
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
    short getChartGroupIndex() -> d
org.apache.poi.hssf.record.chart.ValueRangeRecord -> a.a.a.c.b.c.s:
    org.apache.poi.util.BitField automaticMinimum -> a
    org.apache.poi.util.BitField automaticMaximum -> b
    org.apache.poi.util.BitField automaticMajor -> c
    org.apache.poi.util.BitField automaticMinor -> d
    org.apache.poi.util.BitField automaticCategoryCrossing -> e
    org.apache.poi.util.BitField logarithmicScale -> f
    org.apache.poi.util.BitField valuesInReverse -> g
    org.apache.poi.util.BitField crossCategoryAxisAtMaximum -> h
    org.apache.poi.util.BitField reserved -> i
    double field_1_minimumAxisValue -> j
    double field_2_maximumAxisValue -> k
    double field_3_majorIncrement -> l
    double field_4_minorIncrement -> m
    double field_5_categoryAxisCross -> n
    short field_6_options -> o
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.Object clone() -> clone
    double getMinimumAxisValue() -> d
    double getMaximumAxisValue() -> e
    double getMajorIncrement() -> f
    double getMinorIncrement() -> g
    double getCategoryAxisCross() -> h
    short getOptions() -> i
    boolean isAutomaticMinimum() -> j
    boolean isAutomaticMaximum() -> k
    boolean isAutomaticMajor() -> l
    boolean isAutomaticMinor() -> m
    boolean isAutomaticCategoryCrossing() -> n
    boolean isLogarithmicScale() -> o
    boolean isValuesInReverse() -> p
    boolean isCrossCategoryAxisAtMaximum() -> q
    boolean isReserved() -> r
org.apache.poi.hssf.record.common.FtrHeader -> a.a.a.c.b.d.a:
    short recordType -> a
    short grbitFrt -> b
    byte[] reserved -> c
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    void setRecordType(short) -> a
org.apache.poi.hssf.record.common.SharedFeature -> a.a.a.c.b.d.b:
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
org.apache.poi.hssf.record.common.UnicodeString -> a.a.a.c.b.d.c:
    org.apache.poi.util.POILogger _logger -> a
    short field_1_charCount -> b
    byte field_2_optionflags -> c
    java.lang.String field_3_string -> d
    java.util.List field_4_format_runs -> e
    org.apache.poi.hssf.record.common.UnicodeString$ExtRst field_5_ext_rst -> f
    org.apache.poi.util.BitField highByte -> g
    org.apache.poi.util.BitField extBit -> h
    org.apache.poi.util.BitField richText -> i
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int getCharCount() -> a
    void setCharCount(short) -> a
    byte getOptionFlags() -> b
    java.lang.String getString() -> c
    void setString(java.lang.String) -> a
    int getFormatRunCount() -> d
    org.apache.poi.hssf.record.common.UnicodeString$FormatRun getFormatRun(int) -> a
    java.lang.String toString() -> toString
    java.lang.String getDebugInfo() -> e
    void serialize(org.apache.poi.hssf.record.cont.ContinuableRecordOutput) -> a
    int compareTo(org.apache.poi.hssf.record.common.UnicodeString) -> a
    boolean isRichText() -> f
    boolean isExtendedText() -> g
    java.lang.Object clone() -> clone
    int compareTo(java.lang.Object) -> compareTo
org.apache.poi.hssf.record.common.UnicodeString$ExtRst -> a.a.a.c.b.d.d:
    short reserved -> a
    short formattingFontIndex -> b
    short formattingOptions -> c
    int numberOfRuns -> d
    java.lang.String phoneticText -> e
    org.apache.poi.hssf.record.common.UnicodeString$PhRun[] phRuns -> f
    byte[] extraData -> g
    void populateEmpty() -> c
    int getDataSize() -> a
    void serialize(org.apache.poi.hssf.record.cont.ContinuableRecordOutput) -> a
    boolean equals(java.lang.Object) -> equals
    int compareTo(org.apache.poi.hssf.record.common.UnicodeString$ExtRst) -> a
    int hashCode() -> hashCode
    org.apache.poi.hssf.record.common.UnicodeString$ExtRst clone() -> b
    java.lang.Object clone() -> clone
    int compareTo(java.lang.Object) -> compareTo
org.apache.poi.hssf.record.common.UnicodeString$FormatRun -> a.a.a.c.b.d.e:
    short _character -> a
    short _fontIndex -> b
    boolean $assertionsDisabled -> c
    short getCharacterPos() -> a
    short getFontIndex() -> b
    boolean equals(java.lang.Object) -> equals
    int compareTo(org.apache.poi.hssf.record.common.UnicodeString$FormatRun) -> a
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int compareTo(java.lang.Object) -> compareTo
org.apache.poi.hssf.record.common.UnicodeString$PhRun -> a.a.a.c.b.d.f:
    int phoneticTextFirstCharacterOffset -> a
    int realTextFirstCharacterOffset -> b
    int realTextLength -> c
    void serialize(org.apache.poi.hssf.record.cont.ContinuableRecordOutput) -> a
    void access$200(org.apache.poi.hssf.record.common.UnicodeString$PhRun,org.apache.poi.hssf.record.cont.ContinuableRecordOutput) -> a
    int access$300(org.apache.poi.hssf.record.common.UnicodeString$PhRun) -> a
    int access$400(org.apache.poi.hssf.record.common.UnicodeString$PhRun) -> b
    int access$500(org.apache.poi.hssf.record.common.UnicodeString$PhRun) -> c
org.apache.poi.hssf.record.cont.ContinuableRecord -> a.a.a.c.b.e.a:
    void serialize(org.apache.poi.hssf.record.cont.ContinuableRecordOutput) -> a
    int getRecordSize() -> b
    int serialize(int,byte[]) -> a
org.apache.poi.hssf.record.cont.ContinuableRecordOutput -> a.a.a.c.b.e.b:
    org.apache.poi.util.LittleEndianOutput _out -> a
    org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput _ulrOutput -> b
    int _totalPreviousRecordsSize -> c
    org.apache.poi.util.LittleEndianOutput NOPOutput -> d
    org.apache.poi.hssf.record.cont.ContinuableRecordOutput createForCountingOnly() -> a
    int getTotalSize() -> b
    void terminate() -> c
    int getAvailableSpace() -> d
    void writeContinue() -> e
    void writeContinueIfRequired(int) -> a
    void writeStringData(java.lang.String) -> a
    void writeString(java.lang.String,int,int) -> a
    void writeCharacterData(java.lang.String,boolean) -> a
    void write(byte[]) -> a
    void write(byte[],int,int) -> a
    void writeByte(int) -> b
    void writeDouble(double) -> a
    void writeInt(int) -> c
    void writeLong(long) -> a
    void writeShort(int) -> d
org.apache.poi.hssf.record.cont.ContinuableRecordOutput$1 -> a.a.a.c.b.e.c:
    org.apache.poi.util.LittleEndianOutput createDelayedOutput(int) -> a
    void write(byte[]) -> a
    void write(byte[],int,int) -> a
    void writeByte(int) -> b
    void writeDouble(double) -> a
    void writeInt(int) -> c
    void writeLong(long) -> a
    void writeShort(int) -> d
org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput -> a.a.a.c.b.e.d:
    org.apache.poi.util.LittleEndianOutput _originalOut -> a
    org.apache.poi.util.LittleEndianOutput _dataSizeOutput -> b
    byte[] _byteBuffer -> c
    org.apache.poi.util.LittleEndianOutput _out -> d
    int _size -> e
    int getTotalSize() -> a
    int getAvailableSpace() -> b
    void terminate() -> c
    void write(byte[]) -> a
    void write(byte[],int,int) -> a
    void writeByte(int) -> b
    void writeDouble(double) -> a
    void writeInt(int) -> c
    void writeLong(long) -> a
    void writeShort(int) -> d
org.apache.poi.hssf.record.crypto.Biff8Cipher -> a.a.a.c.b.f.a:
    void startRecord(int) -> a
    void setNextRecordSize(int) -> b
    void skipTwoBytes() -> a
    void xor(byte[],int,int) -> a
    int xorByte(int) -> c
    int xorShort(int) -> d
    int xorInt(int) -> e
    long xorLong(long) -> a
org.apache.poi.hssf.record.crypto.Biff8DecryptingStream -> a.a.a.c.b.f.b:
    org.apache.poi.util.LittleEndianInput _le -> a
    org.apache.poi.hssf.record.crypto.Biff8Cipher _cipher -> b
    int available() -> available
    int readRecordSID() -> a
    int readDataSize() -> b
    double readDouble() -> j
    void readFully(byte[],int,int) -> a
    int readUByte() -> h
    byte readByte() -> d
    int readUShort() -> i
    short readShort() -> e
    int readInt() -> f
    long readLong() -> g
org.apache.poi.hssf.record.crypto.Biff8EncryptionKey -> a.a.a.c.b.f.c:
    javax.crypto.SecretKey _secretKey -> a
    java.lang.ThreadLocal _userPasswordTLS -> b
    boolean validate(byte[],byte[]) -> a
    java.lang.String getCurrentUserPassword() -> a
org.apache.poi.hssf.record.crypto.Biff8RC4 -> a.a.a.c.b.f.d:
    javax.crypto.Cipher _rc4 -> a
    int _streamPos -> b
    int _nextRC4BlockStart -> c
    int _currentKeyIndex -> d
    boolean _shouldSkipEncryptionOnCurrentRecord -> e
    org.apache.poi.hssf.record.crypto.Biff8RC4Key _key -> f
    java.nio.ByteBuffer _buffer -> g
    void rekeyForNextBlock() -> b
    void encryptBytes(byte[],int,int) -> b
    void startRecord(int) -> a
    boolean isNeverEncryptedRecord(int) -> f
    void skipTwoBytes() -> a
    void xor(byte[],int,int) -> a
    int xorByte(int) -> c
    int xorShort(int) -> d
    int xorInt(int) -> e
    long xorLong(long) -> a
    void setNextRecordSize(int) -> b
org.apache.poi.hssf.record.crypto.Biff8RC4Key -> a.a.a.c.b.f.e:
    org.apache.poi.util.POILogger log -> b
    org.apache.poi.hssf.record.crypto.Biff8RC4Key create(java.lang.String,byte[]) -> a
    boolean validate(byte[],byte[]) -> a
    javax.crypto.Cipher getCipher() -> b
    byte[] createKeyDigest(java.lang.String,byte[]) -> b
    void initCipherForBlock(javax.crypto.Cipher,int) -> a
    byte[] xor(byte[],byte[]) -> b
    void check16Bytes(byte[],java.lang.String) -> a
org.apache.poi.hssf.record.crypto.Biff8XOR -> a.a.a.c.b.f.f:
    org.apache.poi.hssf.record.crypto.Biff8XORKey _key -> a
    java.nio.ByteBuffer _buffer -> b
    boolean _shouldSkipEncryptionOnCurrentRecord -> c
    int _initialOffset -> d
    int _dataLength -> e
    int _xorArrayIndex -> f
    void startRecord(int) -> a
    void setNextRecordSize(int) -> b
    boolean isNeverEncryptedRecord(int) -> f
    void skipTwoBytes() -> a
    void xor(byte[],int,int) -> a
    byte rotateLeft(byte,int) -> a
    int xorByte(int) -> c
    int xorShort(int) -> d
    int xorInt(int) -> e
    long xorLong(long) -> a
org.apache.poi.hssf.record.crypto.Biff8XORKey -> a.a.a.c.b.f.g:
    int _xorKey -> b
    org.apache.poi.hssf.record.crypto.Biff8XORKey create(java.lang.String,int) -> a
    boolean validate(java.lang.String,int) -> b
org.apache.poi.hssf.record.pivottable.DataItemRecord -> a.a.a.c.b.g.a:
    int isxvdData -> a
    int iiftab -> b
    int df -> c
    int isxvd -> d
    int isxvi -> e
    int ifmt -> f
    java.lang.String name -> g
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.String toString() -> toString
org.apache.poi.hssf.record.pivottable.ExtendedPivotTableViewFieldsRecord -> a.a.a.c.b.g.b:
    int _grbit1 -> a
    int _grbit2 -> b
    int _citmShow -> c
    int _isxdiSort -> d
    int _isxdiShow -> e
    int _reserved1 -> f
    int _reserved2 -> g
    java.lang.String _subtotalName -> h
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.String toString() -> toString
org.apache.poi.hssf.record.pivottable.PageItemRecord -> a.a.a.c.b.g.c:
    org.apache.poi.hssf.record.pivottable.PageItemRecord$FieldInfo[] _fieldInfos -> a
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.String toString() -> toString
org.apache.poi.hssf.record.pivottable.PageItemRecord$FieldInfo -> a.a.a.c.b.g.d:
    int _isxvi -> a
    int _isxvd -> b
    int _idObj -> c
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    void appendDebugInfo(java.lang.StringBuffer) -> a
org.apache.poi.hssf.record.pivottable.StreamIDRecord -> a.a.a.c.b.g.e:
    int idstm -> a
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.String toString() -> toString
org.apache.poi.hssf.record.pivottable.ViewDefinitionRecord -> a.a.a.c.b.g.f:
    int rwFirst -> a
    int rwLast -> b
    int colFirst -> c
    int colLast -> d
    int rwFirstHead -> e
    int rwFirstData -> f
    int colFirstData -> g
    int iCache -> h
    int reserved -> i
    int sxaxis4Data -> j
    int ipos4Data -> k
    int cDim -> l
    int cDimRw -> m
    int cDimCol -> n
    int cDimPg -> o
    int cDimData -> p
    int cRw -> q
    int cCol -> r
    int grbit -> s
    int itblAutoFmt -> t
    java.lang.String dataField -> u
    java.lang.String name -> v
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.String toString() -> toString
org.apache.poi.hssf.record.pivottable.ViewFieldsRecord -> a.a.a.c.b.g.g:
    int _sxaxis -> a
    int _cSub -> b
    int _grbitSub -> c
    int _cItm -> d
    java.lang.String _name -> e
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.String toString() -> toString
org.apache.poi.hssf.record.pivottable.ViewSourceRecord -> a.a.a.c.b.g.h:
    int vs -> a
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getDataSize() -> a
    short getSid() -> c
    java.lang.String toString() -> toString
org.apache.poi.hssf.usermodel.HSSFCell -> a.a.a.c.c.a:
    org.apache.poi.util.POILogger log -> b
    int LAST_COLUMN_NUMBER -> a
    java.lang.String LAST_COLUMN_NAME -> c
    org.apache.poi.hssf.usermodel.HSSFWorkbook _book -> d
    org.apache.poi.hssf.usermodel.HSSFSheet _sheet -> e
    int _cellType -> f
    org.apache.poi.hssf.usermodel.HSSFRichTextString _stringValue -> g
    org.apache.poi.hssf.record.CellValueRecordInterface _record -> h
    int determineType(org.apache.poi.hssf.record.CellValueRecordInterface) -> a
    int getColumnIndex() -> a
    void setCellType(int,boolean,int,short,short) -> a
    int getCellType() -> b
    java.lang.String getCellFormula() -> c
    java.lang.String getCellTypeName(int) -> a
    java.lang.RuntimeException typeMismatch(int,int,boolean) -> a
    void checkFormulaCachedValueType(int,org.apache.poi.hssf.record.FormulaRecord) -> a
    double getNumericCellValue() -> d
    java.util.Date getDateCellValue() -> e
    java.lang.String getStringCellValue() -> f
    org.apache.poi.hssf.usermodel.HSSFRichTextString getRichStringCellValue() -> g
    boolean convertCellValueToBoolean() -> l
    java.lang.String convertCellValueToString() -> m
    boolean getBooleanCellValue() -> h
    org.apache.poi.hssf.usermodel.HSSFCellStyle getCellStyle() -> i
    org.apache.poi.hssf.record.CellValueRecordInterface getCellValueRecord() -> j
    void checkBounds(int) -> b
    java.lang.String toString() -> toString
    org.apache.poi.ss.usermodel.CellStyle getCellStyle() -> k
org.apache.poi.hssf.usermodel.HSSFCellStyle -> a.a.a.c.c.b:
    org.apache.poi.hssf.record.ExtendedFormatRecord _format -> a
    short _index -> b
    org.apache.poi.hssf.model.InternalWorkbook _workbook -> c
    java.lang.ThreadLocal lastDateFormat -> d
    java.lang.ThreadLocal lastFormats -> e
    java.lang.ThreadLocal getDataFormatStringCache -> f
    short getDataFormat() -> a
    java.lang.String getDataFormatString() -> b
    java.lang.String getDataFormatString(org.apache.poi.hssf.model.InternalWorkbook) -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.apache.poi.hssf.usermodel.HSSFCellStyle$1 -> a.a.a.c.c.c:
    java.lang.Short initialValue() -> a
    java.lang.Object initialValue() -> initialValue
org.apache.poi.hssf.usermodel.HSSFDataFormat -> a.a.a.c.c.d:
    java.lang.String[] _builtinFormats -> a
    java.util.Vector _formats -> b
    org.apache.poi.hssf.model.InternalWorkbook _workbook -> c
    boolean _movedBuiltins -> d
    java.lang.String getFormat(short) -> a
    void ensureFormatsSize(int) -> a
org.apache.poi.hssf.usermodel.HSSFDateUtil -> a.a.a.c.c.e:
org.apache.poi.hssf.usermodel.HSSFErrorConstants -> a.a.a.c.c.f:
org.apache.poi.hssf.usermodel.HSSFEvaluationWorkbook -> a.a.a.c.c.g:
    org.apache.poi.util.POILogger logger -> a
    org.apache.poi.hssf.usermodel.HSSFWorkbook _uBook -> b
    org.apache.poi.hssf.model.InternalWorkbook _iBook -> c
    org.apache.poi.hssf.usermodel.HSSFEvaluationWorkbook create(org.apache.poi.hssf.usermodel.HSSFWorkbook) -> a
    java.lang.String getSheetName(int) -> a
    int convertFromExternSheetIndex(int) -> b
    org.apache.poi.ss.formula.EvaluationWorkbook$ExternalSheet getExternalSheet(int) -> c
    java.lang.String resolveNameXText(org.apache.poi.ss.formula.ptg.NameXPtg) -> a
    java.lang.String getSheetFirstNameByExternSheet(int) -> d
    java.lang.String getSheetLastNameByExternSheet(int) -> e
    java.lang.String getNameText(org.apache.poi.ss.formula.ptg.NamePtg) -> a
org.apache.poi.hssf.usermodel.HSSFName -> a.a.a.c.c.h:
    org.apache.poi.hssf.usermodel.HSSFWorkbook _book -> a
    org.apache.poi.hssf.record.NameRecord _definedNameRec -> b
    org.apache.poi.hssf.record.NameCommentRecord _commentRec -> c
    java.lang.String toString() -> toString
org.apache.poi.hssf.usermodel.HSSFRichTextString -> a.a.a.c.c.i:
    org.apache.poi.hssf.record.common.UnicodeString _string -> b
    org.apache.poi.hssf.model.InternalWorkbook _book -> c
    org.apache.poi.hssf.record.LabelSSTRecord _record -> d
    boolean $assertionsDisabled -> a
    void setWorkbookReferences(org.apache.poi.hssf.model.InternalWorkbook,org.apache.poi.hssf.record.LabelSSTRecord) -> a
    java.lang.String getString() -> a
    void setUnicodeString(org.apache.poi.hssf.record.common.UnicodeString) -> a
    int length() -> b
    int numFormattingRuns() -> c
    int getIndexOfFormattingRun(int) -> a
    short getFontOfFormattingRun(int) -> b
    int compareTo(org.apache.poi.hssf.usermodel.HSSFRichTextString) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
org.apache.poi.hssf.usermodel.HSSFRow -> a.a.a.c.c.j:
    int INITIAL_CAPACITY -> a
    int rowNum -> f
    org.apache.poi.hssf.usermodel.HSSFCell[] cells -> g
    org.apache.poi.hssf.record.RowRecord row -> h
    org.apache.poi.hssf.usermodel.HSSFWorkbook book -> i
    org.apache.poi.hssf.usermodel.HSSFSheet sheet -> j
    boolean $assertionsDisabled -> b
    org.apache.poi.hssf.usermodel.HSSFCell createCell(int,int) -> a
    org.apache.poi.hssf.usermodel.HSSFCell createCellFromRecord(org.apache.poi.hssf.record.CellValueRecordInterface) -> a
    void setRowNum(int) -> a
    int getRowNum() -> a
    void addCell(org.apache.poi.hssf.usermodel.HSSFCell) -> a
    org.apache.poi.hssf.usermodel.HSSFCell retrieveCell(int) -> c
    org.apache.poi.hssf.usermodel.HSSFCell getCell(int) -> b
    org.apache.poi.hssf.usermodel.HSSFCell getCell(int,org.apache.poi.ss.usermodel.Row$MissingCellPolicy) -> a
    short getLastCellNum() -> b
    org.apache.poi.hssf.record.RowRecord getRowRecord() -> c
    java.util.Iterator cellIterator() -> d
    java.util.Iterator iterator() -> iterator
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    org.apache.poi.hssf.usermodel.HSSFCell[] access$000(org.apache.poi.hssf.usermodel.HSSFRow) -> a
org.apache.poi.hssf.usermodel.HSSFRow$CellIterator -> a.a.a.c.c.k:
    int thisId -> a
    int nextId -> b
    org.apache.poi.hssf.usermodel.HSSFRow this$0 -> c
    boolean hasNext() -> hasNext
    org.apache.poi.ss.usermodel.Cell next() -> a
    void remove() -> remove
    void findNext() -> b
    java.lang.Object next() -> next
org.apache.poi.hssf.usermodel.HSSFSheet -> a.a.a.c.c.l:
    org.apache.poi.util.POILogger log -> d
    int INITIAL_CAPACITY -> a
    org.apache.poi.hssf.model.InternalSheet _sheet -> e
    java.util.TreeMap _rows -> f
    org.apache.poi.hssf.model.InternalWorkbook _book -> b
    org.apache.poi.hssf.usermodel.HSSFWorkbook _workbook -> c
    int _firstrow -> g
    int _lastrow -> h
    void setPropertiesFromSheet(org.apache.poi.hssf.model.InternalSheet) -> a
    org.apache.poi.hssf.usermodel.HSSFRow createRowFromRecord(org.apache.poi.hssf.record.RowRecord) -> a
    void addRow(org.apache.poi.hssf.usermodel.HSSFRow,boolean) -> a
    org.apache.poi.hssf.usermodel.HSSFRow getRow(int) -> a
    int getFirstRowNum() -> a
    int getLastRowNum() -> b
    java.util.Iterator rowIterator() -> c
    java.util.Iterator iterator() -> iterator
    org.apache.poi.hssf.model.InternalSheet getSheet() -> d
org.apache.poi.hssf.usermodel.HSSFWorkbook -> a.a.a.c.c.m:
    java.util.regex.Pattern COMMA_PATTERN -> d
    int INITIAL_CAPACITY -> b
    org.apache.poi.hssf.model.InternalWorkbook workbook -> e
    java.util.List _sheets -> c
    java.util.ArrayList names -> f
    boolean preserveNodes -> g
    org.apache.poi.ss.usermodel.Row$MissingCellPolicy missingCellPolicy -> h
    org.apache.poi.util.POILogger log -> i
    org.apache.poi.ss.formula.udf.UDFFinder _udfFinder -> j
    java.lang.String[] WORKBOOK_DIR_ENTRY_NAMES -> k
    java.lang.String getWorkbookDirEntryName(org.apache.poi.poifs.filesystem.DirectoryNode) -> a
    void setPropertiesFromWorkbook(org.apache.poi.hssf.model.InternalWorkbook) -> a
    void convertLabelRecords(java.util.List,int) -> a
    org.apache.poi.ss.usermodel.Row$MissingCellPolicy getMissingCellPolicy() -> a
    void validateSheetIndex(int) -> c
    java.lang.String getSheetName(int) -> a
    org.apache.poi.hssf.usermodel.HSSFSheet getSheetAt(int) -> b
    void close() -> close
    org.apache.poi.hssf.model.InternalWorkbook getWorkbook() -> b
org.apache.poi.hssf.util.CellRangeAddress8Bit -> a.a.a.c.d.a:
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    int getEncodedSize(int) -> a
org.apache.poi.hssf.util.CellReference -> a.a.a.c.d.b:
org.apache.poi.hssf.util.LazilyConcatenatedByteArray -> a.a.a.c.d.c:
    java.util.List arrays -> a
    void concatenate(byte[]) -> a
    byte[] toArray() -> a
org.apache.poi.hssf.util.RKUtil -> a.a.a.c.d.d:
    double decodeNumber(int) -> a
org.apache.poi.poifs.common.POIFSBigBlockSize -> a.a.a.d.a.a:
    int bigBlockSize -> a
    short headerValue -> b
    int getBigBlockSize() -> a
    short getHeaderValue() -> b
    int getBATEntriesPerBlock() -> c
    int getXBATEntriesPerBlock() -> d
    int getNextXBATChainOffset() -> e
org.apache.poi.poifs.common.POIFSConstants -> a.a.a.d.a.b:
    org.apache.poi.poifs.common.POIFSBigBlockSize SMALLER_BIG_BLOCK_SIZE_DETAILS -> a
    org.apache.poi.poifs.common.POIFSBigBlockSize LARGER_BIG_BLOCK_SIZE_DETAILS -> b
    byte[] OOXML_FILE_HEADER -> c
org.apache.poi.poifs.crypt.ChainingMode -> a.a.a.d.b.a:
    org.apache.poi.poifs.crypt.ChainingMode ecb -> a
    org.apache.poi.poifs.crypt.ChainingMode cbc -> b
    org.apache.poi.poifs.crypt.ChainingMode cfb -> c
    java.lang.String jceId -> d
    int ecmaId -> e
    org.apache.poi.poifs.crypt.ChainingMode[] $VALUES -> f
    org.apache.poi.poifs.crypt.ChainingMode[] values() -> values
    org.apache.poi.poifs.crypt.ChainingMode valueOf(java.lang.String) -> valueOf
org.apache.poi.poifs.crypt.CipherAlgorithm -> a.a.a.d.b.b:
    org.apache.poi.poifs.crypt.CipherAlgorithm rc4 -> a
    org.apache.poi.poifs.crypt.CipherAlgorithm aes128 -> b
    org.apache.poi.poifs.crypt.CipherAlgorithm aes192 -> c
    org.apache.poi.poifs.crypt.CipherAlgorithm aes256 -> d
    org.apache.poi.poifs.crypt.CipherAlgorithm rc2 -> e
    org.apache.poi.poifs.crypt.CipherAlgorithm des -> f
    org.apache.poi.poifs.crypt.CipherAlgorithm des3 -> g
    org.apache.poi.poifs.crypt.CipherAlgorithm des3_112 -> h
    org.apache.poi.poifs.crypt.CipherProvider provider -> i
    java.lang.String jceId -> j
    int ecmaId -> k
    int defaultKeySize -> l
    int[] allowedKeySize -> m
    int blockSize -> n
    int encryptedVerifierHashLength -> o
    java.lang.String xmlId -> p
    boolean needsBouncyCastle -> q
    org.apache.poi.poifs.crypt.CipherAlgorithm[] $VALUES -> r
    org.apache.poi.poifs.crypt.CipherAlgorithm[] values() -> values
    org.apache.poi.poifs.crypt.CipherAlgorithm valueOf(java.lang.String) -> valueOf
org.apache.poi.poifs.crypt.CipherProvider -> a.a.a.d.b.c:
    org.apache.poi.poifs.crypt.CipherProvider rc4 -> a
    org.apache.poi.poifs.crypt.CipherProvider aes -> b
    java.lang.String jceId -> c
    int ecmaId -> d
    org.apache.poi.poifs.crypt.CipherProvider[] $VALUES -> e
    org.apache.poi.poifs.crypt.CipherProvider[] values() -> values
    org.apache.poi.poifs.crypt.CipherProvider valueOf(java.lang.String) -> valueOf
org.apache.poi.poifs.crypt.CryptoFunctions -> a.a.a.d.b.d:
    int[] InitialCodeArray -> a
    byte[] PadArray -> b
    int[][] EncryptionMatrix -> c
    javax.crypto.Cipher getCipher(javax.crypto.SecretKey,org.apache.poi.poifs.crypt.CipherAlgorithm,org.apache.poi.poifs.crypt.ChainingMode,byte[],int) -> a
    javax.crypto.Cipher getCipher(javax.crypto.SecretKey,org.apache.poi.poifs.crypt.CipherAlgorithm,org.apache.poi.poifs.crypt.ChainingMode,byte[],int,java.lang.String) -> a
    byte[] getBlock0(byte[],int) -> a
    byte[] getBlockX(byte[],int,byte) -> a
    java.security.MessageDigest getMessageDigest(org.apache.poi.poifs.crypt.HashAlgorithm) -> a
    void registerBouncyCastle() -> a
    int createXorVerifier2(java.lang.String) -> a
    int createXorVerifier1(java.lang.String) -> b
    int createXorKey1(java.lang.String) -> c
    byte[] createXorArray1(java.lang.String) -> d
    byte rotateLeft(byte,int) -> a
org.apache.poi.poifs.crypt.HashAlgorithm -> a.a.a.d.b.e:
    org.apache.poi.poifs.crypt.HashAlgorithm none -> a
    org.apache.poi.poifs.crypt.HashAlgorithm sha1 -> b
    org.apache.poi.poifs.crypt.HashAlgorithm sha256 -> c
    org.apache.poi.poifs.crypt.HashAlgorithm sha384 -> d
    org.apache.poi.poifs.crypt.HashAlgorithm sha512 -> e
    org.apache.poi.poifs.crypt.HashAlgorithm md5 -> f
    org.apache.poi.poifs.crypt.HashAlgorithm md2 -> g
    org.apache.poi.poifs.crypt.HashAlgorithm md4 -> h
    org.apache.poi.poifs.crypt.HashAlgorithm ripemd128 -> i
    org.apache.poi.poifs.crypt.HashAlgorithm ripemd160 -> j
    org.apache.poi.poifs.crypt.HashAlgorithm whirlpool -> k
    java.lang.String jceId -> l
    int ecmaId -> m
    java.lang.String ecmaString -> n
    int hashSize -> o
    java.lang.String jceHmacId -> p
    boolean needsBouncyCastle -> q
    org.apache.poi.poifs.crypt.HashAlgorithm[] $VALUES -> r
    org.apache.poi.poifs.crypt.HashAlgorithm[] values() -> values
    org.apache.poi.poifs.crypt.HashAlgorithm valueOf(java.lang.String) -> valueOf
org.apache.poi.poifs.filesystem.BlockStore -> a.a.a.d.c.a:
    int getBlockStoreBlockSize() -> a
    java.nio.ByteBuffer getBlockAt(int) -> a
    org.apache.poi.poifs.storage.BATBlock$BATBlockAndIndex getBATBlockAndIndex(int) -> b
    int getNextBlock(int) -> c
    void setNextBlock(int,int) -> a
    org.apache.poi.poifs.filesystem.BlockStore$ChainLoopDetector getChainLoopDetector() -> b
org.apache.poi.poifs.filesystem.BlockStore$ChainLoopDetector -> a.a.a.d.c.b:
    boolean[] used_blocks -> b
    org.apache.poi.poifs.filesystem.BlockStore this$0 -> a
    void claim(int) -> a
org.apache.poi.poifs.filesystem.DirectoryEntry -> a.a.a.d.c.c:
org.apache.poi.poifs.filesystem.DirectoryNode -> a.a.a.d.c.d:
    java.util.Map _byname -> a
    java.util.ArrayList _entries -> b
    org.apache.poi.poifs.filesystem.POIFSFileSystem _ofilesystem -> c
    org.apache.poi.poifs.filesystem.NPOIFSFileSystem _nfilesystem -> d
    org.apache.poi.poifs.filesystem.POIFSDocumentPath _path -> e
    org.apache.poi.poifs.filesystem.POIFSFileSystem getFileSystem() -> a
    org.apache.poi.poifs.filesystem.NPOIFSFileSystem getNFileSystem() -> b
    org.apache.poi.poifs.filesystem.DocumentInputStream createDocumentInputStream(java.lang.String) -> a
    org.apache.poi.poifs.filesystem.DocumentInputStream createDocumentInputStream(org.apache.poi.poifs.filesystem.Entry) -> a
    org.apache.poi.poifs.filesystem.DocumentEntry createDocument(org.apache.poi.poifs.filesystem.POIFSDocument) -> a
    java.util.Iterator getEntries() -> c
    org.apache.poi.poifs.filesystem.Entry getEntry(java.lang.String) -> b
    org.apache.poi.poifs.filesystem.DirectoryEntry createDirectory(java.lang.String) -> c
    void setStorageClsid(org.apache.poi.hpsf.ClassID) -> a
    java.util.Iterator iterator() -> iterator
org.apache.poi.poifs.filesystem.DocumentEntry -> a.a.a.d.c.e:
    int getSize() -> a
org.apache.poi.poifs.filesystem.DocumentInputStream -> a.a.a.d.c.f:
    org.apache.poi.poifs.filesystem.DocumentInputStream delegate -> a
    int available() -> available
    void close() -> close
    void mark(int) -> mark
    boolean markSupported() -> markSupported
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    void reset() -> reset
    long skip(long) -> skip
    byte readByte() -> d
    double readDouble() -> j
    short readShort() -> e
    void readFully(byte[]) -> a
    void readFully(byte[],int,int) -> a
    long readLong() -> g
    int readInt() -> f
    int readUShort() -> i
    int readUByte() -> h
org.apache.poi.poifs.filesystem.DocumentNode -> a.a.a.d.c.g:
    org.apache.poi.poifs.filesystem.POIFSDocument _document -> a
    org.apache.poi.poifs.filesystem.POIFSDocument getDocument() -> b
    int getSize() -> a
    boolean isDocumentEntry() -> b_
org.apache.poi.poifs.filesystem.DocumentOutputStream -> a.a.a.d.c.h:
    java.io.OutputStream _stream -> a
    int _limit -> b
    int _written -> c
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void flush() -> flush
    void close() -> close
    void limitCheck(int) -> a
org.apache.poi.poifs.filesystem.Entry -> a.a.a.d.c.i:
    java.lang.String getName() -> d
    boolean isDocumentEntry() -> b_
    org.apache.poi.poifs.filesystem.DirectoryEntry getParent() -> e
org.apache.poi.poifs.filesystem.EntryNode -> a.a.a.d.c.j:
    org.apache.poi.poifs.property.Property _property -> a
    org.apache.poi.poifs.filesystem.DirectoryNode _parent -> b
    org.apache.poi.poifs.property.Property getProperty() -> f
    java.lang.String getName() -> d
    boolean isDocumentEntry() -> b_
    org.apache.poi.poifs.filesystem.DirectoryEntry getParent() -> e
org.apache.poi.poifs.filesystem.NDocumentInputStream -> a.a.a.d.c.k:
    int _current_offset -> a
    int _current_block_count -> b
    int _marked_offset -> c
    int _marked_offset_count -> d
    int _document_size -> e
    boolean _closed -> f
    org.apache.poi.poifs.filesystem.NPOIFSDocument _document -> g
    java.util.Iterator _data -> h
    java.nio.ByteBuffer _buffer -> i
    int available() -> available
    void close() -> close
    void mark(int) -> mark
    int read() -> read
    int read(byte[],int,int) -> read
    void reset() -> reset
    long skip(long) -> skip
    void dieIfClosed() -> a
    boolean atEOD() -> b
    void checkAvaliable(int) -> a
    void readFully(byte[],int,int) -> a
    byte readByte() -> d
    double readDouble() -> j
    long readLong() -> g
    short readShort() -> e
    int readInt() -> f
    int readUShort() -> i
    int readUByte() -> h
org.apache.poi.poifs.filesystem.NPOIFSDocument -> a.a.a.d.c.l:
    org.apache.poi.poifs.property.DocumentProperty _property -> a
    org.apache.poi.poifs.filesystem.NPOIFSFileSystem _filesystem -> b
    org.apache.poi.poifs.filesystem.NPOIFSStream _stream -> c
    int _block_size -> d
    java.util.Iterator getBlockIterator() -> a
    int getSize() -> b
org.apache.poi.poifs.filesystem.NPOIFSFileSystem -> a.a.a.d.c.m:
    org.apache.poi.poifs.filesystem.NPOIFSMiniStore _mini_store -> a
    org.apache.poi.poifs.property.NPropertyTable _property_table -> b
    java.util.List _xbat_blocks -> c
    java.util.List _bat_blocks -> d
    org.apache.poi.poifs.storage.HeaderBlock _header -> e
    org.apache.poi.poifs.filesystem.DirectoryNode _root -> f
    org.apache.poi.poifs.nio.DataSource _data -> g
    org.apache.poi.poifs.common.POIFSBigBlockSize bigBlockSize -> h
    java.nio.ByteBuffer getBlockAt(int) -> a
    org.apache.poi.poifs.storage.BATBlock$BATBlockAndIndex getBATBlockAndIndex(int) -> b
    int getNextBlock(int) -> c
    void setNextBlock(int,int) -> a
    org.apache.poi.poifs.filesystem.BlockStore$ChainLoopDetector getChainLoopDetector() -> b
    org.apache.poi.poifs.filesystem.NPOIFSMiniStore getMiniStore() -> c
    void addDirectory(org.apache.poi.poifs.property.DirectoryProperty) -> a
    void close() -> close
    int getBigBlockSize() -> d
    int getBlockStoreBlockSize() -> a
org.apache.poi.poifs.filesystem.NPOIFSMiniStore -> a.a.a.d.c.n:
    org.apache.poi.poifs.filesystem.NPOIFSFileSystem _filesystem -> a
    org.apache.poi.poifs.filesystem.NPOIFSStream _mini_stream -> b
    java.util.List _sbat_blocks -> c
    org.apache.poi.poifs.storage.HeaderBlock _header -> d
    org.apache.poi.poifs.property.RootProperty _root -> e
    java.nio.ByteBuffer getBlockAt(int) -> a
    org.apache.poi.poifs.storage.BATBlock$BATBlockAndIndex getBATBlockAndIndex(int) -> b
    int getNextBlock(int) -> c
    void setNextBlock(int,int) -> a
    org.apache.poi.poifs.filesystem.BlockStore$ChainLoopDetector getChainLoopDetector() -> b
    int getBlockStoreBlockSize() -> a
org.apache.poi.poifs.filesystem.NPOIFSStream -> a.a.a.d.c.o:
    org.apache.poi.poifs.filesystem.BlockStore blockStore -> a
    int startBlock -> b
    java.util.Iterator iterator() -> iterator
    java.util.Iterator getBlockIterator() -> a
    org.apache.poi.poifs.filesystem.BlockStore access$000(org.apache.poi.poifs.filesystem.NPOIFSStream) -> a
org.apache.poi.poifs.filesystem.NPOIFSStream$StreamBlockByteBufferIterator -> a.a.a.d.c.p:
    org.apache.poi.poifs.filesystem.BlockStore$ChainLoopDetector loopDetector -> b
    int nextBlock -> c
    org.apache.poi.poifs.filesystem.NPOIFSStream this$0 -> a
    boolean hasNext() -> hasNext
    java.nio.ByteBuffer next() -> a
    void remove() -> remove
    java.lang.Object next() -> next
org.apache.poi.poifs.filesystem.ODocumentInputStream -> a.a.a.d.c.q:
    int _current_offset -> a
    int _marked_offset -> b
    int _document_size -> c
    boolean _closed -> d
    org.apache.poi.poifs.filesystem.POIFSDocument _document -> e
    org.apache.poi.poifs.storage.DataInputBlock _currentBlock -> f
    int available() -> available
    void close() -> close
    void mark(int) -> mark
    org.apache.poi.poifs.storage.DataInputBlock getDataInputBlock(int) -> a
    int read() -> read
    int read(byte[],int,int) -> read
    void reset() -> reset
    long skip(long) -> skip
    void dieIfClosed() -> a
    boolean atEOD() -> b
    void checkAvaliable(int) -> b
    byte readByte() -> d
    double readDouble() -> j
    short readShort() -> e
    void readFully(byte[],int,int) -> a
    long readLong() -> g
    int readInt() -> f
    int readUShort() -> i
    int readUByte() -> h
org.apache.poi.poifs.filesystem.OfficeXmlFileException -> a.a.a.d.c.r:
org.apache.poi.poifs.filesystem.POIFSDocument -> a.a.a.d.c.s:
    org.apache.poi.poifs.storage.DocumentBlock[] EMPTY_BIG_BLOCK_ARRAY -> a
    org.apache.poi.poifs.storage.SmallDocumentBlock[] EMPTY_SMALL_BLOCK_ARRAY -> b
    org.apache.poi.poifs.property.DocumentProperty _property -> c
    int _size -> d
    org.apache.poi.poifs.common.POIFSBigBlockSize _bigBigBlockSize -> e
    org.apache.poi.poifs.filesystem.POIFSDocument$SmallBlockStore _small_store -> f
    org.apache.poi.poifs.filesystem.POIFSDocument$BigBlockStore _big_store -> g
    org.apache.poi.poifs.storage.DocumentBlock[] convertRawBlocksToBigBlocks(org.apache.poi.poifs.storage.ListManagedBlock[]) -> a
    org.apache.poi.poifs.storage.SmallDocumentBlock[] convertRawBlocksToSmallBlocks(org.apache.poi.poifs.storage.ListManagedBlock[]) -> b
    org.apache.poi.poifs.storage.DataInputBlock getDataInputBlock(int) -> a
    org.apache.poi.poifs.property.DocumentProperty getDocumentProperty() -> a
org.apache.poi.poifs.filesystem.POIFSDocument$BigBlockStore -> a.a.a.d.c.t:
    org.apache.poi.poifs.storage.DocumentBlock[] bigBlocks -> a
    org.apache.poi.poifs.filesystem.POIFSDocumentPath _path -> b
    java.lang.String _name -> c
    int _size -> d
    org.apache.poi.poifs.filesystem.POIFSWriterListener _writer -> e
    org.apache.poi.poifs.common.POIFSBigBlockSize _bigBlockSize -> f
    boolean isValid() -> a
    org.apache.poi.poifs.storage.DocumentBlock[] getBlocks() -> b
org.apache.poi.poifs.filesystem.POIFSDocument$SmallBlockStore -> a.a.a.d.c.u:
    org.apache.poi.poifs.storage.SmallDocumentBlock[] _smallBlocks -> a
    org.apache.poi.poifs.filesystem.POIFSDocumentPath _path -> b
    java.lang.String _name -> c
    int _size -> d
    org.apache.poi.poifs.filesystem.POIFSWriterListener _writer -> e
    org.apache.poi.poifs.common.POIFSBigBlockSize _bigBlockSize -> f
    boolean isValid() -> a
    org.apache.poi.poifs.storage.SmallDocumentBlock[] getBlocks() -> b
org.apache.poi.poifs.filesystem.POIFSDocumentPath -> a.a.a.d.c.v:
    org.apache.poi.util.POILogger log -> a
    java.lang.String[] components -> b
    int hashcode -> c
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int length() -> a
    java.lang.String getComponent(int) -> a
    java.lang.String toString() -> toString
org.apache.poi.poifs.filesystem.POIFSFileSystem -> a.a.a.d.c.w:
    org.apache.poi.util.POILogger _logger -> a
    org.apache.poi.poifs.property.PropertyTable _property_table -> b
    java.util.List _documents -> c
    org.apache.poi.poifs.filesystem.DirectoryNode _root -> d
    org.apache.poi.poifs.common.POIFSBigBlockSize bigBlockSize -> e
    void closeInputStream(java.io.InputStream,boolean) -> a
    org.apache.poi.poifs.filesystem.DirectoryNode getRoot() -> a
    void addDocument(org.apache.poi.poifs.filesystem.POIFSDocument) -> a
    void addDirectory(org.apache.poi.poifs.property.DirectoryProperty) -> a
    void processProperties(org.apache.poi.poifs.storage.BlockList,org.apache.poi.poifs.storage.BlockList,java.util.Iterator,org.apache.poi.poifs.filesystem.DirectoryNode,int) -> a
org.apache.poi.poifs.filesystem.POIFSWriterEvent -> a.a.a.d.c.x:
    org.apache.poi.poifs.filesystem.DocumentOutputStream stream -> a
    org.apache.poi.poifs.filesystem.POIFSDocumentPath path -> b
    java.lang.String documentName -> c
    int limit -> d
org.apache.poi.poifs.filesystem.POIFSWriterListener -> a.a.a.d.c.y:
    void processPOIFSWriterEvent(org.apache.poi.poifs.filesystem.POIFSWriterEvent) -> a
org.apache.poi.poifs.nio.ByteArrayBackedDataSource -> a.a.a.d.d.a:
    byte[] buffer -> a
    long size -> b
    java.nio.ByteBuffer read(int,long) -> a
    long size() -> a
    void close() -> b
org.apache.poi.poifs.nio.DataSource -> a.a.a.d.d.b:
    java.nio.ByteBuffer read(int,long) -> a
    long size() -> a
    void close() -> b
org.apache.poi.poifs.property.Child -> a.a.a.d.e.a:
org.apache.poi.poifs.property.DirectoryProperty -> a.a.a.d.e.b:
    java.util.List _children -> a
    java.util.Set _children_names -> b
    boolean isDirectory() -> a
    java.util.Iterator getChildren() -> b
    void addChild(org.apache.poi.poifs.property.Property) -> a
org.apache.poi.poifs.property.DocumentProperty -> a.a.a.d.e.c:
    org.apache.poi.poifs.filesystem.POIFSDocument _document -> a
    void setDocument(org.apache.poi.poifs.filesystem.POIFSDocument) -> a
    org.apache.poi.poifs.filesystem.POIFSDocument getDocument() -> b
    boolean shouldUseSmallBlocks() -> c
    boolean isDirectory() -> a
org.apache.poi.poifs.property.NPropertyTable -> a.a.a.d.e.d:
    org.apache.poi.util.POILogger _logger -> b
    org.apache.poi.poifs.common.POIFSBigBlockSize _bigBigBlockSize -> c
org.apache.poi.poifs.property.Parent -> a.a.a.d.e.e:
org.apache.poi.poifs.property.Property -> a.a.a.d.e.f:
    java.lang.String _name -> a
    org.apache.poi.util.ShortField _name_size -> b
    org.apache.poi.util.ByteField _property_type -> c
    org.apache.poi.util.ByteField _node_color -> d
    org.apache.poi.util.IntegerField _previous_property -> e
    org.apache.poi.util.IntegerField _next_property -> f
    org.apache.poi.util.IntegerField _child_property -> g
    org.apache.poi.hpsf.ClassID _storage_clsid -> h
    org.apache.poi.util.IntegerField _user_flags -> i
    org.apache.poi.util.IntegerField _seconds_1 -> j
    org.apache.poi.util.IntegerField _days_1 -> k
    org.apache.poi.util.IntegerField _seconds_2 -> l
    org.apache.poi.util.IntegerField _days_2 -> m
    org.apache.poi.util.IntegerField _start_block -> n
    org.apache.poi.util.IntegerField _size -> o
    byte[] _raw_data -> p
    int _index -> q
    org.apache.poi.poifs.property.Child _next_child -> r
    org.apache.poi.poifs.property.Child _previous_child -> s
    void setStartBlock(int) -> a
    int getStartBlock() -> d
    int getSize() -> e
    boolean shouldUseSmallBlocks() -> c
    boolean isSmall(int) -> b
    java.lang.String getName() -> f
    boolean isDirectory() -> a
    org.apache.poi.hpsf.ClassID getStorageClsid() -> g
    void setName(java.lang.String) -> a
    void setStorageClsid(org.apache.poi.hpsf.ClassID) -> a
    void setPropertyType(byte) -> a
    void setNodeColor(byte) -> b
    int getChildIndex() -> h
    void setSize(int) -> c
    int getIndex() -> i
    int getNextChildIndex() -> j
    int getPreviousChildIndex() -> k
    boolean isValidIndex(int) -> d
    void setNextChild(org.apache.poi.poifs.property.Child) -> a
    void setPreviousChild(org.apache.poi.poifs.property.Child) -> b
org.apache.poi.poifs.property.PropertyFactory -> a.a.a.d.e.g:
    java.util.List convertToProperties(org.apache.poi.poifs.storage.ListManagedBlock[]) -> a
    void convertToProperties(byte[],java.util.List) -> a
org.apache.poi.poifs.property.PropertyTable -> a.a.a.d.e.h:
    org.apache.poi.poifs.common.POIFSBigBlockSize _bigBigBlockSize -> b
    org.apache.poi.poifs.storage.BlockWritable[] _blocks -> c
org.apache.poi.poifs.property.PropertyTableBase -> a.a.a.d.e.i:
    org.apache.poi.poifs.storage.HeaderBlock _header_block -> b
    java.util.List _properties -> a
    void addProperty(org.apache.poi.poifs.property.Property) -> a
    org.apache.poi.poifs.property.RootProperty getRoot() -> a
    void populatePropertyTree(org.apache.poi.poifs.property.DirectoryProperty) -> a
    void setStartBlock(int) -> a
org.apache.poi.poifs.property.RootProperty -> a.a.a.d.e.j:
    void setSize(int) -> c
    java.lang.String getName() -> f
org.apache.poi.poifs.storage.BATBlock -> a.a.a.d.f.a:
    int[] _values -> b
    boolean _has_free_sectors -> c
    int ourBlockIndex -> d
    void recomputeFree() -> a
    org.apache.poi.poifs.storage.BATBlock createEmptyBATBlock(org.apache.poi.poifs.common.POIFSBigBlockSize,boolean) -> a
    org.apache.poi.poifs.storage.BATBlock$BATBlockAndIndex getBATBlockAndIndex(int,org.apache.poi.poifs.storage.HeaderBlock,java.util.List) -> a
    org.apache.poi.poifs.storage.BATBlock$BATBlockAndIndex getSBATBlockAndIndex(int,org.apache.poi.poifs.storage.HeaderBlock,java.util.List) -> b
    void setXBATChain(org.apache.poi.poifs.common.POIFSBigBlockSize,int) -> a
    int getValueAt(int) -> a
    void setValueAt(int,int) -> a
    void setOurBlockIndex(int) -> b
org.apache.poi.poifs.storage.BATBlock$1 -> a.a.a.d.f.b:
org.apache.poi.poifs.storage.BATBlock$BATBlockAndIndex -> a.a.a.d.f.c:
    int index -> a
    org.apache.poi.poifs.storage.BATBlock block -> b
    int getIndex() -> a
    org.apache.poi.poifs.storage.BATBlock getBlock() -> b
org.apache.poi.poifs.storage.BigBlock -> a.a.a.d.f.d:
    org.apache.poi.poifs.common.POIFSBigBlockSize bigBlockSize -> a
org.apache.poi.poifs.storage.BlockAllocationTableReader -> a.a.a.d.f.e:
    org.apache.poi.util.POILogger _logger -> a
    org.apache.poi.util.IntList _entries -> b
    org.apache.poi.poifs.common.POIFSBigBlockSize bigBlockSize -> c
    void sanityCheckBlockCount(int) -> a
    org.apache.poi.poifs.storage.ListManagedBlock[] fetchBlocks(int,int,org.apache.poi.poifs.storage.BlockList) -> a
    void setEntries(org.apache.poi.poifs.storage.ListManagedBlock[],org.apache.poi.poifs.storage.BlockList) -> a
org.apache.poi.poifs.storage.BlockList -> a.a.a.d.f.f:
    void zap(int) -> a
    org.apache.poi.poifs.storage.ListManagedBlock remove(int) -> b
    org.apache.poi.poifs.storage.ListManagedBlock[] fetchBlocks(int,int) -> a
    void setBAT(org.apache.poi.poifs.storage.BlockAllocationTableReader) -> a
    int blockCount() -> a
org.apache.poi.poifs.storage.BlockListImpl -> a.a.a.d.f.g:
    org.apache.poi.poifs.storage.ListManagedBlock[] _blocks -> a
    org.apache.poi.poifs.storage.BlockAllocationTableReader _bat -> b
    void setBlocks(org.apache.poi.poifs.storage.ListManagedBlock[]) -> a
    void zap(int) -> a
    org.apache.poi.poifs.storage.ListManagedBlock remove(int) -> b
    org.apache.poi.poifs.storage.ListManagedBlock[] fetchBlocks(int,int) -> a
    void setBAT(org.apache.poi.poifs.storage.BlockAllocationTableReader) -> a
    int blockCount() -> a
org.apache.poi.poifs.storage.BlockWritable -> a.a.a.d.f.h:
org.apache.poi.poifs.storage.DataInputBlock -> a.a.a.d.f.i:
    byte[] _buf -> a
    int _readIndex -> b
    int _maxIndex -> c
    int available() -> a
    int readUByte() -> b
    int readUShortLE() -> c
    int readUShortLE(org.apache.poi.poifs.storage.DataInputBlock) -> a
    int readIntLE() -> d
    int readIntLE(org.apache.poi.poifs.storage.DataInputBlock,int) -> a
    long readLongLE() -> e
    long readLongLE(org.apache.poi.poifs.storage.DataInputBlock,int) -> b
    void readSpanning(org.apache.poi.poifs.storage.DataInputBlock,int,byte[]) -> a
    void readFully(byte[],int,int) -> a
org.apache.poi.poifs.storage.DocumentBlock -> a.a.a.d.f.j:
    byte[] _data -> b
    int _bytes_read -> c
    org.apache.poi.poifs.storage.DocumentBlock[] convert(org.apache.poi.poifs.common.POIFSBigBlockSize,byte[],int) -> a
    org.apache.poi.poifs.storage.DataInputBlock getDataInputBlock(org.apache.poi.poifs.storage.DocumentBlock[],int) -> a
org.apache.poi.poifs.storage.HeaderBlock -> a.a.a.d.f.k:
    org.apache.poi.util.POILogger _logger -> a
    org.apache.poi.poifs.common.POIFSBigBlockSize bigBlockSize -> b
    int _bat_count -> c
    int _property_start -> d
    int _sbat_start -> e
    int _sbat_count -> f
    int _xbat_start -> g
    int _xbat_count -> h
    byte[] _data -> i
    byte[] readFirst512(java.io.InputStream) -> a
    java.lang.String longToHex(long) -> a
    java.io.IOException alertShortRead(int,int) -> a
    int getPropertyStart() -> a
    void setPropertyStart(int) -> a
    int getSBATStart() -> b
    int getBATCount() -> c
    void setBATCount(int) -> b
    int[] getBATArray() -> d
    void setBATArray(int[]) -> a
    int getXBATCount() -> e
    int getXBATIndex() -> f
    org.apache.poi.poifs.common.POIFSBigBlockSize getBigBlockSize() -> g
org.apache.poi.poifs.storage.ListManagedBlock -> a.a.a.d.f.l:
    byte[] getData() -> a
org.apache.poi.poifs.storage.RawDataBlock -> a.a.a.d.f.m:
    byte[] _data -> a
    boolean _eof -> b
    boolean _hasData -> c
    org.apache.poi.util.POILogger log -> d
    boolean eof() -> b
    boolean hasData() -> c
    java.lang.String toString() -> toString
    byte[] getData() -> a
    int getBigBlockSize() -> d
org.apache.poi.poifs.storage.RawDataBlockList -> a.a.a.d.f.n:
    int blockCount() -> a
    void setBAT(org.apache.poi.poifs.storage.BlockAllocationTableReader) -> a
    org.apache.poi.poifs.storage.ListManagedBlock[] fetchBlocks(int,int) -> a
    org.apache.poi.poifs.storage.ListManagedBlock remove(int) -> b
    void zap(int) -> a
org.apache.poi.poifs.storage.SmallBlockTableReader -> a.a.a.d.f.o:
    org.apache.poi.poifs.storage.BlockList getSmallDocumentBlocks(org.apache.poi.poifs.common.POIFSBigBlockSize,org.apache.poi.poifs.storage.RawDataBlockList,org.apache.poi.poifs.property.RootProperty,int) -> a
org.apache.poi.poifs.storage.SmallDocumentBlock -> a.a.a.d.f.p:
    byte[] _data -> a
    int _blocks_per_big_block -> b
    org.apache.poi.poifs.common.POIFSBigBlockSize _bigBlockSize -> c
    int getBlocksPerBigBlock(org.apache.poi.poifs.common.POIFSBigBlockSize) -> a
    org.apache.poi.poifs.storage.SmallDocumentBlock[] convert(org.apache.poi.poifs.common.POIFSBigBlockSize,byte[],int) -> a
    java.util.List extract(org.apache.poi.poifs.common.POIFSBigBlockSize,org.apache.poi.poifs.storage.ListManagedBlock[]) -> a
    org.apache.poi.poifs.storage.DataInputBlock getDataInputBlock(org.apache.poi.poifs.storage.SmallDocumentBlock[],int) -> a
    int calcSize(int) -> a
    byte[] getData() -> a
org.apache.poi.poifs.storage.SmallDocumentBlockList -> a.a.a.d.f.q:
    int blockCount() -> a
    void setBAT(org.apache.poi.poifs.storage.BlockAllocationTableReader) -> a
    org.apache.poi.poifs.storage.ListManagedBlock[] fetchBlocks(int,int) -> a
    org.apache.poi.poifs.storage.ListManagedBlock remove(int) -> b
    void zap(int) -> a
org.apache.poi.ss.SpreadsheetVersion -> a.a.a.e.a:
    org.apache.poi.ss.SpreadsheetVersion EXCEL97 -> a
    org.apache.poi.ss.SpreadsheetVersion EXCEL2007 -> b
    int _maxRows -> c
    int _maxColumns -> d
    int _maxFunctionArgs -> e
    int _maxCondFormats -> f
    int _maxTextLength -> g
    org.apache.poi.ss.SpreadsheetVersion[] $VALUES -> h
    org.apache.poi.ss.SpreadsheetVersion[] values() -> values
    org.apache.poi.ss.SpreadsheetVersion valueOf(java.lang.String) -> valueOf
    int getMaxRows() -> a
    int getLastRowIndex() -> b
    int getLastColumnIndex() -> c
    java.lang.String getLastColumnName() -> d
org.apache.poi.ss.formula.EvaluationWorkbook -> a.a.a.e.a.a:
org.apache.poi.ss.formula.EvaluationWorkbook$ExternalSheet -> a.a.a.e.a.b:
    java.lang.String _workbookName -> a
    java.lang.String _sheetName -> b
    java.lang.String getWorkbookName() -> a
    java.lang.String getSheetName() -> b
org.apache.poi.ss.formula.EvaluationWorkbook$ExternalSheetRange -> a.a.a.e.a.c:
    java.lang.String _lastSheetName -> a
    java.lang.String getFirstSheetName() -> c
    java.lang.String getLastSheetName() -> d
org.apache.poi.ss.formula.Formula -> a.a.a.e.a.d:
    org.apache.poi.ss.formula.Formula EMPTY -> a
    byte[] _byteEncoding -> b
    int _encodedTokenLen -> c
    org.apache.poi.ss.formula.ptg.Ptg[] getTokens() -> a
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    void serializeTokens(org.apache.poi.util.LittleEndianOutput) -> b
    void serializeArrayConstantData(org.apache.poi.util.LittleEndianOutput) -> c
    int getEncodedSize() -> b
    int getEncodedTokenSize() -> c
    org.apache.poi.ss.formula.Formula create(org.apache.poi.ss.formula.ptg.Ptg[]) -> a
    org.apache.poi.ss.formula.Formula copy() -> d
    org.apache.poi.ss.util.CellReference getExpReference() -> e
org.apache.poi.ss.formula.FormulaRenderer -> a.a.a.e.a.e:
    java.lang.String toFormulaString(org.apache.poi.ss.formula.FormulaRenderingWorkbook,org.apache.poi.ss.formula.ptg.Ptg[]) -> a
    java.lang.String[] getOperands(java.util.Stack,int) -> a
org.apache.poi.ss.formula.FormulaRenderingWorkbook -> a.a.a.e.a.f:
    org.apache.poi.ss.formula.EvaluationWorkbook$ExternalSheet getExternalSheet(int) -> c
    java.lang.String getSheetFirstNameByExternSheet(int) -> d
    java.lang.String getSheetLastNameByExternSheet(int) -> e
    java.lang.String resolveNameXText(org.apache.poi.ss.formula.ptg.NameXPtg) -> a
    java.lang.String getNameText(org.apache.poi.ss.formula.ptg.NamePtg) -> a
org.apache.poi.ss.formula.SharedFormula -> a.a.a.e.a.g:
    int _columnWrappingMask -> a
    int _rowWrappingMask -> b
    org.apache.poi.ss.formula.ptg.Ptg[] convertSharedFormulas(org.apache.poi.ss.formula.ptg.Ptg[],int,int) -> a
    int fixupRelativeColumn(int,int,boolean) -> a
    int fixupRelativeRow(int,int,boolean) -> b
org.apache.poi.ss.formula.SheetNameFormatter -> a.a.a.e.a.h:
    java.util.regex.Pattern CELL_REF_PATTERN -> a
    java.lang.String format(java.lang.String) -> a
    void appendFormat(java.lang.StringBuffer,java.lang.String) -> a
    void appendFormat(java.lang.StringBuffer,java.lang.String,java.lang.String) -> a
    void appendAndEscape(java.lang.StringBuffer,java.lang.String) -> b
    boolean needsDelimiting(java.lang.String) -> c
    boolean nameLooksLikeBooleanLiteral(java.lang.String) -> d
    boolean isSpecialChar(char) -> a
    boolean cellReferenceIsWithinRange(java.lang.String,java.lang.String) -> a
    boolean nameLooksLikePlainCellReference(java.lang.String) -> b
org.apache.poi.ss.formula.WorkbookDependentFormula -> a.a.a.e.a.i:
    java.lang.String toFormulaString(org.apache.poi.ss.formula.FormulaRenderingWorkbook) -> a
org.apache.poi.ss.formula.atp.AnalysisToolPak -> a.a.a.e.a.a.a:
    org.apache.poi.ss.formula.udf.UDFFinder instance -> a
    java.util.Map _functionsByName -> c
    java.util.Map createFunctionsMap() -> a
    void r(java.util.Map,java.lang.String,org.apache.poi.ss.formula.functions.FreeRefFunction) -> a
org.apache.poi.ss.formula.atp.AnalysisToolPak$NotImplemented -> a.a.a.e.a.a.b:
    java.lang.String _functionName -> a
org.apache.poi.ss.formula.atp.ArgumentsEvaluator -> a.a.a.e.a.a.c:
    org.apache.poi.ss.formula.atp.ArgumentsEvaluator instance -> a
org.apache.poi.ss.formula.atp.IfError -> a.a.a.e.a.a.d:
    org.apache.poi.ss.formula.functions.FreeRefFunction instance -> a
org.apache.poi.ss.formula.atp.MRound -> a.a.a.e.a.a.e:
    org.apache.poi.ss.formula.functions.FreeRefFunction instance -> a
org.apache.poi.ss.formula.atp.NetworkdaysFunction -> a.a.a.e.a.a.f:
    org.apache.poi.ss.formula.functions.FreeRefFunction instance -> a
    org.apache.poi.ss.formula.atp.ArgumentsEvaluator evaluator -> b
org.apache.poi.ss.formula.atp.ParityFunction -> a.a.a.e.a.a.g:
    org.apache.poi.ss.formula.functions.FreeRefFunction IS_EVEN -> a
    org.apache.poi.ss.formula.functions.FreeRefFunction IS_ODD -> b
    int _desiredParity -> c
org.apache.poi.ss.formula.atp.RandBetween -> a.a.a.e.a.a.h:
    org.apache.poi.ss.formula.functions.FreeRefFunction instance -> a
org.apache.poi.ss.formula.atp.WorkdayFunction -> a.a.a.e.a.a.i:
    org.apache.poi.ss.formula.functions.FreeRefFunction instance -> a
    org.apache.poi.ss.formula.atp.ArgumentsEvaluator evaluator -> b
org.apache.poi.ss.formula.atp.YearFrac -> a.a.a.e.a.a.j:
    org.apache.poi.ss.formula.functions.FreeRefFunction instance -> a
org.apache.poi.ss.formula.constant.ConstantValueParser -> a.a.a.e.a.b.a:
    java.lang.Object EMPTY_REPRESENTATION -> a
    java.lang.Object[] parse(org.apache.poi.util.LittleEndianInput,int) -> a
    java.lang.Object readAConstantValue(org.apache.poi.util.LittleEndianInput) -> a
    java.lang.Object readBoolean(org.apache.poi.util.LittleEndianInput) -> b
    int getEncodedSize(java.lang.Object[]) -> a
    int getEncodedSize(java.lang.Object) -> a
    void encode(org.apache.poi.util.LittleEndianOutput,java.lang.Object[]) -> a
    void encodeSingleValue(org.apache.poi.util.LittleEndianOutput,java.lang.Object) -> a
org.apache.poi.ss.formula.constant.ErrorConstant -> a.a.a.e.a.b.b:
    org.apache.poi.util.POILogger logger -> a
    org.apache.poi.ss.usermodel.ErrorConstants EC -> b
    org.apache.poi.ss.formula.constant.ErrorConstant NULL -> c
    org.apache.poi.ss.formula.constant.ErrorConstant DIV_0 -> d
    org.apache.poi.ss.formula.constant.ErrorConstant VALUE -> e
    org.apache.poi.ss.formula.constant.ErrorConstant REF -> f
    org.apache.poi.ss.formula.constant.ErrorConstant NAME -> g
    org.apache.poi.ss.formula.constant.ErrorConstant NUM -> h
    org.apache.poi.ss.formula.constant.ErrorConstant NA -> i
    int _errorCode -> j
    int getErrorCode() -> a
    java.lang.String getText() -> b
    org.apache.poi.ss.formula.constant.ErrorConstant valueOf(int) -> a
    java.lang.String toString() -> toString
org.apache.poi.ss.formula.eval.ErrorEval -> a.a.a.e.a.c.a:
    org.apache.poi.ss.usermodel.ErrorConstants EC -> i
    org.apache.poi.ss.formula.eval.ErrorEval NULL_INTERSECTION -> a
    org.apache.poi.ss.formula.eval.ErrorEval DIV_ZERO -> b
    org.apache.poi.ss.formula.eval.ErrorEval VALUE_INVALID -> c
    org.apache.poi.ss.formula.eval.ErrorEval REF_INVALID -> d
    org.apache.poi.ss.formula.eval.ErrorEval NAME_INVALID -> e
    org.apache.poi.ss.formula.eval.ErrorEval NUM_ERROR -> f
    org.apache.poi.ss.formula.eval.ErrorEval NA -> g
    org.apache.poi.ss.formula.eval.ErrorEval CIRCULAR_REF_ERROR -> h
    int _errorCode -> j
    java.lang.String getText(int) -> a
    java.lang.String toString() -> toString
org.apache.poi.ss.formula.eval.NumberEval -> a.a.a.e.a.c.b:
    org.apache.poi.ss.formula.eval.NumberEval ZERO -> a
    double _value -> b
    java.lang.String _stringValue -> c
    java.lang.String getStringValue() -> a
    java.lang.String toString() -> toString
org.apache.poi.ss.formula.function.FunctionDataBuilder -> a.a.a.e.a.d.a:
    int _maxFunctionIndex -> a
    java.util.Map _functionDataByName -> b
    java.util.Map _functionDataByIndex -> c
    java.util.Set _mutatingFunctionIndexes -> d
    void add(int,java.lang.String,int,int,byte,byte[],boolean) -> a
    org.apache.poi.ss.formula.function.FunctionMetadataRegistry build() -> a
org.apache.poi.ss.formula.function.FunctionMetadata -> a.a.a.e.a.d.b:
    int _index -> a
    java.lang.String _name -> b
    int _minParams -> c
    int _maxParams -> d
    byte _returnClassCode -> e
    byte[] _parameterClassCodes -> f
    int getIndex() -> a
    java.lang.String getName() -> b
    int getMinParams() -> c
    byte getReturnClassCode() -> d
    byte[] getParameterClassCodes() -> e
    java.lang.String toString() -> toString
org.apache.poi.ss.formula.function.FunctionMetadataReader -> a.a.a.e.a.d.c:
    java.util.regex.Pattern TAB_DELIM_PATTERN -> a
    java.util.regex.Pattern SPACE_DELIM_PATTERN -> b
    byte[] EMPTY_BYTE_ARRAY -> c
    java.lang.String[] DIGIT_ENDING_FUNCTION_NAMES -> d
    java.util.Set DIGIT_ENDING_FUNCTION_NAMES_SET -> e
    org.apache.poi.ss.formula.function.FunctionMetadataRegistry createRegistry() -> a
    void processLine(org.apache.poi.ss.formula.function.FunctionDataBuilder,java.lang.String) -> a
    byte parseReturnTypeCode(java.lang.String) -> a
    byte[] parseOperandTypeCodes(java.lang.String) -> b
    boolean isDash(java.lang.String) -> c
    byte parseOperandTypeCode(java.lang.String) -> d
    void validateFunctionName(java.lang.String) -> e
    int parseInt(java.lang.String) -> f
org.apache.poi.ss.formula.function.FunctionMetadataRegistry -> a.a.a.e.a.d.d:
    org.apache.poi.ss.formula.function.FunctionMetadataRegistry _instance -> a
    org.apache.poi.ss.formula.function.FunctionMetadata[] _functionDataByIndex -> b
    java.util.Map _functionDataByName -> c
    org.apache.poi.ss.formula.function.FunctionMetadataRegistry getInstance() -> a
    org.apache.poi.ss.formula.function.FunctionMetadata getFunctionByIndex(int) -> a
    org.apache.poi.ss.formula.function.FunctionMetadata getFunctionByIndexInternal(int) -> b
    short lookupIndexByName(java.lang.String) -> a
    org.apache.poi.ss.formula.function.FunctionMetadata getFunctionByNameInternal(java.lang.String) -> b
org.apache.poi.ss.formula.functions.Bin2Dec -> a.a.a.e.a.e.a:
    org.apache.poi.ss.formula.functions.FreeRefFunction instance -> a
org.apache.poi.ss.formula.functions.Complex -> a.a.a.e.a.e.b:
    org.apache.poi.ss.formula.functions.FreeRefFunction instance -> a
org.apache.poi.ss.formula.functions.Countifs -> a.a.a.e.a.e.c:
    org.apache.poi.ss.formula.functions.FreeRefFunction instance -> a
org.apache.poi.ss.formula.functions.Dec2Bin -> a.a.a.e.a.e.d:
    org.apache.poi.ss.formula.functions.FreeRefFunction instance -> a
    long MIN_VALUE -> b
    long MAX_VALUE -> c
org.apache.poi.ss.formula.functions.Dec2Hex -> a.a.a.e.a.e.e:
    org.apache.poi.ss.formula.functions.FreeRefFunction instance -> a
    long MIN_VALUE -> b
    long MAX_VALUE -> c
org.apache.poi.ss.formula.functions.Delta -> a.a.a.e.a.e.f:
    org.apache.poi.ss.formula.functions.FreeRefFunction instance -> a
    org.apache.poi.ss.formula.eval.NumberEval ONE -> b
    org.apache.poi.ss.formula.eval.NumberEval ZERO -> c
org.apache.poi.ss.formula.functions.EDate -> a.a.a.e.a.e.g:
    org.apache.poi.ss.formula.functions.FreeRefFunction instance -> a
org.apache.poi.ss.formula.functions.FactDouble -> a.a.a.e.a.e.h:
    org.apache.poi.ss.formula.functions.FreeRefFunction instance -> a
    java.util.HashMap cache -> b
org.apache.poi.ss.formula.functions.Fixed1ArgFunction -> a.a.a.e.a.e.i:
org.apache.poi.ss.formula.functions.Fixed2ArgFunction -> a.a.a.e.a.e.j:
org.apache.poi.ss.formula.functions.FreeRefFunction -> a.a.a.e.a.e.k:
org.apache.poi.ss.formula.functions.Hex2Dec -> a.a.a.e.a.e.l:
    org.apache.poi.ss.formula.functions.FreeRefFunction instance -> a
org.apache.poi.ss.formula.functions.ImReal -> a.a.a.e.a.e.m:
    org.apache.poi.ss.formula.functions.FreeRefFunction instance -> a
org.apache.poi.ss.formula.functions.Imaginary -> a.a.a.e.a.e.n:
    org.apache.poi.ss.formula.functions.FreeRefFunction instance -> a
    java.util.regex.Pattern COMPLEX_NUMBER_PATTERN -> b
org.apache.poi.ss.formula.functions.Oct2Dec -> a.a.a.e.a.e.o:
    org.apache.poi.ss.formula.functions.FreeRefFunction instance -> a
org.apache.poi.ss.formula.functions.Quotient -> a.a.a.e.a.e.p:
    org.apache.poi.ss.formula.functions.FreeRefFunction instance -> a
org.apache.poi.ss.formula.functions.Sumifs -> a.a.a.e.a.e.q:
    org.apache.poi.ss.formula.functions.FreeRefFunction instance -> a
org.apache.poi.ss.formula.functions.Var1or2ArgFunction -> a.a.a.e.a.e.r:
org.apache.poi.ss.formula.functions.Var2or3ArgFunction -> a.a.a.e.a.e.s:
org.apache.poi.ss.formula.functions.WeekNum -> a.a.a.e.a.e.t:
    org.apache.poi.ss.formula.functions.FreeRefFunction instance -> a
org.apache.poi.ss.formula.ptg.AbstractFunctionPtg -> a.a.a.e.a.f.a:
    byte returnClass -> a
    byte[] paramClass -> b
    byte _numberOfArgs -> c
    short _functionIndex -> d
    boolean isBaseToken() -> a
    java.lang.String toString() -> toString
    short getFunctionIndex() -> b
    int getNumberOfOperands() -> c
    java.lang.String getName() -> d
    boolean isExternalFunction() -> e
    java.lang.String toFormulaString() -> f
    java.lang.String toFormulaString(java.lang.String[]) -> a
    void appendArgs(java.lang.StringBuilder,int,java.lang.String[]) -> a
    java.lang.String lookupName(short) -> a
    short lookupIndex(java.lang.String) -> a
org.apache.poi.ss.formula.ptg.AddPtg -> a.a.a.e.a.f.b:
    org.apache.poi.ss.formula.ptg.ValueOperatorPtg instance -> a
    byte getSid() -> b
    int getNumberOfOperands() -> c
    java.lang.String toFormulaString(java.lang.String[]) -> a
org.apache.poi.ss.formula.ptg.Area2DPtgBase -> a.a.a.e.a.f.c:
    byte getSid() -> b
    void write(org.apache.poi.util.LittleEndianOutput) -> a
    int getSize() -> c_
    java.lang.String toFormulaString() -> f
    java.lang.String toString() -> toString
org.apache.poi.ss.formula.ptg.Area3DPtg -> a.a.a.e.a.f.d:
    int field_1_index_extern_sheet -> a
    java.lang.String toString() -> toString
    void write(org.apache.poi.util.LittleEndianOutput) -> a
    int getSize() -> c_
    int getExternSheetIndex() -> b
    java.lang.String toFormulaString(org.apache.poi.ss.formula.FormulaRenderingWorkbook) -> a
    java.lang.String toFormulaString() -> f
org.apache.poi.ss.formula.ptg.AreaErrPtg -> a.a.a.e.a.f.e:
    int unused1 -> a
    int unused2 -> b
    void write(org.apache.poi.util.LittleEndianOutput) -> a
    java.lang.String toFormulaString() -> f
    int getSize() -> c_
org.apache.poi.ss.formula.ptg.AreaNPtg -> a.a.a.e.a.f.f:
    byte getSid() -> b
org.apache.poi.ss.formula.ptg.AreaPtg -> a.a.a.e.a.f.g:
    byte getSid() -> b
org.apache.poi.ss.formula.ptg.AreaPtgBase -> a.a.a.e.a.f.h:
    int field_1_first_row -> a
    int field_2_last_row -> b
    int field_3_first_column -> c
    int field_4_last_column -> d
    org.apache.poi.util.BitField rowRelative -> e
    org.apache.poi.util.BitField colRelative -> f
    org.apache.poi.util.BitField columnMask -> g
    void readCoordinates(org.apache.poi.util.LittleEndianInput) -> a
    void writeCoordinates(org.apache.poi.util.LittleEndianOutput) -> b
    int getFirstRow() -> d
    void setFirstRow(int) -> a
    int getLastRow() -> e
    void setLastRow(int) -> b
    int getFirstColumn() -> g
    boolean isFirstRowRelative() -> h
    void setFirstRowRelative(boolean) -> a
    boolean isFirstColRelative() -> i
    void setFirstColRelative(boolean) -> b
    void setFirstColumn(int) -> c
    int getLastColumn() -> j
    boolean isLastRowRelative() -> k
    void setLastRowRelative(boolean) -> c
    boolean isLastColRelative() -> l
    void setLastColRelative(boolean) -> d
    void setLastColumn(int) -> d
    java.lang.String formatReferenceAsString() -> m
    java.lang.String toFormulaString() -> f
org.apache.poi.ss.formula.ptg.ArrayPtg -> a.a.a.e.a.f.i:
    int _reserved0Int -> a
    int _reserved1Short -> b
    int _reserved2Byte -> c
    int _nColumns -> d
    int _nRows -> e
    java.lang.Object[] _arrayValues -> f
    boolean isBaseToken() -> a
    java.lang.String toString() -> toString
    int getValueIndex(int,int) -> a
    void write(org.apache.poi.util.LittleEndianOutput) -> a
    int writeTokenValueBytes(org.apache.poi.util.LittleEndianOutput) -> b
    int getRowCount() -> b
    int getColumnCount() -> d
    int getSize() -> c_
    java.lang.String toFormulaString() -> f
    java.lang.String getConstantText(java.lang.Object) -> a
org.apache.poi.ss.formula.ptg.ArrayPtg$Initial -> a.a.a.e.a.f.j:
    int _reserved0 -> a
    int _reserved1 -> b
    int _reserved2 -> c
    java.lang.RuntimeException invalid() -> b
    int getSize() -> c_
    boolean isBaseToken() -> a
    java.lang.String toFormulaString() -> f
    void write(org.apache.poi.util.LittleEndianOutput) -> a
    org.apache.poi.ss.formula.ptg.ArrayPtg finishReading(org.apache.poi.util.LittleEndianInput) -> a
org.apache.poi.ss.formula.ptg.AttrPtg -> a.a.a.e.a.f.k:
    byte _options -> b
    short _data -> c
    int[] _jumpTable -> d
    int _chooseFuncOffset -> e
    org.apache.poi.util.BitField semiVolatile -> f
    org.apache.poi.util.BitField optiIf -> g
    org.apache.poi.util.BitField optiChoose -> i
    org.apache.poi.util.BitField optiSkip -> j
    org.apache.poi.util.BitField optiSum -> k
    org.apache.poi.util.BitField baxcel -> l
    org.apache.poi.util.BitField space -> m
    org.apache.poi.ss.formula.ptg.AttrPtg SUM -> a
    boolean isSemiVolatile() -> b
    boolean isOptimizedIf() -> d
    boolean isOptimizedChoose() -> e
    boolean isSum() -> g
    boolean isSkip() -> h
    boolean isBaxcel() -> k
    boolean isSpace() -> i
    java.lang.String toString() -> toString
    void write(org.apache.poi.util.LittleEndianOutput) -> a
    int getSize() -> c_
    java.lang.String toFormulaString(java.lang.String[]) -> a
    int getNumberOfOperands() -> j
    java.lang.String toFormulaString() -> f
org.apache.poi.ss.formula.ptg.BoolPtg -> a.a.a.e.a.f.l:
    org.apache.poi.ss.formula.ptg.BoolPtg FALSE -> a
    org.apache.poi.ss.formula.ptg.BoolPtg TRUE -> b
    boolean _value -> c
    org.apache.poi.ss.formula.ptg.BoolPtg valueOf(boolean) -> a
    org.apache.poi.ss.formula.ptg.BoolPtg read(org.apache.poi.util.LittleEndianInput) -> a
    void write(org.apache.poi.util.LittleEndianOutput) -> a
    int getSize() -> c_
    java.lang.String toFormulaString() -> f
org.apache.poi.ss.formula.ptg.ConcatPtg -> a.a.a.e.a.f.m:
    org.apache.poi.ss.formula.ptg.ValueOperatorPtg instance -> a
    byte getSid() -> b
    int getNumberOfOperands() -> c
    java.lang.String toFormulaString(java.lang.String[]) -> a
org.apache.poi.ss.formula.ptg.ControlPtg -> a.a.a.e.a.f.n:
    boolean isBaseToken() -> a
org.apache.poi.ss.formula.ptg.DeletedArea3DPtg -> a.a.a.e.a.f.o:
    int field_1_index_extern_sheet -> a
    int unused1 -> b
    int unused2 -> c
    java.lang.String toFormulaString(org.apache.poi.ss.formula.FormulaRenderingWorkbook) -> a
    java.lang.String toFormulaString() -> f
    int getSize() -> c_
    void write(org.apache.poi.util.LittleEndianOutput) -> a
org.apache.poi.ss.formula.ptg.DeletedRef3DPtg -> a.a.a.e.a.f.p:
    int field_1_index_extern_sheet -> a
    int unused1 -> b
    java.lang.String toFormulaString(org.apache.poi.ss.formula.FormulaRenderingWorkbook) -> a
    java.lang.String toFormulaString() -> f
    int getSize() -> c_
    void write(org.apache.poi.util.LittleEndianOutput) -> a
org.apache.poi.ss.formula.ptg.DividePtg -> a.a.a.e.a.f.q:
    org.apache.poi.ss.formula.ptg.ValueOperatorPtg instance -> a
    byte getSid() -> b
    int getNumberOfOperands() -> c
    java.lang.String toFormulaString(java.lang.String[]) -> a
org.apache.poi.ss.formula.ptg.EqualPtg -> a.a.a.e.a.f.r:
    org.apache.poi.ss.formula.ptg.ValueOperatorPtg instance -> a
    byte getSid() -> b
    int getNumberOfOperands() -> c
    java.lang.String toFormulaString(java.lang.String[]) -> a
org.apache.poi.ss.formula.ptg.ErrPtg -> a.a.a.e.a.f.s:
    org.apache.poi.ss.usermodel.ErrorConstants EC -> i
    org.apache.poi.ss.formula.ptg.ErrPtg NULL_INTERSECTION -> a
    org.apache.poi.ss.formula.ptg.ErrPtg DIV_ZERO -> b
    org.apache.poi.ss.formula.ptg.ErrPtg VALUE_INVALID -> c
    org.apache.poi.ss.formula.ptg.ErrPtg REF_INVALID -> d
    org.apache.poi.ss.formula.ptg.ErrPtg NAME_INVALID -> e
    org.apache.poi.ss.formula.ptg.ErrPtg NUM_ERROR -> f
    org.apache.poi.ss.formula.ptg.ErrPtg N_A -> g
    int field_1_error_code -> j
    org.apache.poi.ss.formula.ptg.ErrPtg read(org.apache.poi.util.LittleEndianInput) -> a
    void write(org.apache.poi.util.LittleEndianOutput) -> a
    java.lang.String toFormulaString() -> f
    int getSize() -> c_
    org.apache.poi.ss.formula.ptg.ErrPtg valueOf(int) -> a
org.apache.poi.ss.formula.ptg.ExpPtg -> a.a.a.e.a.f.t:
    int field_1_first_row -> a
    int field_2_first_col -> b
    void write(org.apache.poi.util.LittleEndianOutput) -> a
    int getSize() -> c_
    int getRow() -> b
    int getColumn() -> d
    java.lang.String toFormulaString() -> f
    java.lang.String toString() -> toString
org.apache.poi.ss.formula.ptg.ExternSheetNameResolver -> a.a.a.e.a.f.u:
    java.lang.String prependSheetName(org.apache.poi.ss.formula.FormulaRenderingWorkbook,int,java.lang.String) -> a
org.apache.poi.ss.formula.ptg.FuncPtg -> a.a.a.e.a.f.v:
    org.apache.poi.ss.formula.ptg.FuncPtg create(org.apache.poi.util.LittleEndianInput) -> a
    org.apache.poi.ss.formula.ptg.FuncPtg create(int) -> a
    void write(org.apache.poi.util.LittleEndianOutput) -> a
    int getSize() -> c_
org.apache.poi.ss.formula.ptg.FuncVarPtg -> a.a.a.e.a.f.w:
    org.apache.poi.ss.formula.ptg.OperationPtg SUM -> a
    org.apache.poi.ss.formula.ptg.FuncVarPtg create(org.apache.poi.util.LittleEndianInput) -> a
    org.apache.poi.ss.formula.ptg.FuncVarPtg create(java.lang.String,int) -> a
    org.apache.poi.ss.formula.ptg.FuncVarPtg create(int,int) -> a
    void write(org.apache.poi.util.LittleEndianOutput) -> a
    int getSize() -> c_
org.apache.poi.ss.formula.ptg.GreaterEqualPtg -> a.a.a.e.a.f.x:
    org.apache.poi.ss.formula.ptg.ValueOperatorPtg instance -> a
    byte getSid() -> b
    int getNumberOfOperands() -> c
    java.lang.String toFormulaString(java.lang.String[]) -> a
org.apache.poi.ss.formula.ptg.GreaterThanPtg -> a.a.a.e.a.f.y:
    org.apache.poi.ss.formula.ptg.ValueOperatorPtg instance -> a
    byte getSid() -> b
    int getNumberOfOperands() -> c
    java.lang.String toFormulaString(java.lang.String[]) -> a
org.apache.poi.ss.formula.ptg.IntPtg -> a.a.a.e.a.f.z:
    int field_1_value -> a
    boolean isInRange(int) -> a
    int getValue() -> b
    void write(org.apache.poi.util.LittleEndianOutput) -> a
    int getSize() -> c_
    java.lang.String toFormulaString() -> f
org.apache.poi.ss.formula.ptg.IntersectionPtg -> a.a.a.e.a.f.aa:
    org.apache.poi.ss.formula.ptg.OperationPtg instance -> a
    boolean isBaseToken() -> a
    int getSize() -> c_
    void write(org.apache.poi.util.LittleEndianOutput) -> a
    java.lang.String toFormulaString() -> f
    java.lang.String toFormulaString(java.lang.String[]) -> a
    int getNumberOfOperands() -> c
org.apache.poi.ss.formula.ptg.LessEqualPtg -> a.a.a.e.a.f.ab:
    org.apache.poi.ss.formula.ptg.ValueOperatorPtg instance -> a
    byte getSid() -> b
    int getNumberOfOperands() -> c
    java.lang.String toFormulaString(java.lang.String[]) -> a
org.apache.poi.ss.formula.ptg.LessThanPtg -> a.a.a.e.a.f.ac:
    org.apache.poi.ss.formula.ptg.ValueOperatorPtg instance -> a
    byte getSid() -> b
    int getNumberOfOperands() -> c
    java.lang.String toFormulaString(java.lang.String[]) -> a
org.apache.poi.ss.formula.ptg.MemAreaPtg -> a.a.a.e.a.f.ad:
    int field_1_reserved -> a
    int field_2_subex_len -> b
    void write(org.apache.poi.util.LittleEndianOutput) -> a
    int getSize() -> c_
    java.lang.String toFormulaString() -> f
    java.lang.String toString() -> toString
org.apache.poi.ss.formula.ptg.MemErrPtg -> a.a.a.e.a.f.ae:
    int field_1_reserved -> a
    short field_2_subex_len -> b
    void write(org.apache.poi.util.LittleEndianOutput) -> a
    int getSize() -> c_
    java.lang.String toFormulaString() -> f
org.apache.poi.ss.formula.ptg.MemFuncPtg -> a.a.a.e.a.f.af:
    int field_1_len_ref_subexpression -> a
    int getSize() -> c_
    void write(org.apache.poi.util.LittleEndianOutput) -> a
    java.lang.String toFormulaString() -> f
    java.lang.String toString() -> toString
org.apache.poi.ss.formula.ptg.MissingArgPtg -> a.a.a.e.a.f.ag:
    org.apache.poi.ss.formula.ptg.Ptg instance -> a
    void write(org.apache.poi.util.LittleEndianOutput) -> a
    int getSize() -> c_
    java.lang.String toFormulaString() -> f
org.apache.poi.ss.formula.ptg.MultiplyPtg -> a.a.a.e.a.f.ah:
    org.apache.poi.ss.formula.ptg.ValueOperatorPtg instance -> a
    byte getSid() -> b
    int getNumberOfOperands() -> c
    java.lang.String toFormulaString(java.lang.String[]) -> a
org.apache.poi.ss.formula.ptg.NamePtg -> a.a.a.e.a.f.ai:
    int field_1_label_index -> a
    short field_2_zero -> b
    int getIndex() -> b
    void write(org.apache.poi.util.LittleEndianOutput) -> a
    int getSize() -> c_
    java.lang.String toFormulaString(org.apache.poi.ss.formula.FormulaRenderingWorkbook) -> a
    java.lang.String toFormulaString() -> f
org.apache.poi.ss.formula.ptg.NameXPtg -> a.a.a.e.a.f.aj:
    int _sheetRefIndex -> a
    int _nameNumber -> b
    int _reserved -> c
    void write(org.apache.poi.util.LittleEndianOutput) -> a
    int getSize() -> c_
    java.lang.String toFormulaString(org.apache.poi.ss.formula.FormulaRenderingWorkbook) -> a
    java.lang.String toFormulaString() -> f
    java.lang.String toString() -> toString
    int getSheetRefIndex() -> b
    int getNameIndex() -> d
org.apache.poi.ss.formula.ptg.NotEqualPtg -> a.a.a.e.a.f.ak:
    org.apache.poi.ss.formula.ptg.ValueOperatorPtg instance -> a
    byte getSid() -> b
    int getNumberOfOperands() -> c
    java.lang.String toFormulaString(java.lang.String[]) -> a
org.apache.poi.ss.formula.ptg.NumberPtg -> a.a.a.e.a.f.al:
    double field_1_value -> a
    double getValue() -> b
    void write(org.apache.poi.util.LittleEndianOutput) -> a
    int getSize() -> c_
    java.lang.String toFormulaString() -> f
org.apache.poi.ss.formula.ptg.OperandPtg -> a.a.a.e.a.f.am:
    boolean isBaseToken() -> a
    org.apache.poi.ss.formula.ptg.OperandPtg copy() -> n
org.apache.poi.ss.formula.ptg.OperationPtg -> a.a.a.e.a.f.an:
    java.lang.String toFormulaString(java.lang.String[]) -> a
    int getNumberOfOperands() -> c
org.apache.poi.ss.formula.ptg.ParenthesisPtg -> a.a.a.e.a.f.ao:
    org.apache.poi.ss.formula.ptg.ControlPtg instance -> a
    void write(org.apache.poi.util.LittleEndianOutput) -> a
    int getSize() -> c_
    java.lang.String toFormulaString() -> f
org.apache.poi.ss.formula.ptg.PercentPtg -> a.a.a.e.a.f.ap:
    org.apache.poi.ss.formula.ptg.ValueOperatorPtg instance -> a
    byte getSid() -> b
    int getNumberOfOperands() -> c
    java.lang.String toFormulaString(java.lang.String[]) -> a
org.apache.poi.ss.formula.ptg.PowerPtg -> a.a.a.e.a.f.aq:
    org.apache.poi.ss.formula.ptg.ValueOperatorPtg instance -> a
    byte getSid() -> b
    int getNumberOfOperands() -> c
    java.lang.String toFormulaString(java.lang.String[]) -> a
org.apache.poi.ss.formula.ptg.Ptg -> a.a.a.e.a.f.ar:
    org.apache.poi.ss.formula.ptg.Ptg[] EMPTY_PTG_ARRAY -> h
    byte ptgClass -> a
    org.apache.poi.ss.formula.ptg.Ptg[] readTokens(int,org.apache.poi.util.LittleEndianInput) -> a
    org.apache.poi.ss.formula.ptg.Ptg createPtg(org.apache.poi.util.LittleEndianInput) -> b
    org.apache.poi.ss.formula.ptg.Ptg createClassifiedPtg(byte,org.apache.poi.util.LittleEndianInput) -> a
    org.apache.poi.ss.formula.ptg.Ptg createBasePtg(byte,org.apache.poi.util.LittleEndianInput) -> b
    org.apache.poi.ss.formula.ptg.Ptg[] toPtgArray(java.util.List) -> a
    int getEncodedSize(org.apache.poi.ss.formula.ptg.Ptg[]) -> a
    int getEncodedSizeWithoutArrayData(org.apache.poi.ss.formula.ptg.Ptg[]) -> b
    int serializePtgs(org.apache.poi.ss.formula.ptg.Ptg[],byte[],int) -> a
    int getSize() -> c_
    void write(org.apache.poi.util.LittleEndianOutput) -> a
    java.lang.String toFormulaString() -> f
    java.lang.String toString() -> toString
    void setClass(byte) -> a
    byte getPtgClass() -> o
    char getRVAType() -> p
    boolean isBaseToken() -> a
org.apache.poi.ss.formula.ptg.RangePtg -> a.a.a.e.a.f.as:
    org.apache.poi.ss.formula.ptg.OperationPtg instance -> a
    boolean isBaseToken() -> a
    int getSize() -> c_
    void write(org.apache.poi.util.LittleEndianOutput) -> a
    java.lang.String toFormulaString() -> f
    java.lang.String toFormulaString(java.lang.String[]) -> a
    int getNumberOfOperands() -> c
org.apache.poi.ss.formula.ptg.Ref2DPtgBase -> a.a.a.e.a.f.at:
    void write(org.apache.poi.util.LittleEndianOutput) -> a
    java.lang.String toFormulaString() -> f
    byte getSid() -> b
    int getSize() -> c_
    java.lang.String toString() -> toString
org.apache.poi.ss.formula.ptg.Ref3DPtg -> a.a.a.e.a.f.au:
    int field_1_index_extern_sheet -> a
    java.lang.String toString() -> toString
    void write(org.apache.poi.util.LittleEndianOutput) -> a
    int getSize() -> c_
    int getExternSheetIndex() -> b
    java.lang.String toFormulaString(org.apache.poi.ss.formula.FormulaRenderingWorkbook) -> a
    java.lang.String toFormulaString() -> f
org.apache.poi.ss.formula.ptg.RefErrorPtg -> a.a.a.e.a.f.av:
    int field_1_reserved -> a
    java.lang.String toString() -> toString
    void write(org.apache.poi.util.LittleEndianOutput) -> a
    int getSize() -> c_
    java.lang.String toFormulaString() -> f
org.apache.poi.ss.formula.ptg.RefNPtg -> a.a.a.e.a.f.aw:
    byte getSid() -> b
    void write(org.apache.poi.util.LittleEndianOutput) -> a
org.apache.poi.ss.formula.ptg.RefPtg -> a.a.a.e.a.f.ax:
    byte getSid() -> b
    void write(org.apache.poi.util.LittleEndianOutput) -> a
org.apache.poi.ss.formula.ptg.RefPtgBase -> a.a.a.e.a.f.ay:
    int field_1_row -> a
    int field_2_col -> b
    org.apache.poi.util.BitField rowRelative -> c
    org.apache.poi.util.BitField colRelative -> d
    org.apache.poi.util.BitField column -> e
    void readCoordinates(org.apache.poi.util.LittleEndianInput) -> a
    void writeCoordinates(org.apache.poi.util.LittleEndianOutput) -> b
    void setRow(int) -> a
    int getRow() -> d
    boolean isRowRelative() -> e
    void setRowRelative(boolean) -> a
    boolean isColRelative() -> g
    void setColRelative(boolean) -> b
    void setColumn(int) -> b
    int getColumn() -> h
    java.lang.String formatReferenceAsString() -> i
org.apache.poi.ss.formula.ptg.ScalarConstantPtg -> a.a.a.e.a.f.az:
    boolean isBaseToken() -> a
    java.lang.String toString() -> toString
org.apache.poi.ss.formula.ptg.StringPtg -> a.a.a.e.a.f.ba:
    boolean _is16bitUnicode -> a
    java.lang.String field_3_string -> b
    void write(org.apache.poi.util.LittleEndianOutput) -> a
    int getSize() -> c_
    java.lang.String toFormulaString() -> f
org.apache.poi.ss.formula.ptg.SubtractPtg -> a.a.a.e.a.f.bb:
    org.apache.poi.ss.formula.ptg.ValueOperatorPtg instance -> a
    byte getSid() -> b
    int getNumberOfOperands() -> c
    java.lang.String toFormulaString(java.lang.String[]) -> a
org.apache.poi.ss.formula.ptg.TblPtg -> a.a.a.e.a.f.bc:
    int field_1_first_row -> a
    int field_2_first_col -> b
    void write(org.apache.poi.util.LittleEndianOutput) -> a
    int getSize() -> c_
    int getRow() -> b
    int getColumn() -> d
    java.lang.String toFormulaString() -> f
    java.lang.String toString() -> toString
org.apache.poi.ss.formula.ptg.UnaryMinusPtg -> a.a.a.e.a.f.bd:
    org.apache.poi.ss.formula.ptg.ValueOperatorPtg instance -> a
    byte getSid() -> b
    int getNumberOfOperands() -> c
    java.lang.String toFormulaString(java.lang.String[]) -> a
org.apache.poi.ss.formula.ptg.UnaryPlusPtg -> a.a.a.e.a.f.be:
    org.apache.poi.ss.formula.ptg.ValueOperatorPtg instance -> a
    byte getSid() -> b
    int getNumberOfOperands() -> c
    java.lang.String toFormulaString(java.lang.String[]) -> a
org.apache.poi.ss.formula.ptg.UnionPtg -> a.a.a.e.a.f.bf:
    org.apache.poi.ss.formula.ptg.OperationPtg instance -> a
    boolean isBaseToken() -> a
    int getSize() -> c_
    void write(org.apache.poi.util.LittleEndianOutput) -> a
    java.lang.String toFormulaString() -> f
    java.lang.String toFormulaString(java.lang.String[]) -> a
    int getNumberOfOperands() -> c
org.apache.poi.ss.formula.ptg.UnknownPtg -> a.a.a.e.a.f.bg:
    short size -> a
    int _sid -> b
    boolean isBaseToken() -> a
    void write(org.apache.poi.util.LittleEndianOutput) -> a
    int getSize() -> c_
    java.lang.String toFormulaString() -> f
org.apache.poi.ss.formula.ptg.ValueOperatorPtg -> a.a.a.e.a.f.bh:
    boolean isBaseToken() -> a
    void write(org.apache.poi.util.LittleEndianOutput) -> a
    byte getSid() -> b
    int getSize() -> c_
    java.lang.String toFormulaString() -> f
org.apache.poi.ss.formula.udf.AggregatingUDFFinder -> a.a.a.e.a.g.a:
    java.util.Collection _usedToolPacks -> a
org.apache.poi.ss.formula.udf.IndexedUDFFinder -> a.a.a.e.a.g.b:
    java.util.HashMap _funcMap -> a
org.apache.poi.ss.formula.udf.UDFFinder -> a.a.a.e.a.g.c:
    org.apache.poi.ss.formula.udf.UDFFinder DEFAULT -> b
org.apache.poi.ss.usermodel.BuiltinFormats -> a.a.a.e.b.a:
    java.lang.String[] _formats -> a
    void putFormat(java.util.List,int,java.lang.String) -> a
    java.lang.String[] getAll() -> a
    java.lang.String getBuiltinFormat(int) -> a
org.apache.poi.ss.usermodel.Cell -> a.a.a.e.b.b:
    double getNumericCellValue() -> d
    org.apache.poi.ss.usermodel.CellStyle getCellStyle() -> k
org.apache.poi.ss.usermodel.CellStyle -> a.a.a.e.b.c:
    short getDataFormat() -> a
    java.lang.String getDataFormatString() -> b
org.apache.poi.ss.usermodel.DateUtil -> a.a.a.e.b.d:
    java.util.regex.Pattern TIME_SEPARATOR_PATTERN -> a
    java.util.regex.Pattern date_ptrn1 -> b
    java.util.regex.Pattern date_ptrn2 -> c
    java.util.regex.Pattern date_ptrn3a -> d
    java.util.regex.Pattern date_ptrn3b -> e
    java.util.regex.Pattern date_ptrn4 -> f
    java.util.TimeZone TIMEZONE_UTC -> g
    int lastFormatIndex -> h
    java.lang.String lastFormatString -> i
    boolean cached -> j
    java.util.Date getJavaDate(double,boolean) -> a
    void setCalendar(java.util.Calendar,int,int,boolean,boolean) -> a
    java.util.Calendar getJavaCalendar(double,boolean,java.util.TimeZone,boolean) -> a
    boolean isADateFormat(int,java.lang.String) -> a
    boolean isInternalDateFormat(int) -> a
    boolean isCellDateFormatted(org.apache.poi.ss.usermodel.Cell) -> a
    boolean isValidExcelDate(double) -> a
org.apache.poi.ss.usermodel.ErrorConstants -> a.a.a.e.b.e:
    java.lang.String getText(int) -> a
    boolean isValidCode(int) -> b
org.apache.poi.ss.usermodel.Row -> a.a.a.e.b.f:
    org.apache.poi.ss.usermodel.Row$MissingCellPolicy RETURN_NULL_AND_BLANK -> c
    org.apache.poi.ss.usermodel.Row$MissingCellPolicy RETURN_BLANK_AS_NULL -> d
    org.apache.poi.ss.usermodel.Row$MissingCellPolicy CREATE_NULL_AS_BLANK -> e
org.apache.poi.ss.usermodel.Row$1 -> a.a.a.e.b.g:
org.apache.poi.ss.usermodel.Row$MissingCellPolicy -> a.a.a.e.b.h:
    int NEXT_ID -> b
    int id -> a
org.apache.poi.ss.usermodel.Sheet -> a.a.a.e.b.i:
org.apache.poi.ss.usermodel.Workbook -> a.a.a.e.b.j:
org.apache.poi.ss.util.AreaReference -> a.a.a.e.c.a:
    org.apache.poi.ss.util.CellReference _firstCell -> a
    org.apache.poi.ss.util.CellReference _lastCell -> b
    boolean _isSingleCell -> c
    boolean isWholeColumnReference(org.apache.poi.ss.util.CellReference,org.apache.poi.ss.util.CellReference) -> a
    boolean isWholeColumnReference() -> a
    java.lang.String formatAsString() -> b
    java.lang.String toString() -> toString
org.apache.poi.ss.util.CellRangeAddress -> a.a.a.e.c.b:
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    org.apache.poi.ss.util.CellRangeAddress copy() -> a
    int getEncodedSize(int) -> a
    java.lang.String formatAsString() -> b
    java.lang.String formatAsString(java.lang.String,boolean) -> a
org.apache.poi.ss.util.CellRangeAddressBase -> a.a.a.e.c.c:
    int _firstRow -> a
    int _firstCol -> b
    int _lastRow -> c
    int _lastCol -> d
    boolean isFullColumnRange() -> c
    boolean isFullRowRange() -> d
    int getFirstColumn() -> e
    int getFirstRow() -> f
    int getLastColumn() -> g
    int getLastRow() -> h
    java.lang.String toString() -> toString
org.apache.poi.ss.util.CellRangeAddressList -> a.a.a.e.c.d:
    java.util.List _list -> a
    int countRanges() -> a
    void addCellRangeAddress(org.apache.poi.ss.util.CellRangeAddress) -> a
    org.apache.poi.ss.util.CellRangeAddress getCellRangeAddress(int) -> a
    int getSize() -> b
    int getEncodedSize(int) -> b
    void serialize(org.apache.poi.util.LittleEndianOutput) -> a
    org.apache.poi.ss.util.CellRangeAddressList copy() -> c
org.apache.poi.ss.util.CellReference -> a.a.a.e.c.e:
    java.util.regex.Pattern CELL_REF_PATTERN -> a
    java.util.regex.Pattern COLUMN_REF_PATTERN -> b
    java.util.regex.Pattern ROW_REF_PATTERN -> c
    java.util.regex.Pattern NAMED_RANGE_NAME_PATTERN -> d
    int _rowIndex -> e
    int _colIndex -> f
    java.lang.String _sheetName -> g
    boolean _isRowAbs -> h
    boolean _isColAbs -> i
    int getRow() -> a
    short getCol() -> b
    boolean isRowAbsolute() -> c
    boolean isColAbsolute() -> d
    java.lang.String getSheetName() -> e
    boolean cellReferenceIsWithinRange(java.lang.String,java.lang.String,org.apache.poi.ss.SpreadsheetVersion) -> a
    boolean isColumnWithnRange(java.lang.String,org.apache.poi.ss.SpreadsheetVersion) -> a
    boolean isRowWithnRange(java.lang.String,org.apache.poi.ss.SpreadsheetVersion) -> b
    java.lang.String convertNumToColString(int) -> a
    java.lang.String formatAsString() -> f
    java.lang.String toString() -> toString
    void appendCellReference(java.lang.StringBuffer) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.poi.ss.util.ExpandedDouble -> a.a.a.e.c.f:
    java.math.BigInteger BI_FRAC_MASK -> a
    java.math.BigInteger BI_IMPLIED_FRAC_MSB -> b
    java.math.BigInteger _significand -> c
    int _binaryExponent -> d
    java.math.BigInteger getFrac(long) -> a
    org.apache.poi.ss.util.NormalisedDecimal normaliseBaseTen() -> a
    int getBinaryExponent() -> b
org.apache.poi.ss.util.MutableFPNumber -> a.a.a.e.c.g:
    java.math.BigInteger BI_MIN_BASE -> a
    java.math.BigInteger BI_MAX_BASE -> b
    java.math.BigInteger _significand -> c
    int _binaryExponent -> d
    void normalise64bit() -> a
    int get64BitNormalisedExponent() -> b
    boolean isBelowMaxRep() -> c
    boolean isAboveMinRep() -> d
    org.apache.poi.ss.util.NormalisedDecimal createNormalisedDecimal(int) -> a
    void multiplyByPowerOfTen(int) -> b
    void mulShift(java.math.BigInteger,int) -> a
org.apache.poi.ss.util.MutableFPNumber$Rounder -> a.a.a.e.c.h:
    java.math.BigInteger[] HALF_BITS -> a
    java.math.BigInteger round(java.math.BigInteger,int) -> a
org.apache.poi.ss.util.MutableFPNumber$TenPower -> a.a.a.e.c.i:
    java.math.BigInteger FIVE -> e
    org.apache.poi.ss.util.MutableFPNumber$TenPower[] _cache -> f
    java.math.BigInteger _multiplicand -> a
    java.math.BigInteger _divisor -> b
    int _divisorShift -> c
    int _multiplierShift -> d
    org.apache.poi.ss.util.MutableFPNumber$TenPower getInstance(int) -> a
org.apache.poi.ss.util.NormalisedDecimal -> a.a.a.e.c.j:
    java.math.BigDecimal BD_2_POW_24 -> a
    int _relativeDecimalExponent -> b
    long _wholePart -> c
    int _fractionalPart -> d
    org.apache.poi.ss.util.NormalisedDecimal create(java.math.BigInteger,int) -> a
    org.apache.poi.ss.util.NormalisedDecimal roundUnits() -> a
    java.lang.String getSignificantDecimalDigits() -> b
    java.lang.String getSignificantDecimalDigitsLastDigitRounded() -> c
    int getDecimalExponent() -> d
    java.math.BigDecimal getFractionalPart() -> e
    java.lang.String getFractionalDigits() -> f
    java.lang.String toString() -> toString
org.apache.poi.ss.util.NumberToTextConverter -> a.a.a.e.c.k:
    java.lang.String toText(double) -> a
    java.lang.String rawDoubleBitsToText(long) -> a
    void convertToText(java.lang.StringBuilder,org.apache.poi.ss.util.NormalisedDecimal) -> a
    void formatLessThanOne(java.lang.StringBuilder,java.lang.String,int,int) -> a
    void formatGreaterThanOne(java.lang.StringBuilder,java.lang.String,int,int) -> b
    boolean needsScientificNotation(int) -> a
    int countSignifantDigits(java.lang.String) -> a
    void appendExp(java.lang.StringBuilder,int) -> a
org.apache.poi.ss.util.WorkbookUtil -> a.a.a.e.c.l:
    void validateSheetName(java.lang.String) -> a
org.apache.poi.util.ArrayUtil -> a.a.a.f.a:
    void arraycopy(byte[],int,byte[],int,int) -> a
    byte[] copyOfRange(byte[],int,int) -> a
org.apache.poi.util.BitField -> a.a.a.f.b:
    int _mask -> a
    int _shift_count -> b
    int getValue(int) -> a
    short getShortValue(short) -> a
    int getRawValue(int) -> b
    boolean isSet(int) -> c
    int setValue(int,int) -> a
    int clear(int) -> d
    short clearShort(short) -> b
    byte clearByte(byte) -> a
    int set(int) -> e
    short setShort(short) -> c
    byte setByte(byte) -> b
    int setBoolean(int,boolean) -> a
    short setShortBoolean(short,boolean) -> a
org.apache.poi.util.BitFieldFactory -> a.a.a.f.c:
    java.util.Map instances -> a
    org.apache.poi.util.BitField getInstance(int) -> a
org.apache.poi.util.ByteField -> a.a.a.f.d:
    byte _value -> a
    int _offset -> b
    void set(byte) -> a
    void set(byte,byte[]) -> a
    void readFromBytes(byte[]) -> a
    void writeToBytes(byte[]) -> b
    java.lang.String toString() -> toString
org.apache.poi.util.Configurator -> a.a.a.f.e:
    org.apache.poi.util.POILogger logger -> a
    int getIntValue(java.lang.String,int) -> a
org.apache.poi.util.DelayableLittleEndianOutput -> a.a.a.f.f:
    org.apache.poi.util.LittleEndianOutput createDelayedOutput(int) -> a
org.apache.poi.util.HexDump -> a.a.a.f.g:
    java.lang.String EOL -> a
    char[] _hexcodes -> b
    int[] _shifts -> c
    java.lang.String toHex(byte[]) -> a
    java.lang.String toHex(short) -> a
    java.lang.String toHex(byte) -> a
    java.lang.String toHex(int) -> a
    java.lang.String toHex(long,int) -> a
    char[] toHexChars(long,int) -> b
    char[] longToHex(long) -> a
    char[] intToHex(int) -> b
    char[] shortToHex(int) -> c
    char[] byteToHex(int) -> d
org.apache.poi.util.HexRead -> a.a.a.f.h:
    byte[] readData(java.io.InputStream,int) -> a
    byte[] readFromString(java.lang.String) -> a
    void readToEOL(java.io.InputStream) -> a
org.apache.poi.util.IOUtils -> a.a.a.f.i:
    org.apache.poi.util.POILogger logger -> a
    int readFully(java.io.InputStream,byte[]) -> a
    int readFully(java.io.InputStream,byte[],int,int) -> a
org.apache.poi.util.IntList -> a.a.a.f.j:
    int[] _array -> a
    int _limit -> b
    int fillval -> c
    void fillArray(int,int[],int) -> a
    boolean add(int) -> a
    boolean addAll(org.apache.poi.util.IntList) -> a
    boolean equals(java.lang.Object) -> equals
    int get(int) -> b
    int hashCode() -> hashCode
    int size() -> a
    void growArray(int) -> c
org.apache.poi.util.IntMapper -> a.a.a.f.k:
    java.util.List elements -> a
    java.util.Map valueKeyMap -> b
    boolean add(java.lang.Object) -> a
    int size() -> a
    java.lang.Object get(int) -> a
    int getIndex(java.lang.Object) -> b
org.apache.poi.util.IntegerField -> a.a.a.f.l:
    int _value -> a
    int _offset -> b
    int get() -> a
    void set(int,byte[]) -> a
    void readFromBytes(byte[]) -> a
    void writeToBytes(byte[]) -> b
    java.lang.String toString() -> toString
org.apache.poi.util.LittleEndian -> a.a.a.f.m:
    int getInt(byte[]) -> a
    int getInt(byte[],int) -> a
    long getLong(byte[],int) -> b
    short getShort(byte[]) -> b
    short getShort(byte[],int) -> c
    int getUShort(byte[]) -> c
    int getUShort(byte[],int) -> d
    void putInt(byte[],int,int) -> a
    void putLong(byte[],int,long) -> a
    void putShort(byte[],int,short) -> a
org.apache.poi.util.LittleEndianByteArrayInputStream -> a.a.a.f.n:
    byte[] _buf -> a
    int _endIndex -> b
    int _readIndex -> c
    int available() -> available
    void checkPosition(int) -> a
    byte readByte() -> d
    int readInt() -> f
    long readLong() -> g
    short readShort() -> e
    int readUByte() -> h
    int readUShort() -> i
    void readFully(byte[],int,int) -> a
    double readDouble() -> j
org.apache.poi.util.LittleEndianByteArrayOutputStream -> a.a.a.f.o:
    byte[] _buf -> a
    int _endIndex -> b
    int _writeIndex -> c
    void checkPosition(int) -> e
    void writeByte(int) -> b
    void writeDouble(double) -> a
    void writeInt(int) -> c
    void writeLong(long) -> a
    void writeShort(int) -> d
    void write(byte[]) -> a
    void write(byte[],int,int) -> a
    int getWriteIndex() -> a
    org.apache.poi.util.LittleEndianOutput createDelayedOutput(int) -> a
org.apache.poi.util.LittleEndianInput -> a.a.a.f.p:
    int available() -> available
    byte readByte() -> d
    int readUByte() -> h
    short readShort() -> e
    int readUShort() -> i
    int readInt() -> f
    long readLong() -> g
    double readDouble() -> j
    void readFully(byte[],int,int) -> a
org.apache.poi.util.LittleEndianInputStream -> a.a.a.f.q:
    int available() -> available
    byte readByte() -> d
    int readUByte() -> h
    double readDouble() -> j
    int readInt() -> f
    long readLong() -> g
    short readShort() -> e
    int readUShort() -> i
    void checkEOF(int) -> a
    void readFully(byte[],int,int) -> a
org.apache.poi.util.LittleEndianOutput -> a.a.a.f.r:
    void writeByte(int) -> b
    void writeShort(int) -> d
    void writeInt(int) -> c
    void writeLong(long) -> a
    void writeDouble(double) -> a
    void write(byte[]) -> a
    void write(byte[],int,int) -> a
org.apache.poi.util.LongField -> a.a.a.f.s:
    long _value -> a
    int _offset -> b
    void set(long,byte[]) -> a
    void writeToBytes(byte[]) -> a
    java.lang.String toString() -> toString
org.apache.poi.util.NullLogger -> a.a.a.f.t:
    void initialize(java.lang.String) -> a
    void log(int,java.lang.Object) -> a
    boolean check(int) -> a
    void log(int,java.lang.Object,java.lang.Object) -> a
    void log(int,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> a
org.apache.poi.util.POILogFactory -> a.a.a.f.u:
    java.util.Map _loggers -> a
    org.apache.poi.util.POILogger _nullLogger -> b
    java.lang.String _loggerClassName -> c
    org.apache.poi.util.POILogger getLogger(java.lang.Class) -> a
    org.apache.poi.util.POILogger getLogger(java.lang.String) -> a
org.apache.poi.util.POILogger -> a.a.a.f.v:
    java.lang.String[] LEVEL_STRINGS_SHORT -> a
    java.lang.String[] LEVEL_STRINGS -> b
    void initialize(java.lang.String) -> a
    void log(int,java.lang.Object) -> a
    boolean check(int) -> a
    void log(int,java.lang.Object,java.lang.Object) -> a
    void log(int,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> a
org.apache.poi.util.RecordFormatException -> a.a.a.f.w:
org.apache.poi.util.ShortField -> a.a.a.f.x:
    short _value -> a
    int _offset -> b
    short get() -> a
    void set(short,byte[]) -> a
    void readFromBytes(byte[]) -> a
    void writeToBytes(byte[]) -> b
    java.lang.String toString() -> toString
org.apache.poi.util.StringUtil -> a.a.a.f.y:
    java.lang.String readCompressedUnicode(org.apache.poi.util.LittleEndianInput,int) -> a
    java.lang.String readUnicodeString(org.apache.poi.util.LittleEndianInput) -> a
    void writeUnicodeString(org.apache.poi.util.LittleEndianOutput,java.lang.String) -> a
    void writeUnicodeStringFlagAndData(org.apache.poi.util.LittleEndianOutput,java.lang.String) -> b
    int getEncodedSize(java.lang.String) -> a
    void putCompressedUnicode(java.lang.String,org.apache.poi.util.LittleEndianOutput) -> a
    void putUnicodeLE(java.lang.String,org.apache.poi.util.LittleEndianOutput) -> b
    java.lang.String readUnicodeLE(org.apache.poi.util.LittleEndianInput,int) -> b
    boolean hasMultibyte(java.lang.String) -> b
